{"id":"9cedc2184c35f84760ebd30c78196d1a","_format":"hh-sol-build-info-1","solcVersion":"0.8.28","solcLongVersion":"0.8.28+commit.7893614a","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC5267.sol)\n\npragma solidity ^0.8.20;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/ERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20Permit} from \"./IERC20Permit.sol\";\nimport {ERC20} from \"../ERC20.sol\";\nimport {ECDSA} from \"../../../utils/cryptography/ECDSA.sol\";\nimport {EIP712} from \"../../../utils/cryptography/EIP712.sol\";\nimport {Nonces} from \"../../../utils/Nonces.sol\";\n\n/**\n * @dev Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\nabstract contract ERC20Permit is ERC20, IERC20Permit, EIP712, Nonces {\n    bytes32 private constant PERMIT_TYPEHASH =\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n\n    /**\n     * @dev Permit deadline has expired.\n     */\n    error ERC2612ExpiredSignature(uint256 deadline);\n\n    /**\n     * @dev Mismatched signature.\n     */\n    error ERC2612InvalidSigner(address signer, address owner);\n\n    /**\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n     *\n     * It's a good idea to use the same `name` that is defined as the ERC-20 token name.\n     */\n    constructor(string memory name) EIP712(name, \"1\") {}\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual {\n        if (block.timestamp > deadline) {\n            revert ERC2612ExpiredSignature(deadline);\n        }\n\n        bytes32 structHash = keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\n\n        bytes32 hash = _hashTypedDataV4(structHash);\n\n        address signer = ECDSA.recover(hash, v, r, s);\n        if (signer != owner) {\n            revert ERC2612InvalidSigner(signer, owner);\n        }\n\n        _approve(owner, spender, value);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {\n        return super.nonces(owner);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes memory signature\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            assembly (\"memory-safe\") {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.20;\n\nimport {MessageHashUtils} from \"./MessageHashUtils.sol\";\nimport {ShortStrings, ShortString} from \"../ShortStrings.sol\";\nimport {IERC5267} from \"../../interfaces/IERC5267.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n * encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n * does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n * produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    string private _nameFallback;\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @dev See {IERC-5267}.\n     */\n    function eip712Domain()\n        public\n        view\n        virtual\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _EIP712Name(),\n            _EIP712Version(),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n\n    /**\n     * @dev The name parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _name which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Name() internal view returns (string memory) {\n        return _name.toStringWithFallback(_nameFallback);\n    }\n\n    /**\n     * @dev The version parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _version which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Version() internal view returns (string memory) {\n        return _version.toStringWithFallback(_versionFallback);\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n            // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2²⁵⁶ + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 exp;\n        unchecked {\n            exp = 128 * SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 64 * SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 32 * SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 16 * SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 8 * SafeCast.toUint(value > (1 << 8) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 4 * SafeCast.toUint(value > (1 << 4) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 2 * SafeCast.toUint(value > (1 << 2) - 1);\n            value >>= exp;\n            result += exp;\n\n            result += SafeCast.toUint(value > 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 isGt;\n        unchecked {\n            isGt = SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= isGt * 128;\n            result += isGt * 16;\n\n            isGt = SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= isGt * 64;\n            result += isGt * 8;\n\n            isGt = SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= isGt * 32;\n            result += isGt * 4;\n\n            isGt = SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= isGt * 16;\n            result += isGt * 2;\n\n            result += SafeCast.toUint(value > (1 << 8) - 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Nonces.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Nonces.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides tracking nonces for addresses. Nonces will only increment.\n */\nabstract contract Nonces {\n    /**\n     * @dev The nonce used for an `account` is not the expected current nonce.\n     */\n    error InvalidAccountNonce(address account, uint256 currentNonce);\n\n    mapping(address account => uint256) private _nonces;\n\n    /**\n     * @dev Returns the next unused nonce for an address.\n     */\n    function nonces(address owner) public view virtual returns (uint256) {\n        return _nonces[owner];\n    }\n\n    /**\n     * @dev Consumes a nonce.\n     *\n     * Returns the current value and increments nonce.\n     */\n    function _useNonce(address owner) internal virtual returns (uint256) {\n        // For each account, the nonce has an initial value of 0, can only be incremented by one, and cannot be\n        // decremented or reset. This guarantees that the nonce never overflows.\n        unchecked {\n            // It is important to do x++ and not ++x here.\n            return _nonces[owner]++;\n        }\n    }\n\n    /**\n     * @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`.\n     */\n    function _useCheckedNonce(address owner, uint256 nonce) internal virtual {\n        uint256 current = _useNonce(owner);\n        if (nonce != current) {\n            revert InvalidAccountNonce(owner, current);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/ShortStrings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        assembly (\"memory-safe\") {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n     * {setWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guaratees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(buffer, add(0x20, offset)))\n        }\n    }\n}\n"},"contracts/MusicContract.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.28;\n\nimport \"./OysterToken.sol\";\n\ncontract MusicContract {\n\n    OysterToken oysterTokenContract;\n    OysterVault oysterVaultContract;\n\n    uint256 public rightPurchaseValueInGwei;\n    uint256 public valueForListeningInGwei;\n\n    address public owner;\n    mapping(address => uint8) public divisionOfRights;\n    uint8 public remainingRightsDivision;\n    address[] public rightHolders;\n    bool public musicContactIsSealed;\n    uint256 public balanceTokens;\n    mapping(address => uint256) public tokensPerAddress;\n\n    event assignedRight(address indexed addressRight, address indexed addressThisMusicContract, uint8 percentageOfRights);\n    event withdrawalRight(address indexed addressRight, address indexed addressThisMusicContract, uint8 percentageOfRights);\n    event musicWithSealedRights(address indexed addressThisMusicContract, bool musicContactIsSealed);\n    event tokenAssigned(address indexed addressHolderToken, uint256 amountToken);\n    event purchaseMade(address indexed purchaseAddress, bool activated);\n    event musicHeard(address indexed hearAddress, bool confirm);\n    \n    modifier onlyOwner() {\n        require(msg.sender == owner, \"This function can only be called by the owner address\");\n        _;\n    }\n\n    modifier isSealed() {\n       require(musicContactIsSealed, \"The contract is not sealed. This transaction can only be done with a sealed contract\");\n        _;\n    }\n\n    constructor(OysterToken _oysterTokenContract, OysterVault _oysterVaultContract, \n        uint256 _rightPurchaseValue, uint256 _valueForListening) {\n\n        remainingRightsDivision = 100;\n        oysterTokenContract = _oysterTokenContract;\n        oysterVaultContract = _oysterVaultContract;\n        rightPurchaseValueInGwei = _rightPurchaseValue;\n        valueForListeningInGwei = _valueForListening;\n        owner = msg.sender;\n\n    }\n\n    receive() external payable {}\n\n    // Função para atribuir direitos da musica a um endereço\n    function assignRights(address addressRight, uint8 percentageOfRights) external onlyOwner returns (bool) {\n        require(!musicContactIsSealed, \"The contract is already sealed, no modification of rights can be made\");\n        require(percentageOfRights > 0, \"Percentage of rights must be greater than 0\");\n        require(percentageOfRights <= remainingRightsDivision, \"percentage of entitlements remaining is less than the requested amount\");\n\n        if (divisionOfRights[addressRight] == 0) {\n            rightHolders.push(addressRight);\n        } \n\n        divisionOfRights[addressRight] += percentageOfRights;\n        remainingRightsDivision -= percentageOfRights;\n\n        emit assignedRight(addressRight, address(this), percentageOfRights);\n\n        return true;\n    }\n\n    // Função para retirar direitos da musica de um endereço\n    function withdrawRights(address addressRight, uint8 percentageOfRights) external onlyOwner returns (bool) {\n        require(!musicContactIsSealed, \"The contract is already sealed, no modification of rights can be made\");\n        require(divisionOfRights[addressRight] != 0, \"No rights have been defined for this address\");\n        require(divisionOfRights[addressRight] >= percentageOfRights, \"It is not possible to remove more rights than this address has\");\n\n        divisionOfRights[addressRight] -= percentageOfRights;\n        remainingRightsDivision += percentageOfRights;\n\n        if(divisionOfRights[addressRight] == 0) {\n            removeRightHolder(addressRight);\n        }\n\n        emit withdrawalRight(addressRight, address(this), percentageOfRights);\n        return true;\n    }\n    \n    // Função para remover um dono de direito\n    function removeRightHolder(address _address) internal {\n        uint256 index = findIndex(_address);\n\n        rightHolders[index] = rightHolders[rightHolders.length - 1];\n\n        rightHolders.pop();\n    }\n\n    // Função para encontrar o índice de um endereço no array rightHolders\n    function findIndex(address _address) internal view returns (uint256) {\n        for (uint256 i = 0; i < rightHolders.length; i++) {\n            if (rightHolders[i] == _address) {\n                return i;\n            }\n        }\n\n        return rightHolders.length;\n    }\n\n    // Função para selar os direitos da musica (impedir modificações)\n    function sealRights() external onlyOwner returns (bool) {\n        require(remainingRightsDivision == 0, \"The remaining divisions of rights must be 0 to seal this contract\");\n\n        musicContactIsSealed = true;\n        emit musicWithSealedRights(address(this), true);\n        return true;\n    }\n\n    // Função para comprar 100 OysterTokens\n    function buy100OysterToken() external payable isSealed returns (bool) {\n        require(divisionOfRights[msg.sender] != 0, \"This function cannot be called by anyone who does not have rights to the song\");\n        require(address(this).balance >= 5300000 * 1e9, \"Insufficient Ether sent to buy tokens. Must have at least 0.0053 Ether\");\n\n        oysterTokenContract.buy100OSTToMusicContract{value: address(this).balance}();\n\n        balanceTokens += 100;\n        approveVaultTransfer(100);\n        tokenSplit();\n\n        return true;\n    }  \n\n    // Função para aprovar o OysterVault a transferir tokens\n    function approveVaultTransfer(uint256 amount) internal returns (bool) {\n        oysterTokenContract.approve(address(oysterVaultContract), amount);\n        return true;\n    }\n\n    // Função para dividir os tokens entre os donos dos direitos da música\n    function tokenSplit() internal returns (bool) {\n\n        for (uint256 i = 0; i < rightHolders.length; i++) {\n            tokensPerAddress[rightHolders[i]] += divisionOfRights[rightHolders[i]];      \n            emit tokenAssigned(rightHolders[i], divisionOfRights[rightHolders[i]]);\n        }\n\n        return true;\n    }\n\n    // Função para vender Oyster Token\n    function sellOysterToken(uint256 amount) external isSealed returns (bool) {\n        require(divisionOfRights[msg.sender] != 0, \"This function cannot be called by anyone who does not have rights to the song\");\n        require(amount > 0, \"Number of tokens for requested transfer must be greater than 0\");\n        require(tokensPerAddress[msg.sender] >= amount, \"Number of tokens unavailable\");\n\n        oysterTokenContract.sellOysterToken(msg.sender, amount);\n        tokensPerAddress[msg.sender] -= amount;\n        balanceTokens -= amount;\n\n        return true;\n    }\n\n    // Função para comprar direitos \n    function buyRightsMusic() external payable isSealed returns (bool) {\n        uint256 valueBuyRight = rightPurchaseValueInGwei * 1e9;\n        require(msg.value >= valueBuyRight, \"insufficient value to purchase the music rights\");\n\n        uint256 remainingValue = msg.value - valueBuyRight;\n        emit purchaseMade(msg.sender, true);\n        payable(msg.sender).transfer(remainingValue);\n        \n        return true;\n    }\n\n    // Função para ouvir musica\n    function listenMusic() external payable isSealed returns (bool) {\n        uint256 valueListen = valueForListeningInGwei * 1e9;\n        require(msg.value >= valueListen, \"insufficient value to listen the music rights\");\n\n        uint256 remainingValue = msg.value - valueListen;\n        emit musicHeard(msg.sender, true);\n        payable(msg.sender).transfer(remainingValue);\n        \n        return true;\n    }\n\n    // Função para ver o saldo desse contrato\n    function viewBalance() external view returns (uint256) {\n        return address(this).balance;\n    }\n\n}"},"contracts/OysterToken.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.28;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\";\n\ncontract OysterToken is ERC20, Ownable, ERC20Permit {\n    OysterVault public vault;\n    mapping(address => bool) public validMusicContracts;\n\n    event validatedMusicContract(address indexed _address, bool valid);\n    event WeiRefunded(address indexed to, uint256 weiAmount);\n    event transferViaTokenSale(address indexed to, uint256 weiAmount);\n\n    modifier onlyValidMusicContract() {\n        require(validMusicContracts[msg.sender], \"This function can only be called by the valid MusicContract address\");\n        _;\n    }\n\n    constructor(address initialOwner) \n        ERC20(\"OysterToken\", \"OST\") \n        Ownable(initialOwner) \n        ERC20Permit(\"OysterToken\") \n    {}\n\n    // Função para configurar o endereço do Vault após a implantação\n    function setVault(OysterVault _vault) external onlyOwner {\n        require(address(_vault) != address(0), \"Invalid vault address\");  // Verificar se o novo endereço do vault é válido\n        require(address(vault) == address(0), \"Vault already set\");        // Verificar se o vault já foi configurado\n        vault = _vault;\n    }\n\n    // Mint para o Vault\n    function mintToVault(uint256 amount) external onlyOwner {\n        require(address(vault) != address(0), \"Vault address not set\");\n        _mint(address(vault), amount);\n    }\n\n    // Adicionar o endereço e validar de um contract de música\n    function validateMusicContracts(address addressMusicContract) external onlyOwner returns (bool) {\n        validMusicContracts[addressMusicContract] = true;\n\n        emit validatedMusicContract(addressMusicContract, true);\n        return true;\n    }\n\n    // Função de comprar 100 tokens para o contrato de música\n    function buy100OSTToMusicContract() external payable onlyValidMusicContract returns (bool) {\n        uint256 businessRateWei = 200_000 * 1e9; \n        uint256 tokensToBuy = 100;\n        uint256 gweiPerToken = 50_000; \n\n        uint256 weiRequired = tokensToBuy * gweiPerToken * 1e9 + businessRateWei;\n\n        require(msg.value >= weiRequired, \"Insufficient Wei sent to buy tokens\");\n\n        uint256 remainingWei = msg.value - weiRequired;\n\n        // Garante que há tokens suficientes no vault antes de continuar\n        require(vault.viewTokensVault() >= tokensToBuy, \"Not enough tokens in OysterToken contract\");\n\n        // Transfere o troco antes de realizar outras operações externas\n        if (remainingWei > 0) {\n            (bool success, ) = payable(msg.sender).call{value: remainingWei}(\"\");\n            require(success, \"Failed to send remaining Ether\");\n        }\n\n        // Garante a transferência de tokens\n        vault.sendToken(msg.sender, tokensToBuy);\n\n        emit WeiRefunded(msg.sender, remainingWei);\n        return true;\n    }\n\n\n    // Função para vender tokens\n    function sellOysterToken(address holder, uint256 amount) external payable onlyValidMusicContract returns (bool) {\n        require(amount > 0, \"Amount must be greater than zero\");\n\n        vault.receiveTokens(msg.sender, amount);\n        uint256 tokenValueInWei = 50000 * 1e9;\n        uint256 amountTransfer = tokenValueInWei * amount;\n        payable(holder).transfer(amountTransfer);\n\n        emit transferViaTokenSale(holder, amountTransfer);\n        return true;\n    }\n\n}\n\ncontract OysterVault is Ownable {\n    IERC20 public oysterToken;\n\n    event TokensDistributed(address indexed to, uint256 amount);\n    event TokensRecieved(address indexed from, uint256 amount);\n\n    modifier onlyOysterToken() {\n        require(msg.sender == address(oysterToken), \"This function can only be called by the oysterToken address\");\n        _;\n    }\n\n    constructor(IERC20 _oysterToken, address initialOwner) Ownable(initialOwner) {\n        oysterToken = _oysterToken;\n    }\n\n    function sendToken(address musicContract, uint256 amount) external onlyOysterToken returns (bool) {\n        require(amount > 0, \"Amount must be greater than zero\");\n        require(\n            oysterToken.balanceOf(address(this)) >= amount,\n            \"Vault does not have enough tokens\"\n        );\n        require(\n            oysterToken.transfer(musicContract, amount),\n            \"Token transfer failed\"\n        );\n\n        emit TokensDistributed(musicContract, amount);\n        return true;\n    }\n\n    function receiveTokens(address musicContract, uint256 amount) external onlyOysterToken returns (bool) {\n        bool success = IERC20(oysterToken).transferFrom(musicContract, address(this), amount);\n\n        require(success, \"Token transfer failed\");\n\n        emit TokensRecieved(musicContract, amount);\n        return true;\n    }\n\n    function viewTokensVault() external view returns (uint256) {\n        return oysterToken.balanceOf(address(this));\n    }\n}"}},"settings":{"optimizer":{"enabled":true,"runs":200},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[1148],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":1149,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1148,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":1148,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,1148],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","exportedSymbols":{"IERC5267":[172]},"id":173,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC5267","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":172,"linearizedBaseContracts":[172],"name":"IERC5267","nameLocation":"143:8:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"158:84:1","text":" @dev MAY be emitted to signal that the domain could have changed."},"eventSelector":"0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31","id":152,"name":"EIP712DomainChanged","nameLocation":"253:19:1","nodeType":"EventDefinition","parameters":{"id":151,"nodeType":"ParameterList","parameters":[],"src":"272:2:1"},"src":"247:28:1"},{"documentation":{"id":153,"nodeType":"StructuredDocumentation","src":"281:140:1","text":" @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."},"functionSelector":"84b0196e","id":171,"implemented":false,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"435:12:1","nodeType":"FunctionDefinition","parameters":{"id":154,"nodeType":"ParameterList","parameters":[],"src":"447:2:1"},"returnParameters":{"id":170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":156,"mutability":"mutable","name":"fields","nameLocation":"517:6:1","nodeType":"VariableDeclaration","scope":171,"src":"510:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":155,"name":"bytes1","nodeType":"ElementaryTypeName","src":"510:6:1","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":158,"mutability":"mutable","name":"name","nameLocation":"551:4:1","nodeType":"VariableDeclaration","scope":171,"src":"537:18:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":157,"name":"string","nodeType":"ElementaryTypeName","src":"537:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":160,"mutability":"mutable","name":"version","nameLocation":"583:7:1","nodeType":"VariableDeclaration","scope":171,"src":"569:21:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":159,"name":"string","nodeType":"ElementaryTypeName","src":"569:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":162,"mutability":"mutable","name":"chainId","nameLocation":"612:7:1","nodeType":"VariableDeclaration","scope":171,"src":"604:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":161,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":164,"mutability":"mutable","name":"verifyingContract","nameLocation":"641:17:1","nodeType":"VariableDeclaration","scope":171,"src":"633:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":163,"name":"address","nodeType":"ElementaryTypeName","src":"633:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":166,"mutability":"mutable","name":"salt","nameLocation":"680:4:1","nodeType":"VariableDeclaration","scope":171,"src":"672:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":165,"name":"bytes32","nodeType":"ElementaryTypeName","src":"672:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":169,"mutability":"mutable","name":"extensions","nameLocation":"715:10:1","nodeType":"VariableDeclaration","scope":171,"src":"698:27:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":167,"name":"uint256","nodeType":"ElementaryTypeName","src":"698:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":168,"nodeType":"ArrayTypeName","src":"698:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"496:239:1"},"scope":172,"src":"426:310:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":173,"src":"133:605:1","usedErrors":[],"usedEvents":[152]}],"src":"107:632:1"},"id":1},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[309],"IERC20Errors":[214],"IERC721Errors":[262]},"id":310,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":174,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":175,"nodeType":"StructuredDocumentation","src":"138:141:2","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":214,"linearizedBaseContracts":[214],"name":"IERC20Errors","nameLocation":"290:12:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":176,"nodeType":"StructuredDocumentation","src":"309:309:2","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":184,"name":"ERC20InsufficientBalance","nameLocation":"629:24:2","nodeType":"ErrorDefinition","parameters":{"id":183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":178,"mutability":"mutable","name":"sender","nameLocation":"662:6:2","nodeType":"VariableDeclaration","scope":184,"src":"654:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":177,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":180,"mutability":"mutable","name":"balance","nameLocation":"678:7:2","nodeType":"VariableDeclaration","scope":184,"src":"670:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":179,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":182,"mutability":"mutable","name":"needed","nameLocation":"695:6:2","nodeType":"VariableDeclaration","scope":184,"src":"687:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":181,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:2"},"src":"623:80:2"},{"documentation":{"id":185,"nodeType":"StructuredDocumentation","src":"709:152:2","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":189,"name":"ERC20InvalidSender","nameLocation":"872:18:2","nodeType":"ErrorDefinition","parameters":{"id":188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":187,"mutability":"mutable","name":"sender","nameLocation":"899:6:2","nodeType":"VariableDeclaration","scope":189,"src":"891:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":186,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:2"},"src":"866:41:2"},{"documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"913:159:2","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":194,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:2","nodeType":"ErrorDefinition","parameters":{"id":193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":192,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:2","nodeType":"VariableDeclaration","scope":194,"src":"1104:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":191,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:2"},"src":"1077:45:2"},{"documentation":{"id":195,"nodeType":"StructuredDocumentation","src":"1128:345:2","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":203,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:2","nodeType":"ErrorDefinition","parameters":{"id":202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":197,"mutability":"mutable","name":"spender","nameLocation":"1519:7:2","nodeType":"VariableDeclaration","scope":203,"src":"1511:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":196,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":199,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:2","nodeType":"VariableDeclaration","scope":203,"src":"1528:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":198,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":201,"mutability":"mutable","name":"needed","nameLocation":"1555:6:2","nodeType":"VariableDeclaration","scope":203,"src":"1547:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":200,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:2"},"src":"1478:85:2"},{"documentation":{"id":204,"nodeType":"StructuredDocumentation","src":"1569:174:2","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":208,"name":"ERC20InvalidApprover","nameLocation":"1754:20:2","nodeType":"ErrorDefinition","parameters":{"id":207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":206,"mutability":"mutable","name":"approver","nameLocation":"1783:8:2","nodeType":"VariableDeclaration","scope":208,"src":"1775:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":205,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:2"},"src":"1748:45:2"},{"documentation":{"id":209,"nodeType":"StructuredDocumentation","src":"1799:195:2","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":213,"name":"ERC20InvalidSpender","nameLocation":"2005:19:2","nodeType":"ErrorDefinition","parameters":{"id":212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":211,"mutability":"mutable","name":"spender","nameLocation":"2033:7:2","nodeType":"VariableDeclaration","scope":213,"src":"2025:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":210,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:2"},"src":"1999:43:2"}],"scope":310,"src":"280:1764:2","usedErrors":[184,189,194,203,208,213],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":215,"nodeType":"StructuredDocumentation","src":"2046:143:2","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":262,"linearizedBaseContracts":[262],"name":"IERC721Errors","nameLocation":"2200:13:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":216,"nodeType":"StructuredDocumentation","src":"2220:219:2","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":220,"name":"ERC721InvalidOwner","nameLocation":"2450:18:2","nodeType":"ErrorDefinition","parameters":{"id":219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":218,"mutability":"mutable","name":"owner","nameLocation":"2477:5:2","nodeType":"VariableDeclaration","scope":220,"src":"2469:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":217,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:2"},"src":"2444:40:2"},{"documentation":{"id":221,"nodeType":"StructuredDocumentation","src":"2490:132:2","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":225,"name":"ERC721NonexistentToken","nameLocation":"2633:22:2","nodeType":"ErrorDefinition","parameters":{"id":224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":223,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:2","nodeType":"VariableDeclaration","scope":225,"src":"2656:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":222,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:2"},"src":"2627:46:2"},{"documentation":{"id":226,"nodeType":"StructuredDocumentation","src":"2679:289:2","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":234,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:2","nodeType":"ErrorDefinition","parameters":{"id":233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":228,"mutability":"mutable","name":"sender","nameLocation":"3008:6:2","nodeType":"VariableDeclaration","scope":234,"src":"3000:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":227,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":230,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:2","nodeType":"VariableDeclaration","scope":234,"src":"3016:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":229,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":232,"mutability":"mutable","name":"owner","nameLocation":"3041:5:2","nodeType":"VariableDeclaration","scope":234,"src":"3033:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":231,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:2"},"src":"2973:75:2"},{"documentation":{"id":235,"nodeType":"StructuredDocumentation","src":"3054:152:2","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":239,"name":"ERC721InvalidSender","nameLocation":"3217:19:2","nodeType":"ErrorDefinition","parameters":{"id":238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":237,"mutability":"mutable","name":"sender","nameLocation":"3245:6:2","nodeType":"VariableDeclaration","scope":239,"src":"3237:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":236,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:2"},"src":"3211:42:2"},{"documentation":{"id":240,"nodeType":"StructuredDocumentation","src":"3259:159:2","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":244,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:2","nodeType":"ErrorDefinition","parameters":{"id":243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":242,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:2","nodeType":"VariableDeclaration","scope":244,"src":"3451:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":241,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:2"},"src":"3423:46:2"},{"documentation":{"id":245,"nodeType":"StructuredDocumentation","src":"3475:247:2","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":251,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:2","nodeType":"ErrorDefinition","parameters":{"id":250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":247,"mutability":"mutable","name":"operator","nameLocation":"3768:8:2","nodeType":"VariableDeclaration","scope":251,"src":"3760:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":246,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":249,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:2","nodeType":"VariableDeclaration","scope":251,"src":"3778:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":248,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:2"},"src":"3727:68:2"},{"documentation":{"id":252,"nodeType":"StructuredDocumentation","src":"3801:174:2","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":256,"name":"ERC721InvalidApprover","nameLocation":"3986:21:2","nodeType":"ErrorDefinition","parameters":{"id":255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":254,"mutability":"mutable","name":"approver","nameLocation":"4016:8:2","nodeType":"VariableDeclaration","scope":256,"src":"4008:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":253,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:2"},"src":"3980:46:2"},{"documentation":{"id":257,"nodeType":"StructuredDocumentation","src":"4032:197:2","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":261,"name":"ERC721InvalidOperator","nameLocation":"4240:21:2","nodeType":"ErrorDefinition","parameters":{"id":260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":259,"mutability":"mutable","name":"operator","nameLocation":"4270:8:2","nodeType":"VariableDeclaration","scope":261,"src":"4262:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":258,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:2"},"src":"4234:46:2"}],"scope":310,"src":"2190:2092:2","usedErrors":[220,225,234,239,244,251,256,261],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":263,"nodeType":"StructuredDocumentation","src":"4284:145:2","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":309,"linearizedBaseContracts":[309],"name":"IERC1155Errors","nameLocation":"4440:14:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":264,"nodeType":"StructuredDocumentation","src":"4461:361:2","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":274,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:2","nodeType":"ErrorDefinition","parameters":{"id":273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":266,"mutability":"mutable","name":"sender","nameLocation":"4868:6:2","nodeType":"VariableDeclaration","scope":274,"src":"4860:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":265,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":268,"mutability":"mutable","name":"balance","nameLocation":"4884:7:2","nodeType":"VariableDeclaration","scope":274,"src":"4876:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":267,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":270,"mutability":"mutable","name":"needed","nameLocation":"4901:6:2","nodeType":"VariableDeclaration","scope":274,"src":"4893:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":269,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":272,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:2","nodeType":"VariableDeclaration","scope":274,"src":"4909:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":271,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:2"},"src":"4827:99:2"},{"documentation":{"id":275,"nodeType":"StructuredDocumentation","src":"4932:152:2","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":279,"name":"ERC1155InvalidSender","nameLocation":"5095:20:2","nodeType":"ErrorDefinition","parameters":{"id":278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":277,"mutability":"mutable","name":"sender","nameLocation":"5124:6:2","nodeType":"VariableDeclaration","scope":279,"src":"5116:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":276,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:2"},"src":"5089:43:2"},{"documentation":{"id":280,"nodeType":"StructuredDocumentation","src":"5138:159:2","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":284,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:2","nodeType":"ErrorDefinition","parameters":{"id":283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":282,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:2","nodeType":"VariableDeclaration","scope":284,"src":"5331:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":281,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:2"},"src":"5302:47:2"},{"documentation":{"id":285,"nodeType":"StructuredDocumentation","src":"5355:256:2","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":291,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:2","nodeType":"ErrorDefinition","parameters":{"id":290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":287,"mutability":"mutable","name":"operator","nameLocation":"5659:8:2","nodeType":"VariableDeclaration","scope":291,"src":"5651:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":286,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":289,"mutability":"mutable","name":"owner","nameLocation":"5677:5:2","nodeType":"VariableDeclaration","scope":291,"src":"5669:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":288,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:2"},"src":"5616:68:2"},{"documentation":{"id":292,"nodeType":"StructuredDocumentation","src":"5690:174:2","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":296,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:2","nodeType":"ErrorDefinition","parameters":{"id":295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":294,"mutability":"mutable","name":"approver","nameLocation":"5906:8:2","nodeType":"VariableDeclaration","scope":296,"src":"5898:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":293,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:2"},"src":"5869:47:2"},{"documentation":{"id":297,"nodeType":"StructuredDocumentation","src":"5922:197:2","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":301,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:2","nodeType":"ErrorDefinition","parameters":{"id":300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":299,"mutability":"mutable","name":"operator","nameLocation":"6161:8:2","nodeType":"VariableDeclaration","scope":301,"src":"6153:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":298,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:2"},"src":"6124:47:2"},{"documentation":{"id":302,"nodeType":"StructuredDocumentation","src":"6177:280:2","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":308,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:2","nodeType":"ErrorDefinition","parameters":{"id":307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":304,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:2","nodeType":"VariableDeclaration","scope":308,"src":"6494:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":303,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":306,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:2","nodeType":"VariableDeclaration","scope":308,"src":"6513:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":305,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:2"},"src":"6462:73:2"}],"scope":310,"src":"4430:2107:2","usedErrors":[274,279,284,291,296,301,308],"usedEvents":[]}],"src":"112:6426:2"},"id":2},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[1148],"ERC20":[824],"IERC20":[902],"IERC20Errors":[214],"IERC20Metadata":[1082]},"id":825,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":311,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":313,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":825,"sourceUnit":903,"src":"131:36:3","symbolAliases":[{"foreign":{"id":312,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"139:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":315,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":825,"sourceUnit":1083,"src":"168:63:3","symbolAliases":[{"foreign":{"id":314,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"176:14:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":317,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":825,"sourceUnit":1149,"src":"232:48:3","symbolAliases":[{"foreign":{"id":316,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1148,"src":"240:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":319,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":825,"sourceUnit":310,"src":"281:65:3","symbolAliases":[{"foreign":{"id":318,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"289:12:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":321,"name":"Context","nameLocations":["1133:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":1148,"src":"1133:7:3"},"id":322,"nodeType":"InheritanceSpecifier","src":"1133:7:3"},{"baseName":{"id":323,"name":"IERC20","nameLocations":["1142:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":902,"src":"1142:6:3"},"id":324,"nodeType":"InheritanceSpecifier","src":"1142:6:3"},{"baseName":{"id":325,"name":"IERC20Metadata","nameLocations":["1150:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":1082,"src":"1150:14:3"},"id":326,"nodeType":"InheritanceSpecifier","src":"1150:14:3"},{"baseName":{"id":327,"name":"IERC20Errors","nameLocations":["1166:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":214,"src":"1166:12:3"},"id":328,"nodeType":"InheritanceSpecifier","src":"1166:12:3"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":320,"nodeType":"StructuredDocumentation","src":"348:757:3","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."},"fullyImplemented":true,"id":824,"linearizedBaseContracts":[824,214,1082,902,1148],"name":"ERC20","nameLocation":"1124:5:3","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":332,"mutability":"mutable","name":"_balances","nameLocation":"1229:9:3","nodeType":"VariableDeclaration","scope":824,"src":"1185:53:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":331,"keyName":"account","keyNameLocation":"1201:7:3","keyType":{"id":329,"name":"address","nodeType":"ElementaryTypeName","src":"1193:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1185:35:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":330,"name":"uint256","nodeType":"ElementaryTypeName","src":"1212:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":338,"mutability":"mutable","name":"_allowances","nameLocation":"1317:11:3","nodeType":"VariableDeclaration","scope":824,"src":"1245:83:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":337,"keyName":"account","keyNameLocation":"1261:7:3","keyType":{"id":333,"name":"address","nodeType":"ElementaryTypeName","src":"1253:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1245:63:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":336,"keyName":"spender","keyNameLocation":"1288:7:3","keyType":{"id":334,"name":"address","nodeType":"ElementaryTypeName","src":"1280:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1272:35:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":335,"name":"uint256","nodeType":"ElementaryTypeName","src":"1299:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":340,"mutability":"mutable","name":"_totalSupply","nameLocation":"1351:12:3","nodeType":"VariableDeclaration","scope":824,"src":"1335:28:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":339,"name":"uint256","nodeType":"ElementaryTypeName","src":"1335:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":342,"mutability":"mutable","name":"_name","nameLocation":"1385:5:3","nodeType":"VariableDeclaration","scope":824,"src":"1370:20:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":341,"name":"string","nodeType":"ElementaryTypeName","src":"1370:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":344,"mutability":"mutable","name":"_symbol","nameLocation":"1411:7:3","nodeType":"VariableDeclaration","scope":824,"src":"1396:22:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":343,"name":"string","nodeType":"ElementaryTypeName","src":"1396:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":360,"nodeType":"Block","src":"1657:57:3","statements":[{"expression":{"id":354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":352,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"1667:5:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":353,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":347,"src":"1675:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1667:13:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":355,"nodeType":"ExpressionStatement","src":"1667:13:3"},{"expression":{"id":358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":356,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"1690:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":357,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"1700:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1690:17:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":359,"nodeType":"ExpressionStatement","src":"1690:17:3"}]},"documentation":{"id":345,"nodeType":"StructuredDocumentation","src":"1425:171:3","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":361,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":347,"mutability":"mutable","name":"name_","nameLocation":"1627:5:3","nodeType":"VariableDeclaration","scope":361,"src":"1613:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":346,"name":"string","nodeType":"ElementaryTypeName","src":"1613:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":349,"mutability":"mutable","name":"symbol_","nameLocation":"1648:7:3","nodeType":"VariableDeclaration","scope":361,"src":"1634:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":348,"name":"string","nodeType":"ElementaryTypeName","src":"1634:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1612:44:3"},"returnParameters":{"id":351,"nodeType":"ParameterList","parameters":[],"src":"1657:0:3"},"scope":824,"src":"1601:113:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1069],"body":{"id":369,"nodeType":"Block","src":"1839:29:3","statements":[{"expression":{"id":367,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"1856:5:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":366,"id":368,"nodeType":"Return","src":"1849:12:3"}]},"documentation":{"id":362,"nodeType":"StructuredDocumentation","src":"1720:54:3","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":370,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"1788:4:3","nodeType":"FunctionDefinition","parameters":{"id":363,"nodeType":"ParameterList","parameters":[],"src":"1792:2:3"},"returnParameters":{"id":366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":365,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":370,"src":"1824:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":364,"name":"string","nodeType":"ElementaryTypeName","src":"1824:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1823:15:3"},"scope":824,"src":"1779:89:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1075],"body":{"id":378,"nodeType":"Block","src":"2043:31:3","statements":[{"expression":{"id":376,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"2060:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":375,"id":377,"nodeType":"Return","src":"2053:14:3"}]},"documentation":{"id":371,"nodeType":"StructuredDocumentation","src":"1874:102:3","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":379,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"1990:6:3","nodeType":"FunctionDefinition","parameters":{"id":372,"nodeType":"ParameterList","parameters":[],"src":"1996:2:3"},"returnParameters":{"id":375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":374,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":379,"src":"2028:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":373,"name":"string","nodeType":"ElementaryTypeName","src":"2028:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2027:15:3"},"scope":824,"src":"1981:93:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1081],"body":{"id":387,"nodeType":"Block","src":"2763:26:3","statements":[{"expression":{"hexValue":"3138","id":385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2780:2:3","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":384,"id":386,"nodeType":"Return","src":"2773:9:3"}]},"documentation":{"id":380,"nodeType":"StructuredDocumentation","src":"2080:622:3","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":388,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"2716:8:3","nodeType":"FunctionDefinition","parameters":{"id":381,"nodeType":"ParameterList","parameters":[],"src":"2724:2:3"},"returnParameters":{"id":384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":383,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":388,"src":"2756:5:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":382,"name":"uint8","nodeType":"ElementaryTypeName","src":"2756:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2755:7:3"},"scope":824,"src":"2707:82:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[851],"body":{"id":396,"nodeType":"Block","src":"2910:36:3","statements":[{"expression":{"id":394,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"2927:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":393,"id":395,"nodeType":"Return","src":"2920:19:3"}]},"documentation":{"id":389,"nodeType":"StructuredDocumentation","src":"2795:49:3","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":397,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"2858:11:3","nodeType":"FunctionDefinition","parameters":{"id":390,"nodeType":"ParameterList","parameters":[],"src":"2869:2:3"},"returnParameters":{"id":393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":392,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":397,"src":"2901:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":391,"name":"uint256","nodeType":"ElementaryTypeName","src":"2901:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2900:9:3"},"scope":824,"src":"2849:97:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[859],"body":{"id":409,"nodeType":"Block","src":"3078:42:3","statements":[{"expression":{"baseExpression":{"id":405,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"3095:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":407,"indexExpression":{"id":406,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"3105:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3095:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":404,"id":408,"nodeType":"Return","src":"3088:25:3"}]},"documentation":{"id":398,"nodeType":"StructuredDocumentation","src":"2952:47:3","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":410,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3013:9:3","nodeType":"FunctionDefinition","parameters":{"id":401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":400,"mutability":"mutable","name":"account","nameLocation":"3031:7:3","nodeType":"VariableDeclaration","scope":410,"src":"3023:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":399,"name":"address","nodeType":"ElementaryTypeName","src":"3023:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3022:17:3"},"returnParameters":{"id":404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":403,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":410,"src":"3069:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":402,"name":"uint256","nodeType":"ElementaryTypeName","src":"3069:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3068:9:3"},"scope":824,"src":"3004:116:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[869],"body":{"id":433,"nodeType":"Block","src":"3390:103:3","statements":[{"assignments":[421],"declarations":[{"constant":false,"id":421,"mutability":"mutable","name":"owner","nameLocation":"3408:5:3","nodeType":"VariableDeclaration","scope":433,"src":"3400:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":420,"name":"address","nodeType":"ElementaryTypeName","src":"3400:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":424,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":422,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"3416:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3416:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3400:28:3"},{"expression":{"arguments":[{"id":426,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":421,"src":"3448:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":427,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":413,"src":"3455:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":428,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":415,"src":"3459:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":425,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"3438:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3438:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":430,"nodeType":"ExpressionStatement","src":"3438:27:3"},{"expression":{"hexValue":"74727565","id":431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3482:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":419,"id":432,"nodeType":"Return","src":"3475:11:3"}]},"documentation":{"id":411,"nodeType":"StructuredDocumentation","src":"3126:184:3","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":434,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3324:8:3","nodeType":"FunctionDefinition","parameters":{"id":416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":413,"mutability":"mutable","name":"to","nameLocation":"3341:2:3","nodeType":"VariableDeclaration","scope":434,"src":"3333:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":412,"name":"address","nodeType":"ElementaryTypeName","src":"3333:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":415,"mutability":"mutable","name":"value","nameLocation":"3353:5:3","nodeType":"VariableDeclaration","scope":434,"src":"3345:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":414,"name":"uint256","nodeType":"ElementaryTypeName","src":"3345:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3332:27:3"},"returnParameters":{"id":419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":418,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":434,"src":"3384:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":417,"name":"bool","nodeType":"ElementaryTypeName","src":"3384:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3383:6:3"},"scope":824,"src":"3315:178:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[879],"body":{"id":450,"nodeType":"Block","src":"3640:51:3","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":444,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":338,"src":"3657:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":446,"indexExpression":{"id":445,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":437,"src":"3669:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3657:18:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":448,"indexExpression":{"id":447,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":439,"src":"3676:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3657:27:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":443,"id":449,"nodeType":"Return","src":"3650:34:3"}]},"documentation":{"id":435,"nodeType":"StructuredDocumentation","src":"3499:47:3","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":451,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3560:9:3","nodeType":"FunctionDefinition","parameters":{"id":440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":437,"mutability":"mutable","name":"owner","nameLocation":"3578:5:3","nodeType":"VariableDeclaration","scope":451,"src":"3570:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":436,"name":"address","nodeType":"ElementaryTypeName","src":"3570:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":439,"mutability":"mutable","name":"spender","nameLocation":"3593:7:3","nodeType":"VariableDeclaration","scope":451,"src":"3585:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":438,"name":"address","nodeType":"ElementaryTypeName","src":"3585:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3569:32:3"},"returnParameters":{"id":443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":442,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":451,"src":"3631:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":441,"name":"uint256","nodeType":"ElementaryTypeName","src":"3631:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3630:9:3"},"scope":824,"src":"3551:140:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[889],"body":{"id":474,"nodeType":"Block","src":"4077:107:3","statements":[{"assignments":[462],"declarations":[{"constant":false,"id":462,"mutability":"mutable","name":"owner","nameLocation":"4095:5:3","nodeType":"VariableDeclaration","scope":474,"src":"4087:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":461,"name":"address","nodeType":"ElementaryTypeName","src":"4087:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":465,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":463,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"4103:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4103:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4087:28:3"},{"expression":{"arguments":[{"id":467,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"4134:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":468,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"4141:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":469,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":456,"src":"4150:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":466,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[715,775],"referencedDeclaration":715,"src":"4125:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4125:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":471,"nodeType":"ExpressionStatement","src":"4125:31:3"},{"expression":{"hexValue":"74727565","id":472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4173:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":460,"id":473,"nodeType":"Return","src":"4166:11:3"}]},"documentation":{"id":452,"nodeType":"StructuredDocumentation","src":"3697:296:3","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":475,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4007:7:3","nodeType":"FunctionDefinition","parameters":{"id":457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":454,"mutability":"mutable","name":"spender","nameLocation":"4023:7:3","nodeType":"VariableDeclaration","scope":475,"src":"4015:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":453,"name":"address","nodeType":"ElementaryTypeName","src":"4015:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":456,"mutability":"mutable","name":"value","nameLocation":"4040:5:3","nodeType":"VariableDeclaration","scope":475,"src":"4032:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":455,"name":"uint256","nodeType":"ElementaryTypeName","src":"4032:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4014:32:3"},"returnParameters":{"id":460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":459,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":475,"src":"4071:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":458,"name":"bool","nodeType":"ElementaryTypeName","src":"4071:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4070:6:3"},"scope":824,"src":"3998:186:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[901],"body":{"id":506,"nodeType":"Block","src":"4869:151:3","statements":[{"assignments":[488],"declarations":[{"constant":false,"id":488,"mutability":"mutable","name":"spender","nameLocation":"4887:7:3","nodeType":"VariableDeclaration","scope":506,"src":"4879:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":487,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":491,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":489,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"4897:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4897:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4879:30:3"},{"expression":{"arguments":[{"id":493,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"4935:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":494,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":488,"src":"4941:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":495,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":482,"src":"4950:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":492,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"4919:15:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4919:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":497,"nodeType":"ExpressionStatement","src":"4919:37:3"},{"expression":{"arguments":[{"id":499,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"4976:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":500,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"4982:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":501,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":482,"src":"4986:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":498,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"4966:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4966:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":503,"nodeType":"ExpressionStatement","src":"4966:26:3"},{"expression":{"hexValue":"74727565","id":504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5009:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":486,"id":505,"nodeType":"Return","src":"5002:11:3"}]},"documentation":{"id":476,"nodeType":"StructuredDocumentation","src":"4190:581:3","text":" @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":507,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4785:12:3","nodeType":"FunctionDefinition","parameters":{"id":483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":478,"mutability":"mutable","name":"from","nameLocation":"4806:4:3","nodeType":"VariableDeclaration","scope":507,"src":"4798:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":477,"name":"address","nodeType":"ElementaryTypeName","src":"4798:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":480,"mutability":"mutable","name":"to","nameLocation":"4820:2:3","nodeType":"VariableDeclaration","scope":507,"src":"4812:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":479,"name":"address","nodeType":"ElementaryTypeName","src":"4812:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":482,"mutability":"mutable","name":"value","nameLocation":"4832:5:3","nodeType":"VariableDeclaration","scope":507,"src":"4824:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":481,"name":"uint256","nodeType":"ElementaryTypeName","src":"4824:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4797:41:3"},"returnParameters":{"id":486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":485,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":507,"src":"4863:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":484,"name":"bool","nodeType":"ElementaryTypeName","src":"4863:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4862:6:3"},"scope":824,"src":"4776:244:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":553,"nodeType":"Block","src":"5462:231:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":517,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"5476:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5492:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":519,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5484:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":518,"name":"address","nodeType":"ElementaryTypeName","src":"5484:7:3","typeDescriptions":{}}},"id":521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5484:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5476:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":531,"nodeType":"IfStatement","src":"5472:86:3","trueBody":{"id":530,"nodeType":"Block","src":"5496:62:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5544:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":525,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5536:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":524,"name":"address","nodeType":"ElementaryTypeName","src":"5536:7:3","typeDescriptions":{}}},"id":527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5536:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":523,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"5517:18:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5517:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":529,"nodeType":"RevertStatement","src":"5510:37:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":532,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"5571:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5585:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":534,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5577:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":533,"name":"address","nodeType":"ElementaryTypeName","src":"5577:7:3","typeDescriptions":{}}},"id":536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5577:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5571:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":546,"nodeType":"IfStatement","src":"5567:86:3","trueBody":{"id":545,"nodeType":"Block","src":"5589:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5639:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5631:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":539,"name":"address","nodeType":"ElementaryTypeName","src":"5631:7:3","typeDescriptions":{}}},"id":542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5631:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":538,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"5610:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5610:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":544,"nodeType":"RevertStatement","src":"5603:39:3"}]}},{"expression":{"arguments":[{"id":548,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"5670:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":549,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"5676:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":550,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"5680:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":547,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"5662:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5662:24:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":552,"nodeType":"ExpressionStatement","src":"5662:24:3"}]},"documentation":{"id":508,"nodeType":"StructuredDocumentation","src":"5026:362:3","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":554,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5402:9:3","nodeType":"FunctionDefinition","parameters":{"id":515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":510,"mutability":"mutable","name":"from","nameLocation":"5420:4:3","nodeType":"VariableDeclaration","scope":554,"src":"5412:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":509,"name":"address","nodeType":"ElementaryTypeName","src":"5412:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":512,"mutability":"mutable","name":"to","nameLocation":"5434:2:3","nodeType":"VariableDeclaration","scope":554,"src":"5426:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":511,"name":"address","nodeType":"ElementaryTypeName","src":"5426:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":514,"mutability":"mutable","name":"value","nameLocation":"5446:5:3","nodeType":"VariableDeclaration","scope":554,"src":"5438:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":513,"name":"uint256","nodeType":"ElementaryTypeName","src":"5438:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5411:41:3"},"returnParameters":{"id":516,"nodeType":"ParameterList","parameters":[],"src":"5462:0:3"},"scope":824,"src":"5393:300:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":630,"nodeType":"Block","src":"6083:1032:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":564,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"6097:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6113:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6105:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":565,"name":"address","nodeType":"ElementaryTypeName","src":"6105:7:3","typeDescriptions":{}}},"id":568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6105:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6097:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":601,"nodeType":"Block","src":"6271:362:3","statements":[{"assignments":[576],"declarations":[{"constant":false,"id":576,"mutability":"mutable","name":"fromBalance","nameLocation":"6293:11:3","nodeType":"VariableDeclaration","scope":601,"src":"6285:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":575,"name":"uint256","nodeType":"ElementaryTypeName","src":"6285:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":580,"initialValue":{"baseExpression":{"id":577,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"6307:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":579,"indexExpression":{"id":578,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"6317:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6307:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6285:37:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":581,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"6340:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":582,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"6354:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6340:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":591,"nodeType":"IfStatement","src":"6336:115:3","trueBody":{"id":590,"nodeType":"Block","src":"6361:90:3","statements":[{"errorCall":{"arguments":[{"id":585,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"6411:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":586,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"6417:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":587,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"6430:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":584,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"6386:24:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256,uint256) pure returns (error)"}},"id":588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6386:50:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":589,"nodeType":"RevertStatement","src":"6379:57:3"}]}},{"id":600,"nodeType":"UncheckedBlock","src":"6464:159:3","statements":[{"expression":{"id":598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":592,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"6571:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":594,"indexExpression":{"id":593,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"6581:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6571:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":595,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"6589:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"6603:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6589:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6571:37:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":599,"nodeType":"ExpressionStatement","src":"6571:37:3"}]}]},"id":602,"nodeType":"IfStatement","src":"6093:540:3","trueBody":{"id":574,"nodeType":"Block","src":"6117:148:3","statements":[{"expression":{"id":572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":570,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"6233:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":571,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"6249:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6233:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":573,"nodeType":"ExpressionStatement","src":"6233:21:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":603,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"6647:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6661:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6653:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":604,"name":"address","nodeType":"ElementaryTypeName","src":"6653:7:3","typeDescriptions":{}}},"id":607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6653:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6647:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":622,"nodeType":"Block","src":"6862:206:3","statements":[{"id":621,"nodeType":"UncheckedBlock","src":"6876:182:3","statements":[{"expression":{"id":619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":615,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"7021:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":617,"indexExpression":{"id":616,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"7031:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7021:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":618,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"7038:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7021:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":620,"nodeType":"ExpressionStatement","src":"7021:22:3"}]}]},"id":623,"nodeType":"IfStatement","src":"6643:425:3","trueBody":{"id":614,"nodeType":"Block","src":"6665:191:3","statements":[{"id":613,"nodeType":"UncheckedBlock","src":"6679:167:3","statements":[{"expression":{"id":611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":609,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"6810:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":610,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"6826:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6810:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":612,"nodeType":"ExpressionStatement","src":"6810:21:3"}]}]}},{"eventCall":{"arguments":[{"id":625,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"7092:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":626,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"7098:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":627,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"7102:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":624,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"7083:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7083:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":629,"nodeType":"EmitStatement","src":"7078:30:3"}]},"documentation":{"id":555,"nodeType":"StructuredDocumentation","src":"5699:304:3","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":631,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"6017:7:3","nodeType":"FunctionDefinition","parameters":{"id":562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":557,"mutability":"mutable","name":"from","nameLocation":"6033:4:3","nodeType":"VariableDeclaration","scope":631,"src":"6025:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":556,"name":"address","nodeType":"ElementaryTypeName","src":"6025:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":559,"mutability":"mutable","name":"to","nameLocation":"6047:2:3","nodeType":"VariableDeclaration","scope":631,"src":"6039:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":558,"name":"address","nodeType":"ElementaryTypeName","src":"6039:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":561,"mutability":"mutable","name":"value","nameLocation":"6059:5:3","nodeType":"VariableDeclaration","scope":631,"src":"6051:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":560,"name":"uint256","nodeType":"ElementaryTypeName","src":"6051:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6024:41:3"},"returnParameters":{"id":563,"nodeType":"ParameterList","parameters":[],"src":"6083:0:3"},"scope":824,"src":"6008:1107:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":663,"nodeType":"Block","src":"7514:152:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":639,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"7528:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7547:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7539:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":640,"name":"address","nodeType":"ElementaryTypeName","src":"7539:7:3","typeDescriptions":{}}},"id":643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7539:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7528:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":653,"nodeType":"IfStatement","src":"7524:91:3","trueBody":{"id":652,"nodeType":"Block","src":"7551:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7601:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":647,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7593:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":646,"name":"address","nodeType":"ElementaryTypeName","src":"7593:7:3","typeDescriptions":{}}},"id":649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7593:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":645,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"7572:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7572:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":651,"nodeType":"RevertStatement","src":"7565:39:3"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7640:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7632:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":655,"name":"address","nodeType":"ElementaryTypeName","src":"7632:7:3","typeDescriptions":{}}},"id":658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7632:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":659,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"7644:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":660,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"7653:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":654,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"7624:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7624:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":662,"nodeType":"ExpressionStatement","src":"7624:35:3"}]},"documentation":{"id":632,"nodeType":"StructuredDocumentation","src":"7121:332:3","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":664,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7467:5:3","nodeType":"FunctionDefinition","parameters":{"id":637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":634,"mutability":"mutable","name":"account","nameLocation":"7481:7:3","nodeType":"VariableDeclaration","scope":664,"src":"7473:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":633,"name":"address","nodeType":"ElementaryTypeName","src":"7473:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":636,"mutability":"mutable","name":"value","nameLocation":"7498:5:3","nodeType":"VariableDeclaration","scope":664,"src":"7490:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":635,"name":"uint256","nodeType":"ElementaryTypeName","src":"7490:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7472:32:3"},"returnParameters":{"id":638,"nodeType":"ParameterList","parameters":[],"src":"7514:0:3"},"scope":824,"src":"7458:208:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":696,"nodeType":"Block","src":"8040:150:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":672,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"8054:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8073:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8065:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":673,"name":"address","nodeType":"ElementaryTypeName","src":"8065:7:3","typeDescriptions":{}}},"id":676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8065:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8054:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":686,"nodeType":"IfStatement","src":"8050:89:3","trueBody":{"id":685,"nodeType":"Block","src":"8077:62:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8125:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8117:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":679,"name":"address","nodeType":"ElementaryTypeName","src":"8117:7:3","typeDescriptions":{}}},"id":682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8117:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":678,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"8098:18:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8098:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":684,"nodeType":"RevertStatement","src":"8091:37:3"}]}},{"expression":{"arguments":[{"id":688,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"8156:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8173:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8165:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":689,"name":"address","nodeType":"ElementaryTypeName","src":"8165:7:3","typeDescriptions":{}}},"id":692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8165:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":693,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"8177:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":687,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"8148:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8148:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":695,"nodeType":"ExpressionStatement","src":"8148:35:3"}]},"documentation":{"id":665,"nodeType":"StructuredDocumentation","src":"7672:307:3","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":697,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"7993:5:3","nodeType":"FunctionDefinition","parameters":{"id":670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":667,"mutability":"mutable","name":"account","nameLocation":"8007:7:3","nodeType":"VariableDeclaration","scope":697,"src":"7999:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":666,"name":"address","nodeType":"ElementaryTypeName","src":"7999:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":669,"mutability":"mutable","name":"value","nameLocation":"8024:5:3","nodeType":"VariableDeclaration","scope":697,"src":"8016:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":668,"name":"uint256","nodeType":"ElementaryTypeName","src":"8016:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7998:32:3"},"returnParameters":{"id":671,"nodeType":"ParameterList","parameters":[],"src":"8040:0:3"},"scope":824,"src":"7984:206:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":714,"nodeType":"Block","src":"8800:54:3","statements":[{"expression":{"arguments":[{"id":708,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":700,"src":"8819:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":709,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":702,"src":"8826:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":710,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":704,"src":"8835:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8842:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":707,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[715,775],"referencedDeclaration":775,"src":"8810:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8810:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":713,"nodeType":"ExpressionStatement","src":"8810:37:3"}]},"documentation":{"id":698,"nodeType":"StructuredDocumentation","src":"8196:525:3","text":" @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":715,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8735:8:3","nodeType":"FunctionDefinition","parameters":{"id":705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":700,"mutability":"mutable","name":"owner","nameLocation":"8752:5:3","nodeType":"VariableDeclaration","scope":715,"src":"8744:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":699,"name":"address","nodeType":"ElementaryTypeName","src":"8744:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":702,"mutability":"mutable","name":"spender","nameLocation":"8767:7:3","nodeType":"VariableDeclaration","scope":715,"src":"8759:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":701,"name":"address","nodeType":"ElementaryTypeName","src":"8759:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":704,"mutability":"mutable","name":"value","nameLocation":"8784:5:3","nodeType":"VariableDeclaration","scope":715,"src":"8776:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":703,"name":"uint256","nodeType":"ElementaryTypeName","src":"8776:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8743:47:3"},"returnParameters":{"id":706,"nodeType":"ParameterList","parameters":[],"src":"8800:0:3"},"scope":824,"src":"8726:128:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":774,"nodeType":"Block","src":"9799:334:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":727,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"9813:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9830:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":729,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9822:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":728,"name":"address","nodeType":"ElementaryTypeName","src":"9822:7:3","typeDescriptions":{}}},"id":731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9822:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9813:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":741,"nodeType":"IfStatement","src":"9809:89:3","trueBody":{"id":740,"nodeType":"Block","src":"9834:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9884:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":735,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9876:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":734,"name":"address","nodeType":"ElementaryTypeName","src":"9876:7:3","typeDescriptions":{}}},"id":737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9876:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":733,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":208,"src":"9855:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9855:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":739,"nodeType":"RevertStatement","src":"9848:39:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":742,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"9911:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9930:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":744,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9922:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":743,"name":"address","nodeType":"ElementaryTypeName","src":"9922:7:3","typeDescriptions":{}}},"id":746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9922:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9911:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":756,"nodeType":"IfStatement","src":"9907:90:3","trueBody":{"id":755,"nodeType":"Block","src":"9934:63:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9983:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9975:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":749,"name":"address","nodeType":"ElementaryTypeName","src":"9975:7:3","typeDescriptions":{}}},"id":752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9975:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":748,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":213,"src":"9955:19:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9955:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":754,"nodeType":"RevertStatement","src":"9948:38:3"}]}},{"expression":{"id":763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":757,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":338,"src":"10006:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":760,"indexExpression":{"id":758,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"10018:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10006:18:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":761,"indexExpression":{"id":759,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"10025:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10006:27:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":762,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"10036:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10006:35:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":764,"nodeType":"ExpressionStatement","src":"10006:35:3"},{"condition":{"id":765,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"10055:9:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":773,"nodeType":"IfStatement","src":"10051:76:3","trueBody":{"id":772,"nodeType":"Block","src":"10066:61:3","statements":[{"eventCall":{"arguments":[{"id":767,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"10094:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":768,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"10101:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":769,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"10110:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":766,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"10085:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10085:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":771,"nodeType":"EmitStatement","src":"10080:36:3"}]}}]},"documentation":{"id":716,"nodeType":"StructuredDocumentation","src":"8860:836:3","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":775,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9710:8:3","nodeType":"FunctionDefinition","parameters":{"id":725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":718,"mutability":"mutable","name":"owner","nameLocation":"9727:5:3","nodeType":"VariableDeclaration","scope":775,"src":"9719:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":717,"name":"address","nodeType":"ElementaryTypeName","src":"9719:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":720,"mutability":"mutable","name":"spender","nameLocation":"9742:7:3","nodeType":"VariableDeclaration","scope":775,"src":"9734:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":719,"name":"address","nodeType":"ElementaryTypeName","src":"9734:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":722,"mutability":"mutable","name":"value","nameLocation":"9759:5:3","nodeType":"VariableDeclaration","scope":775,"src":"9751:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":721,"name":"uint256","nodeType":"ElementaryTypeName","src":"9751:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":724,"mutability":"mutable","name":"emitEvent","nameLocation":"9771:9:3","nodeType":"VariableDeclaration","scope":775,"src":"9766:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":723,"name":"bool","nodeType":"ElementaryTypeName","src":"9766:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9718:63:3"},"returnParameters":{"id":726,"nodeType":"ParameterList","parameters":[],"src":"9799:0:3"},"scope":824,"src":"9701:432:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":822,"nodeType":"Block","src":"10504:387:3","statements":[{"assignments":[786],"declarations":[{"constant":false,"id":786,"mutability":"mutable","name":"currentAllowance","nameLocation":"10522:16:3","nodeType":"VariableDeclaration","scope":822,"src":"10514:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":785,"name":"uint256","nodeType":"ElementaryTypeName","src":"10514:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":791,"initialValue":{"arguments":[{"id":788,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"10551:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":789,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"10558:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":787,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"10541:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10541:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10514:52:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":792,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"10580:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":795,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10604:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":794,"name":"uint256","nodeType":"ElementaryTypeName","src":"10604:7:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":793,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10599:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10599:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":797,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10613:3:3","memberName":"max","nodeType":"MemberAccess","src":"10599:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10580:36:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":821,"nodeType":"IfStatement","src":"10576:309:3","trueBody":{"id":820,"nodeType":"Block","src":"10618:267:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":799,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"10636:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":800,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"10655:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10636:24:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":809,"nodeType":"IfStatement","src":"10632:130:3","trueBody":{"id":808,"nodeType":"Block","src":"10662:100:3","statements":[{"errorCall":{"arguments":[{"id":803,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"10714:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":804,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"10723:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":805,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"10741:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":802,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":203,"src":"10687:26:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256,uint256) pure returns (error)"}},"id":806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10687:60:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":807,"nodeType":"RevertStatement","src":"10680:67:3"}]}},{"id":819,"nodeType":"UncheckedBlock","src":"10775:100:3","statements":[{"expression":{"arguments":[{"id":811,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"10812:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":812,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"10819:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":813,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"10828:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":814,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"10847:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10828:24:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10854:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":810,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[715,775],"referencedDeclaration":775,"src":"10803:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10803:57:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":818,"nodeType":"ExpressionStatement","src":"10803:57:3"}]}]}}]},"documentation":{"id":776,"nodeType":"StructuredDocumentation","src":"10139:271:3","text":" @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":823,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10424:15:3","nodeType":"FunctionDefinition","parameters":{"id":783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":778,"mutability":"mutable","name":"owner","nameLocation":"10448:5:3","nodeType":"VariableDeclaration","scope":823,"src":"10440:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":777,"name":"address","nodeType":"ElementaryTypeName","src":"10440:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":780,"mutability":"mutable","name":"spender","nameLocation":"10463:7:3","nodeType":"VariableDeclaration","scope":823,"src":"10455:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":779,"name":"address","nodeType":"ElementaryTypeName","src":"10455:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":782,"mutability":"mutable","name":"value","nameLocation":"10480:5:3","nodeType":"VariableDeclaration","scope":823,"src":"10472:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":781,"name":"uint256","nodeType":"ElementaryTypeName","src":"10472:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10439:47:3"},"returnParameters":{"id":784,"nodeType":"ParameterList","parameters":[],"src":"10504:0:3"},"scope":824,"src":"10415:476:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":825,"src":"1106:9787:3","usedErrors":[184,189,194,203,208,213],"usedEvents":[836,845]}],"src":"105:10789:3"},"id":3},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[902]},"id":903,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":826,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":827,"nodeType":"StructuredDocumentation","src":"132:71:4","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":902,"linearizedBaseContracts":[902],"name":"IERC20","nameLocation":"214:6:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":828,"nodeType":"StructuredDocumentation","src":"227:158:4","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":836,"name":"Transfer","nameLocation":"396:8:4","nodeType":"EventDefinition","parameters":{"id":835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":830,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"421:4:4","nodeType":"VariableDeclaration","scope":836,"src":"405:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":829,"name":"address","nodeType":"ElementaryTypeName","src":"405:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":832,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"443:2:4","nodeType":"VariableDeclaration","scope":836,"src":"427:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":831,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":834,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"455:5:4","nodeType":"VariableDeclaration","scope":836,"src":"447:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":833,"name":"uint256","nodeType":"ElementaryTypeName","src":"447:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"404:57:4"},"src":"390:72:4"},{"anonymous":false,"documentation":{"id":837,"nodeType":"StructuredDocumentation","src":"468:148:4","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":845,"name":"Approval","nameLocation":"627:8:4","nodeType":"EventDefinition","parameters":{"id":844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":839,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"652:5:4","nodeType":"VariableDeclaration","scope":845,"src":"636:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":838,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":841,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"675:7:4","nodeType":"VariableDeclaration","scope":845,"src":"659:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":840,"name":"address","nodeType":"ElementaryTypeName","src":"659:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":843,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"692:5:4","nodeType":"VariableDeclaration","scope":845,"src":"684:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":842,"name":"uint256","nodeType":"ElementaryTypeName","src":"684:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:63:4"},"src":"621:78:4"},{"documentation":{"id":846,"nodeType":"StructuredDocumentation","src":"705:65:4","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":851,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"784:11:4","nodeType":"FunctionDefinition","parameters":{"id":847,"nodeType":"ParameterList","parameters":[],"src":"795:2:4"},"returnParameters":{"id":850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":849,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":851,"src":"821:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":848,"name":"uint256","nodeType":"ElementaryTypeName","src":"821:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"820:9:4"},"scope":902,"src":"775:55:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":852,"nodeType":"StructuredDocumentation","src":"836:71:4","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":859,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:4","nodeType":"FunctionDefinition","parameters":{"id":855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":854,"mutability":"mutable","name":"account","nameLocation":"939:7:4","nodeType":"VariableDeclaration","scope":859,"src":"931:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":853,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:4"},"returnParameters":{"id":858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":857,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":859,"src":"971:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":856,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:4"},"scope":902,"src":"912:68:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":860,"nodeType":"StructuredDocumentation","src":"986:213:4","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":869,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:4","nodeType":"FunctionDefinition","parameters":{"id":865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":862,"mutability":"mutable","name":"to","nameLocation":"1230:2:4","nodeType":"VariableDeclaration","scope":869,"src":"1222:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":861,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":864,"mutability":"mutable","name":"value","nameLocation":"1242:5:4","nodeType":"VariableDeclaration","scope":869,"src":"1234:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":863,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:27:4"},"returnParameters":{"id":868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":867,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":869,"src":"1267:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":866,"name":"bool","nodeType":"ElementaryTypeName","src":"1267:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1266:6:4"},"scope":902,"src":"1204:69:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":870,"nodeType":"StructuredDocumentation","src":"1279:264:4","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":879,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1557:9:4","nodeType":"FunctionDefinition","parameters":{"id":875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":872,"mutability":"mutable","name":"owner","nameLocation":"1575:5:4","nodeType":"VariableDeclaration","scope":879,"src":"1567:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":871,"name":"address","nodeType":"ElementaryTypeName","src":"1567:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":874,"mutability":"mutable","name":"spender","nameLocation":"1590:7:4","nodeType":"VariableDeclaration","scope":879,"src":"1582:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":873,"name":"address","nodeType":"ElementaryTypeName","src":"1582:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1566:32:4"},"returnParameters":{"id":878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":877,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":879,"src":"1622:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":876,"name":"uint256","nodeType":"ElementaryTypeName","src":"1622:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1621:9:4"},"scope":902,"src":"1548:83:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":880,"nodeType":"StructuredDocumentation","src":"1637:667:4","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":889,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2318:7:4","nodeType":"FunctionDefinition","parameters":{"id":885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":882,"mutability":"mutable","name":"spender","nameLocation":"2334:7:4","nodeType":"VariableDeclaration","scope":889,"src":"2326:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":881,"name":"address","nodeType":"ElementaryTypeName","src":"2326:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":884,"mutability":"mutable","name":"value","nameLocation":"2351:5:4","nodeType":"VariableDeclaration","scope":889,"src":"2343:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":883,"name":"uint256","nodeType":"ElementaryTypeName","src":"2343:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2325:32:4"},"returnParameters":{"id":888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":887,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":889,"src":"2376:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":886,"name":"bool","nodeType":"ElementaryTypeName","src":"2376:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2375:6:4"},"scope":902,"src":"2309:73:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":890,"nodeType":"StructuredDocumentation","src":"2388:297:4","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":901,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2699:12:4","nodeType":"FunctionDefinition","parameters":{"id":897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":892,"mutability":"mutable","name":"from","nameLocation":"2720:4:4","nodeType":"VariableDeclaration","scope":901,"src":"2712:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":891,"name":"address","nodeType":"ElementaryTypeName","src":"2712:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":894,"mutability":"mutable","name":"to","nameLocation":"2734:2:4","nodeType":"VariableDeclaration","scope":901,"src":"2726:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":893,"name":"address","nodeType":"ElementaryTypeName","src":"2726:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":896,"mutability":"mutable","name":"value","nameLocation":"2746:5:4","nodeType":"VariableDeclaration","scope":901,"src":"2738:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":895,"name":"uint256","nodeType":"ElementaryTypeName","src":"2738:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2711:41:4"},"returnParameters":{"id":900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":899,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":901,"src":"2771:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":898,"name":"bool","nodeType":"ElementaryTypeName","src":"2771:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2770:6:4"},"scope":902,"src":"2690:87:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":903,"src":"204:2575:4","usedErrors":[],"usedEvents":[836,845]}],"src":"106:2674:4"},"id":4},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","exportedSymbols":{"ECDSA":[3157],"EIP712":[3384],"ERC20":[824],"ERC20Permit":[1056],"IERC20Permit":[1118],"Nonces":[1216]},"id":1057,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":904,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"122:24:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"./IERC20Permit.sol","id":906,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1057,"sourceUnit":1119,"src":"148:48:5","symbolAliases":[{"foreign":{"id":905,"name":"IERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"156:12:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":908,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1057,"sourceUnit":825,"src":"197:35:5","symbolAliases":[{"foreign":{"id":907,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"205:5:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"../../../utils/cryptography/ECDSA.sol","id":910,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1057,"sourceUnit":3158,"src":"233:60:5","symbolAliases":[{"foreign":{"id":909,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3157,"src":"241:5:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"../../../utils/cryptography/EIP712.sol","id":912,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1057,"sourceUnit":3385,"src":"294:62:5","symbolAliases":[{"foreign":{"id":911,"name":"EIP712","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3384,"src":"302:6:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","file":"../../../utils/Nonces.sol","id":914,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1057,"sourceUnit":1217,"src":"357:49:5","symbolAliases":[{"foreign":{"id":913,"name":"Nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1216,"src":"365:6:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":916,"name":"ERC20","nameLocations":["931:5:5"],"nodeType":"IdentifierPath","referencedDeclaration":824,"src":"931:5:5"},"id":917,"nodeType":"InheritanceSpecifier","src":"931:5:5"},{"baseName":{"id":918,"name":"IERC20Permit","nameLocations":["938:12:5"],"nodeType":"IdentifierPath","referencedDeclaration":1118,"src":"938:12:5"},"id":919,"nodeType":"InheritanceSpecifier","src":"938:12:5"},{"baseName":{"id":920,"name":"EIP712","nameLocations":["952:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":3384,"src":"952:6:5"},"id":921,"nodeType":"InheritanceSpecifier","src":"952:6:5"},{"baseName":{"id":922,"name":"Nonces","nameLocations":["960:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":1216,"src":"960:6:5"},"id":923,"nodeType":"InheritanceSpecifier","src":"960:6:5"}],"canonicalName":"ERC20Permit","contractDependencies":[],"contractKind":"contract","documentation":{"id":915,"nodeType":"StructuredDocumentation","src":"408:489:5","text":" @dev Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":true,"id":1056,"linearizedBaseContracts":[1056,1216,3384,172,1118,824,214,1082,902,1148],"name":"ERC20Permit","nameLocation":"916:11:5","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":928,"mutability":"constant","name":"PERMIT_TYPEHASH","nameLocation":"998:15:5","nodeType":"VariableDeclaration","scope":1056,"src":"973:146:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":924,"name":"bytes32","nodeType":"ElementaryTypeName","src":"973:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529","id":926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1034:84:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""},"value":"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""}],"id":925,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1024:9:5","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1024:95:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"documentation":{"id":929,"nodeType":"StructuredDocumentation","src":"1126:52:5","text":" @dev Permit deadline has expired."},"errorSelector":"62791302","id":933,"name":"ERC2612ExpiredSignature","nameLocation":"1189:23:5","nodeType":"ErrorDefinition","parameters":{"id":932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":931,"mutability":"mutable","name":"deadline","nameLocation":"1221:8:5","nodeType":"VariableDeclaration","scope":933,"src":"1213:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":930,"name":"uint256","nodeType":"ElementaryTypeName","src":"1213:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1212:18:5"},"src":"1183:48:5"},{"documentation":{"id":934,"nodeType":"StructuredDocumentation","src":"1237:45:5","text":" @dev Mismatched signature."},"errorSelector":"4b800e46","id":940,"name":"ERC2612InvalidSigner","nameLocation":"1293:20:5","nodeType":"ErrorDefinition","parameters":{"id":939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":936,"mutability":"mutable","name":"signer","nameLocation":"1322:6:5","nodeType":"VariableDeclaration","scope":940,"src":"1314:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":935,"name":"address","nodeType":"ElementaryTypeName","src":"1314:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":938,"mutability":"mutable","name":"owner","nameLocation":"1338:5:5","nodeType":"VariableDeclaration","scope":940,"src":"1330:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":937,"name":"address","nodeType":"ElementaryTypeName","src":"1330:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1313:31:5"},"src":"1287:58:5"},{"body":{"id":950,"nodeType":"Block","src":"1627:2:5","statements":[]},"documentation":{"id":941,"nodeType":"StructuredDocumentation","src":"1351:221:5","text":" @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC-20 token name."},"id":951,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":946,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"1616:4:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"31","id":947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1622:3:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"id":948,"kind":"baseConstructorSpecifier","modifierName":{"id":945,"name":"EIP712","nameLocations":["1609:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":3384,"src":"1609:6:5"},"nodeType":"ModifierInvocation","src":"1609:17:5"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":943,"mutability":"mutable","name":"name","nameLocation":"1603:4:5","nodeType":"VariableDeclaration","scope":951,"src":"1589:18:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":942,"name":"string","nodeType":"ElementaryTypeName","src":"1589:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1588:20:5"},"returnParameters":{"id":949,"nodeType":"ParameterList","parameters":[],"src":"1627:0:5"},"scope":1056,"src":"1577:52:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1103],"body":{"id":1027,"nodeType":"Block","src":"1872:483:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":969,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1886:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1892:9:5","memberName":"timestamp","nodeType":"MemberAccess","src":"1886:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":971,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":960,"src":"1904:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1886:26:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":978,"nodeType":"IfStatement","src":"1882:97:5","trueBody":{"id":977,"nodeType":"Block","src":"1914:65:5","statements":[{"errorCall":{"arguments":[{"id":974,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":960,"src":"1959:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":973,"name":"ERC2612ExpiredSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"1935:23:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1935:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":976,"nodeType":"RevertStatement","src":"1928:40:5"}]}},{"assignments":[980],"declarations":[{"constant":false,"id":980,"mutability":"mutable","name":"structHash","nameLocation":"1997:10:5","nodeType":"VariableDeclaration","scope":1027,"src":"1989:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":979,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1989:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":994,"initialValue":{"arguments":[{"arguments":[{"id":984,"name":"PERMIT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":928,"src":"2031:15:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":985,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"2048:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":986,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"2055:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":987,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"2064:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":989,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"2081:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":988,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"2071:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2071:16:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":991,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":960,"src":"2089:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":982,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2020:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":983,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2024:6:5","memberName":"encode","nodeType":"MemberAccess","src":"2020:10:5","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2020:78:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":981,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2010:9:5","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2010:89:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1989:110:5"},{"assignments":[996],"declarations":[{"constant":false,"id":996,"mutability":"mutable","name":"hash","nameLocation":"2118:4:5","nodeType":"VariableDeclaration","scope":1027,"src":"2110:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":995,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2110:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1000,"initialValue":{"arguments":[{"id":998,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"2142:10:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":997,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3317,"src":"2125:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2125:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2110:43:5"},{"assignments":[1002],"declarations":[{"constant":false,"id":1002,"mutability":"mutable","name":"signer","nameLocation":"2172:6:5","nodeType":"VariableDeclaration","scope":1027,"src":"2164:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1001,"name":"address","nodeType":"ElementaryTypeName","src":"2164:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1010,"initialValue":{"arguments":[{"id":1005,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"2195:4:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1006,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"2201:1:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1007,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":964,"src":"2204:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1008,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"2207:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1003,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3157,"src":"2181:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$3157_$","typeString":"type(library ECDSA)"}},"id":1004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2187:7:5","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":3107,"src":"2181:13:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2181:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2164:45:5"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1011,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"2223:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1012,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"2233:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2223:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1020,"nodeType":"IfStatement","src":"2219:88:5","trueBody":{"id":1019,"nodeType":"Block","src":"2240:67:5","statements":[{"errorCall":{"arguments":[{"id":1015,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"2282:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1016,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"2290:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1014,"name":"ERC2612InvalidSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":940,"src":"2261:20:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$_t_error_$","typeString":"function (address,address) pure returns (error)"}},"id":1017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2261:35:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1018,"nodeType":"RevertStatement","src":"2254:42:5"}]}},{"expression":{"arguments":[{"id":1022,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"2326:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1023,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"2333:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1024,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"2342:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1021,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[715,775],"referencedDeclaration":715,"src":"2317:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2317:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1026,"nodeType":"ExpressionStatement","src":"2317:31:5"}]},"documentation":{"id":952,"nodeType":"StructuredDocumentation","src":"1635:43:5","text":" @inheritdoc IERC20Permit"},"functionSelector":"d505accf","id":1028,"implemented":true,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1692:6:5","nodeType":"FunctionDefinition","parameters":{"id":967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":954,"mutability":"mutable","name":"owner","nameLocation":"1716:5:5","nodeType":"VariableDeclaration","scope":1028,"src":"1708:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":953,"name":"address","nodeType":"ElementaryTypeName","src":"1708:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":956,"mutability":"mutable","name":"spender","nameLocation":"1739:7:5","nodeType":"VariableDeclaration","scope":1028,"src":"1731:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":955,"name":"address","nodeType":"ElementaryTypeName","src":"1731:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":958,"mutability":"mutable","name":"value","nameLocation":"1764:5:5","nodeType":"VariableDeclaration","scope":1028,"src":"1756:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":957,"name":"uint256","nodeType":"ElementaryTypeName","src":"1756:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":960,"mutability":"mutable","name":"deadline","nameLocation":"1787:8:5","nodeType":"VariableDeclaration","scope":1028,"src":"1779:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":959,"name":"uint256","nodeType":"ElementaryTypeName","src":"1779:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":962,"mutability":"mutable","name":"v","nameLocation":"1811:1:5","nodeType":"VariableDeclaration","scope":1028,"src":"1805:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":961,"name":"uint8","nodeType":"ElementaryTypeName","src":"1805:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":964,"mutability":"mutable","name":"r","nameLocation":"1830:1:5","nodeType":"VariableDeclaration","scope":1028,"src":"1822:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":963,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1822:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":966,"mutability":"mutable","name":"s","nameLocation":"1849:1:5","nodeType":"VariableDeclaration","scope":1028,"src":"1841:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":965,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1841:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1698:158:5"},"returnParameters":{"id":968,"nodeType":"ParameterList","parameters":[],"src":"1872:0:5"},"scope":1056,"src":"1683:672:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1111,1175],"body":{"id":1044,"nodeType":"Block","src":"2509:43:5","statements":[{"expression":{"arguments":[{"id":1041,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"2539:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1039,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2526:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Permit_$1056_$","typeString":"type(contract super ERC20Permit)"}},"id":1040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2532:6:5","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":1175,"src":"2526:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2526:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1038,"id":1043,"nodeType":"Return","src":"2519:26:5"}]},"documentation":{"id":1029,"nodeType":"StructuredDocumentation","src":"2361:43:5","text":" @inheritdoc IERC20Permit"},"functionSelector":"7ecebe00","id":1045,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"2418:6:5","nodeType":"FunctionDefinition","overrides":{"id":1035,"nodeType":"OverrideSpecifier","overrides":[{"id":1033,"name":"IERC20Permit","nameLocations":["2469:12:5"],"nodeType":"IdentifierPath","referencedDeclaration":1118,"src":"2469:12:5"},{"id":1034,"name":"Nonces","nameLocations":["2483:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":1216,"src":"2483:6:5"}],"src":"2460:30:5"},"parameters":{"id":1032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1031,"mutability":"mutable","name":"owner","nameLocation":"2433:5:5","nodeType":"VariableDeclaration","scope":1045,"src":"2425:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1030,"name":"address","nodeType":"ElementaryTypeName","src":"2425:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2424:15:5"},"returnParameters":{"id":1038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1037,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1045,"src":"2500:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1036,"name":"uint256","nodeType":"ElementaryTypeName","src":"2500:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2499:9:5"},"scope":1056,"src":"2409:143:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1117],"body":{"id":1054,"nodeType":"Block","src":"2727:44:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1051,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3280,"src":"2744:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":1052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2744:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1050,"id":1053,"nodeType":"Return","src":"2737:27:5"}]},"documentation":{"id":1046,"nodeType":"StructuredDocumentation","src":"2558:43:5","text":" @inheritdoc IERC20Permit"},"functionSelector":"3644e515","id":1055,"implemented":true,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2668:16:5","nodeType":"FunctionDefinition","parameters":{"id":1047,"nodeType":"ParameterList","parameters":[],"src":"2684:2:5"},"returnParameters":{"id":1050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1049,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1055,"src":"2718:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1048,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2718:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2717:9:5"},"scope":1056,"src":"2659:112:5","stateMutability":"view","virtual":true,"visibility":"external"}],"scope":1057,"src":"898:1875:5","usedErrors":[184,189,194,203,208,213,933,940,1158,1282,1284,2820,2825,2830],"usedEvents":[152,836,845]}],"src":"122:2652:5"},"id":5},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[902],"IERC20Metadata":[1082]},"id":1083,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1058,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1060,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1083,"sourceUnit":903,"src":"151:37:6","symbolAliases":[{"foreign":{"id":1059,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"159:6:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1062,"name":"IERC20","nameLocations":["306:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":902,"src":"306:6:6"},"id":1063,"nodeType":"InheritanceSpecifier","src":"306:6:6"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1061,"nodeType":"StructuredDocumentation","src":"190:87:6","text":" @dev Interface for the optional metadata functions from the ERC-20 standard."},"fullyImplemented":false,"id":1082,"linearizedBaseContracts":[1082,902],"name":"IERC20Metadata","nameLocation":"288:14:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1064,"nodeType":"StructuredDocumentation","src":"319:54:6","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1069,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"387:4:6","nodeType":"FunctionDefinition","parameters":{"id":1065,"nodeType":"ParameterList","parameters":[],"src":"391:2:6"},"returnParameters":{"id":1068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1067,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1069,"src":"417:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1066,"name":"string","nodeType":"ElementaryTypeName","src":"417:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"416:15:6"},"scope":1082,"src":"378:54:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1070,"nodeType":"StructuredDocumentation","src":"438:56:6","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":1075,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"508:6:6","nodeType":"FunctionDefinition","parameters":{"id":1071,"nodeType":"ParameterList","parameters":[],"src":"514:2:6"},"returnParameters":{"id":1074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1073,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1075,"src":"540:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1072,"name":"string","nodeType":"ElementaryTypeName","src":"540:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"539:15:6"},"scope":1082,"src":"499:56:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1076,"nodeType":"StructuredDocumentation","src":"561:65:6","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":1081,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"640:8:6","nodeType":"FunctionDefinition","parameters":{"id":1077,"nodeType":"ParameterList","parameters":[],"src":"648:2:6"},"returnParameters":{"id":1080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1079,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1081,"src":"674:5:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1078,"name":"uint8","nodeType":"ElementaryTypeName","src":"674:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"673:7:6"},"scope":1082,"src":"631:50:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1083,"src":"278:405:6","usedErrors":[],"usedEvents":[836,845]}],"src":"125:559:6"},"id":6},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[1118]},"id":1119,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1084,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":1085,"nodeType":"StructuredDocumentation","src":"149:1965:7","text":" @dev Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."},"fullyImplemented":false,"id":1118,"linearizedBaseContracts":[1118],"name":"IERC20Permit","nameLocation":"2125:12:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1086,"nodeType":"StructuredDocumentation","src":"2144:850:7","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."},"functionSelector":"d505accf","id":1103,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"3008:6:7","nodeType":"FunctionDefinition","parameters":{"id":1101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1088,"mutability":"mutable","name":"owner","nameLocation":"3032:5:7","nodeType":"VariableDeclaration","scope":1103,"src":"3024:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1087,"name":"address","nodeType":"ElementaryTypeName","src":"3024:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1090,"mutability":"mutable","name":"spender","nameLocation":"3055:7:7","nodeType":"VariableDeclaration","scope":1103,"src":"3047:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1089,"name":"address","nodeType":"ElementaryTypeName","src":"3047:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1092,"mutability":"mutable","name":"value","nameLocation":"3080:5:7","nodeType":"VariableDeclaration","scope":1103,"src":"3072:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1091,"name":"uint256","nodeType":"ElementaryTypeName","src":"3072:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1094,"mutability":"mutable","name":"deadline","nameLocation":"3103:8:7","nodeType":"VariableDeclaration","scope":1103,"src":"3095:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1093,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1096,"mutability":"mutable","name":"v","nameLocation":"3127:1:7","nodeType":"VariableDeclaration","scope":1103,"src":"3121:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1095,"name":"uint8","nodeType":"ElementaryTypeName","src":"3121:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1098,"mutability":"mutable","name":"r","nameLocation":"3146:1:7","nodeType":"VariableDeclaration","scope":1103,"src":"3138:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1097,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3138:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1100,"mutability":"mutable","name":"s","nameLocation":"3165:1:7","nodeType":"VariableDeclaration","scope":1103,"src":"3157:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1099,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3157:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3014:158:7"},"returnParameters":{"id":1102,"nodeType":"ParameterList","parameters":[],"src":"3181:0:7"},"scope":1118,"src":"2999:183:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1104,"nodeType":"StructuredDocumentation","src":"3188:294:7","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":1111,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"3496:6:7","nodeType":"FunctionDefinition","parameters":{"id":1107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1106,"mutability":"mutable","name":"owner","nameLocation":"3511:5:7","nodeType":"VariableDeclaration","scope":1111,"src":"3503:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1105,"name":"address","nodeType":"ElementaryTypeName","src":"3503:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3502:15:7"},"returnParameters":{"id":1110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1109,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1111,"src":"3541:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1108,"name":"uint256","nodeType":"ElementaryTypeName","src":"3541:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3540:9:7"},"scope":1118,"src":"3487:63:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1112,"nodeType":"StructuredDocumentation","src":"3556:128:7","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":1117,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"3751:16:7","nodeType":"FunctionDefinition","parameters":{"id":1113,"nodeType":"ParameterList","parameters":[],"src":"3767:2:7"},"returnParameters":{"id":1116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1115,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1117,"src":"3793:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1114,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3793:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3792:9:7"},"scope":1118,"src":"3742:60:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1119,"src":"2115:1689:7","usedErrors":[],"usedEvents":[]}],"src":"123:3682:7"},"id":7},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1148]},"id":1149,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1120,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:8"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1121,"nodeType":"StructuredDocumentation","src":"127:496:8","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1148,"linearizedBaseContracts":[1148],"name":"Context","nameLocation":"642:7:8","nodeType":"ContractDefinition","nodes":[{"body":{"id":1129,"nodeType":"Block","src":"718:34:8","statements":[{"expression":{"expression":{"id":1126,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:8","memberName":"sender","nodeType":"MemberAccess","src":"735:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1125,"id":1128,"nodeType":"Return","src":"728:17:8"}]},"id":1130,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:8","nodeType":"FunctionDefinition","parameters":{"id":1122,"nodeType":"ParameterList","parameters":[],"src":"675:2:8"},"returnParameters":{"id":1125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1124,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1130,"src":"709:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1123,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:8"},"scope":1148,"src":"656:96:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1138,"nodeType":"Block","src":"825:32:8","statements":[{"expression":{"expression":{"id":1135,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:8","memberName":"data","nodeType":"MemberAccess","src":"842:8:8","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1134,"id":1137,"nodeType":"Return","src":"835:15:8"}]},"id":1139,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:8","nodeType":"FunctionDefinition","parameters":{"id":1131,"nodeType":"ParameterList","parameters":[],"src":"775:2:8"},"returnParameters":{"id":1134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1133,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1139,"src":"809:14:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1132,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:8"},"scope":1148,"src":"758:99:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1146,"nodeType":"Block","src":"935:25:8","statements":[{"expression":{"hexValue":"30","id":1144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1143,"id":1145,"nodeType":"Return","src":"945:8:8"}]},"id":1147,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:8","nodeType":"FunctionDefinition","parameters":{"id":1140,"nodeType":"ParameterList","parameters":[],"src":"892:2:8"},"returnParameters":{"id":1143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1142,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1147,"src":"926:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1141,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:8"},"scope":1148,"src":"863:97:8","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1149,"src":"624:338:8","usedErrors":[],"usedEvents":[]}],"src":"101:862:8"},"id":8},"@openzeppelin/contracts/utils/Nonces.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","exportedSymbols":{"Nonces":[1216]},"id":1217,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1150,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:9"},{"abstract":true,"baseContracts":[],"canonicalName":"Nonces","contractDependencies":[],"contractKind":"contract","documentation":{"id":1151,"nodeType":"StructuredDocumentation","src":"125:83:9","text":" @dev Provides tracking nonces for addresses. Nonces will only increment."},"fullyImplemented":true,"id":1216,"linearizedBaseContracts":[1216],"name":"Nonces","nameLocation":"227:6:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1152,"nodeType":"StructuredDocumentation","src":"240:90:9","text":" @dev The nonce used for an `account` is not the expected current nonce."},"errorSelector":"752d88c0","id":1158,"name":"InvalidAccountNonce","nameLocation":"341:19:9","nodeType":"ErrorDefinition","parameters":{"id":1157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1154,"mutability":"mutable","name":"account","nameLocation":"369:7:9","nodeType":"VariableDeclaration","scope":1158,"src":"361:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1153,"name":"address","nodeType":"ElementaryTypeName","src":"361:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1156,"mutability":"mutable","name":"currentNonce","nameLocation":"386:12:9","nodeType":"VariableDeclaration","scope":1158,"src":"378:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1155,"name":"uint256","nodeType":"ElementaryTypeName","src":"378:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"360:39:9"},"src":"335:65:9"},{"constant":false,"id":1162,"mutability":"mutable","name":"_nonces","nameLocation":"450:7:9","nodeType":"VariableDeclaration","scope":1216,"src":"406:51:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1161,"keyName":"account","keyNameLocation":"422:7:9","keyType":{"id":1159,"name":"address","nodeType":"ElementaryTypeName","src":"414:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"406:35:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1160,"name":"uint256","nodeType":"ElementaryTypeName","src":"433:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"body":{"id":1174,"nodeType":"Block","src":"607:38:9","statements":[{"expression":{"baseExpression":{"id":1170,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"624:7:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1172,"indexExpression":{"id":1171,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"632:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"624:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1169,"id":1173,"nodeType":"Return","src":"617:21:9"}]},"documentation":{"id":1163,"nodeType":"StructuredDocumentation","src":"464:69:9","text":" @dev Returns the next unused nonce for an address."},"functionSelector":"7ecebe00","id":1175,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"547:6:9","nodeType":"FunctionDefinition","parameters":{"id":1166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1165,"mutability":"mutable","name":"owner","nameLocation":"562:5:9","nodeType":"VariableDeclaration","scope":1175,"src":"554:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1164,"name":"address","nodeType":"ElementaryTypeName","src":"554:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"553:15:9"},"returnParameters":{"id":1169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1168,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1175,"src":"598:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1167,"name":"uint256","nodeType":"ElementaryTypeName","src":"598:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"597:9:9"},"scope":1216,"src":"538:107:9","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1189,"nodeType":"Block","src":"828:326:9","statements":[{"id":1188,"nodeType":"UncheckedBlock","src":"1031:117:9","statements":[{"expression":{"id":1186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1121:16:9","subExpression":{"baseExpression":{"id":1183,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"1121:7:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1185,"indexExpression":{"id":1184,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"1129:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1121:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1182,"id":1187,"nodeType":"Return","src":"1114:23:9"}]}]},"documentation":{"id":1176,"nodeType":"StructuredDocumentation","src":"651:103:9","text":" @dev Consumes a nonce.\n Returns the current value and increments nonce."},"id":1190,"implemented":true,"kind":"function","modifiers":[],"name":"_useNonce","nameLocation":"768:9:9","nodeType":"FunctionDefinition","parameters":{"id":1179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1178,"mutability":"mutable","name":"owner","nameLocation":"786:5:9","nodeType":"VariableDeclaration","scope":1190,"src":"778:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1177,"name":"address","nodeType":"ElementaryTypeName","src":"778:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"777:15:9"},"returnParameters":{"id":1182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1181,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1190,"src":"819:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1180,"name":"uint256","nodeType":"ElementaryTypeName","src":"819:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"818:9:9"},"scope":1216,"src":"759:395:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1214,"nodeType":"Block","src":"1338:149:9","statements":[{"assignments":[1199],"declarations":[{"constant":false,"id":1199,"mutability":"mutable","name":"current","nameLocation":"1356:7:9","nodeType":"VariableDeclaration","scope":1214,"src":"1348:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1198,"name":"uint256","nodeType":"ElementaryTypeName","src":"1348:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1203,"initialValue":{"arguments":[{"id":1201,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"1376:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1200,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"1366:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":1202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1366:16:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1348:34:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1204,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1195,"src":"1396:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1205,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1199,"src":"1405:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1396:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1213,"nodeType":"IfStatement","src":"1392:89:9","trueBody":{"id":1212,"nodeType":"Block","src":"1414:67:9","statements":[{"errorCall":{"arguments":[{"id":1208,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"1455:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1209,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1199,"src":"1462:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1207,"name":"InvalidAccountNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"1435:19:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256) pure returns (error)"}},"id":1210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1435:35:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1211,"nodeType":"RevertStatement","src":"1428:42:9"}]}}]},"documentation":{"id":1191,"nodeType":"StructuredDocumentation","src":"1160:100:9","text":" @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`."},"id":1215,"implemented":true,"kind":"function","modifiers":[],"name":"_useCheckedNonce","nameLocation":"1274:16:9","nodeType":"FunctionDefinition","parameters":{"id":1196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1193,"mutability":"mutable","name":"owner","nameLocation":"1299:5:9","nodeType":"VariableDeclaration","scope":1215,"src":"1291:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1192,"name":"address","nodeType":"ElementaryTypeName","src":"1291:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1195,"mutability":"mutable","name":"nonce","nameLocation":"1314:5:9","nodeType":"VariableDeclaration","scope":1215,"src":"1306:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1194,"name":"uint256","nodeType":"ElementaryTypeName","src":"1306:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1290:30:9"},"returnParameters":{"id":1197,"nodeType":"ParameterList","parameters":[],"src":"1338:0:9"},"scope":1216,"src":"1265:222:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1217,"src":"209:1280:9","usedErrors":[1158],"usedEvents":[]}],"src":"99:1391:9"},"id":9},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[1268]},"id":1269,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1218,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:10"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":1219,"nodeType":"StructuredDocumentation","src":"125:489:10","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":1268,"linearizedBaseContracts":[1268],"name":"Panic","nameLocation":"665:5:10","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":1220,"nodeType":"StructuredDocumentation","src":"677:36:10","text":"@dev generic / unspecified error"},"id":1223,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:10","nodeType":"VariableDeclaration","scope":1268,"src":"718:40:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1221,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":1222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":1224,"nodeType":"StructuredDocumentation","src":"764:37:10","text":"@dev used by the assert() builtin"},"id":1227,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:10","nodeType":"VariableDeclaration","scope":1268,"src":"806:39:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1225,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":1226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":1228,"nodeType":"StructuredDocumentation","src":"851:41:10","text":"@dev arithmetic underflow or overflow"},"id":1231,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:10","nodeType":"VariableDeclaration","scope":1268,"src":"897:47:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1229,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":1230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:10","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":1232,"nodeType":"StructuredDocumentation","src":"950:35:10","text":"@dev division or modulo by zero"},"id":1235,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:10","nodeType":"VariableDeclaration","scope":1268,"src":"990:49:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1233,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":1234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:10","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":1236,"nodeType":"StructuredDocumentation","src":"1045:30:10","text":"@dev enum conversion error"},"id":1239,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:10","nodeType":"VariableDeclaration","scope":1268,"src":"1080:54:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1237,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":1238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:10","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":1240,"nodeType":"StructuredDocumentation","src":"1140:36:10","text":"@dev invalid encoding in storage"},"id":1243,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:10","nodeType":"VariableDeclaration","scope":1268,"src":"1181:55:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1241,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":1242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:10","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":1244,"nodeType":"StructuredDocumentation","src":"1242:24:10","text":"@dev empty array pop"},"id":1247,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:10","nodeType":"VariableDeclaration","scope":1268,"src":"1271:48:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1245,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":1246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:10","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":1248,"nodeType":"StructuredDocumentation","src":"1325:35:10","text":"@dev array out of bounds access"},"id":1251,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:10","nodeType":"VariableDeclaration","scope":1268,"src":"1365:52:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1249,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":1250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:10","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":1252,"nodeType":"StructuredDocumentation","src":"1423:65:10","text":"@dev resource error (too large allocation or too large array)"},"id":1255,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:10","nodeType":"VariableDeclaration","scope":1268,"src":"1493:47:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1253,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":1254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:10","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":1256,"nodeType":"StructuredDocumentation","src":"1546:42:10","text":"@dev calling invalid internal function"},"id":1259,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:10","nodeType":"VariableDeclaration","scope":1268,"src":"1593:58:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1257,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":1258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:10","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":1266,"nodeType":"Block","src":"1819:151:10","statements":[{"AST":{"nativeSrc":"1854:110:10","nodeType":"YulBlock","src":"1854:110:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1875:4:10","nodeType":"YulLiteral","src":"1875:4:10","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1881:10:10","nodeType":"YulLiteral","src":"1881:10:10","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nativeSrc":"1868:6:10","nodeType":"YulIdentifier","src":"1868:6:10"},"nativeSrc":"1868:24:10","nodeType":"YulFunctionCall","src":"1868:24:10"},"nativeSrc":"1868:24:10","nodeType":"YulExpressionStatement","src":"1868:24:10"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1912:4:10","nodeType":"YulLiteral","src":"1912:4:10","type":"","value":"0x20"},{"name":"code","nativeSrc":"1918:4:10","nodeType":"YulIdentifier","src":"1918:4:10"}],"functionName":{"name":"mstore","nativeSrc":"1905:6:10","nodeType":"YulIdentifier","src":"1905:6:10"},"nativeSrc":"1905:18:10","nodeType":"YulFunctionCall","src":"1905:18:10"},"nativeSrc":"1905:18:10","nodeType":"YulExpressionStatement","src":"1905:18:10"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1943:4:10","nodeType":"YulLiteral","src":"1943:4:10","type":"","value":"0x1c"},{"kind":"number","nativeSrc":"1949:4:10","nodeType":"YulLiteral","src":"1949:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1936:6:10","nodeType":"YulIdentifier","src":"1936:6:10"},"nativeSrc":"1936:18:10","nodeType":"YulFunctionCall","src":"1936:18:10"},"nativeSrc":"1936:18:10","nodeType":"YulExpressionStatement","src":"1936:18:10"}]},"evmVersion":"paris","externalReferences":[{"declaration":1262,"isOffset":false,"isSlot":false,"src":"1918:4:10","valueSize":1}],"flags":["memory-safe"],"id":1265,"nodeType":"InlineAssembly","src":"1829:135:10"}]},"documentation":{"id":1260,"nodeType":"StructuredDocumentation","src":"1658:113:10","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":1267,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:10","nodeType":"FunctionDefinition","parameters":{"id":1263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1262,"mutability":"mutable","name":"code","nameLocation":"1799:4:10","nodeType":"VariableDeclaration","scope":1267,"src":"1791:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1261,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:10"},"returnParameters":{"id":1264,"nodeType":"ParameterList","parameters":[],"src":"1819:0:10"},"scope":1268,"src":"1776:194:10","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1269,"src":"657:1315:10","usedErrors":[],"usedEvents":[]}],"src":"99:1874:10"},"id":10},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","exportedSymbols":{"ShortString":[1274],"ShortStrings":[1485],"StorageSlot":[1609]},"id":1486,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1270,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:11"},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":1272,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1486,"sourceUnit":1610,"src":"132:46:11","symbolAliases":[{"foreign":{"id":1271,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"140:11:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"canonicalName":"ShortString","id":1274,"name":"ShortString","nameLocation":"353:11:11","nodeType":"UserDefinedValueTypeDefinition","src":"348:28:11","underlyingType":{"id":1273,"name":"bytes32","nodeType":"ElementaryTypeName","src":"368:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"abstract":false,"baseContracts":[],"canonicalName":"ShortStrings","contractDependencies":[],"contractKind":"library","documentation":{"id":1275,"nodeType":"StructuredDocumentation","src":"378:876:11","text":" @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"},"fullyImplemented":true,"id":1485,"linearizedBaseContracts":[1485],"name":"ShortStrings","nameLocation":"1263:12:11","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1278,"mutability":"constant","name":"FALLBACK_SENTINEL","nameLocation":"1370:17:11","nodeType":"VariableDeclaration","scope":1485,"src":"1345:111:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1276,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1345:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646","id":1277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1390:66:11","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0x00000000000000000000000000000000000000000000000000000000000000FF"},"visibility":"private"},{"errorSelector":"305a27a9","id":1282,"name":"StringTooLong","nameLocation":"1469:13:11","nodeType":"ErrorDefinition","parameters":{"id":1281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1280,"mutability":"mutable","name":"str","nameLocation":"1490:3:11","nodeType":"VariableDeclaration","scope":1282,"src":"1483:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1279,"name":"string","nodeType":"ElementaryTypeName","src":"1483:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1482:12:11"},"src":"1463:32:11"},{"errorSelector":"b3512b0c","id":1284,"name":"InvalidShortString","nameLocation":"1506:18:11","nodeType":"ErrorDefinition","parameters":{"id":1283,"nodeType":"ParameterList","parameters":[],"src":"1524:2:11"},"src":"1500:27:11"},{"body":{"id":1327,"nodeType":"Block","src":"1786:208:11","statements":[{"assignments":[1294],"declarations":[{"constant":false,"id":1294,"mutability":"mutable","name":"bstr","nameLocation":"1809:4:11","nodeType":"VariableDeclaration","scope":1327,"src":"1796:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1293,"name":"bytes","nodeType":"ElementaryTypeName","src":"1796:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1299,"initialValue":{"arguments":[{"id":1297,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1287,"src":"1822:3:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1816:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1295,"name":"bytes","nodeType":"ElementaryTypeName","src":"1816:5:11","typeDescriptions":{}}},"id":1298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1816:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1796:30:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1300,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"1840:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1845:6:11","memberName":"length","nodeType":"MemberAccess","src":"1840:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":1302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1854:2:11","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"1840:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1309,"nodeType":"IfStatement","src":"1836:72:11","trueBody":{"id":1308,"nodeType":"Block","src":"1858:50:11","statements":[{"errorCall":{"arguments":[{"id":1305,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1287,"src":"1893:3:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1304,"name":"StringTooLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"1879:13:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$returns$_t_error_$","typeString":"function (string memory) pure returns (error)"}},"id":1306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1879:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1307,"nodeType":"RevertStatement","src":"1872:25:11"}]}},{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1318,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"1965:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1317,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1957:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1316,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1957:7:11","typeDescriptions":{}}},"id":1319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1957:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1949:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1314,"name":"uint256","nodeType":"ElementaryTypeName","src":"1949:7:11","typeDescriptions":{}}},"id":1320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1949:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"expression":{"id":1321,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"1974:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1979:6:11","memberName":"length","nodeType":"MemberAccess","src":"1974:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1949:36:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1313,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1941:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1312,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1941:7:11","typeDescriptions":{}}},"id":1324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1941:45:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1310,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"1924:11:11","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1274_$","typeString":"type(ShortString)"}},"id":1311,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1936:4:11","memberName":"wrap","nodeType":"MemberAccess","src":"1924:16:11","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$1274_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":1325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1924:63:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}},"functionReturnParameters":1292,"id":1326,"nodeType":"Return","src":"1917:70:11"}]},"documentation":{"id":1285,"nodeType":"StructuredDocumentation","src":"1533:170:11","text":" @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."},"id":1328,"implemented":true,"kind":"function","modifiers":[],"name":"toShortString","nameLocation":"1717:13:11","nodeType":"FunctionDefinition","parameters":{"id":1288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1287,"mutability":"mutable","name":"str","nameLocation":"1745:3:11","nodeType":"VariableDeclaration","scope":1328,"src":"1731:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1286,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1730:19:11"},"returnParameters":{"id":1292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1291,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1328,"src":"1773:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"},"typeName":{"id":1290,"nodeType":"UserDefinedTypeName","pathNode":{"id":1289,"name":"ShortString","nameLocations":["1773:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":1274,"src":"1773:11:11"},"referencedDeclaration":1274,"src":"1773:11:11","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}},"visibility":"internal"}],"src":"1772:13:11"},"scope":1485,"src":"1708:286:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1353,"nodeType":"Block","src":"2152:304:11","statements":[{"assignments":[1338],"declarations":[{"constant":false,"id":1338,"mutability":"mutable","name":"len","nameLocation":"2170:3:11","nodeType":"VariableDeclaration","scope":1353,"src":"2162:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1337,"name":"uint256","nodeType":"ElementaryTypeName","src":"2162:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1342,"initialValue":{"arguments":[{"id":1340,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"2187:4:11","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}],"id":1339,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"2176:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1274_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":1341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2162:30:11"},{"assignments":[1344],"declarations":[{"constant":false,"id":1344,"mutability":"mutable","name":"str","nameLocation":"2294:3:11","nodeType":"VariableDeclaration","scope":1353,"src":"2280:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1343,"name":"string","nodeType":"ElementaryTypeName","src":"2280:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1349,"initialValue":{"arguments":[{"hexValue":"3332","id":1347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2311:2:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"id":1346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2300:10:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1345,"name":"string","nodeType":"ElementaryTypeName","src":"2304:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2300:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2280:34:11"},{"AST":{"nativeSrc":"2349:81:11","nodeType":"YulBlock","src":"2349:81:11","statements":[{"expression":{"arguments":[{"name":"str","nativeSrc":"2370:3:11","nodeType":"YulIdentifier","src":"2370:3:11"},{"name":"len","nativeSrc":"2375:3:11","nodeType":"YulIdentifier","src":"2375:3:11"}],"functionName":{"name":"mstore","nativeSrc":"2363:6:11","nodeType":"YulIdentifier","src":"2363:6:11"},"nativeSrc":"2363:16:11","nodeType":"YulFunctionCall","src":"2363:16:11"},"nativeSrc":"2363:16:11","nodeType":"YulExpressionStatement","src":"2363:16:11"},{"expression":{"arguments":[{"arguments":[{"name":"str","nativeSrc":"2403:3:11","nodeType":"YulIdentifier","src":"2403:3:11"},{"kind":"number","nativeSrc":"2408:4:11","nodeType":"YulLiteral","src":"2408:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2399:3:11","nodeType":"YulIdentifier","src":"2399:3:11"},"nativeSrc":"2399:14:11","nodeType":"YulFunctionCall","src":"2399:14:11"},{"name":"sstr","nativeSrc":"2415:4:11","nodeType":"YulIdentifier","src":"2415:4:11"}],"functionName":{"name":"mstore","nativeSrc":"2392:6:11","nodeType":"YulIdentifier","src":"2392:6:11"},"nativeSrc":"2392:28:11","nodeType":"YulFunctionCall","src":"2392:28:11"},"nativeSrc":"2392:28:11","nodeType":"YulExpressionStatement","src":"2392:28:11"}]},"evmVersion":"paris","externalReferences":[{"declaration":1338,"isOffset":false,"isSlot":false,"src":"2375:3:11","valueSize":1},{"declaration":1332,"isOffset":false,"isSlot":false,"src":"2415:4:11","valueSize":1},{"declaration":1344,"isOffset":false,"isSlot":false,"src":"2370:3:11","valueSize":1},{"declaration":1344,"isOffset":false,"isSlot":false,"src":"2403:3:11","valueSize":1}],"flags":["memory-safe"],"id":1350,"nodeType":"InlineAssembly","src":"2324:106:11"},{"expression":{"id":1351,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1344,"src":"2446:3:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1336,"id":1352,"nodeType":"Return","src":"2439:10:11"}]},"documentation":{"id":1329,"nodeType":"StructuredDocumentation","src":"2000:73:11","text":" @dev Decode a `ShortString` back to a \"normal\" string."},"id":1354,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"2087:8:11","nodeType":"FunctionDefinition","parameters":{"id":1333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1332,"mutability":"mutable","name":"sstr","nameLocation":"2108:4:11","nodeType":"VariableDeclaration","scope":1354,"src":"2096:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"},"typeName":{"id":1331,"nodeType":"UserDefinedTypeName","pathNode":{"id":1330,"name":"ShortString","nameLocations":["2096:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":1274,"src":"2096:11:11"},"referencedDeclaration":1274,"src":"2096:11:11","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}},"visibility":"internal"}],"src":"2095:18:11"},"returnParameters":{"id":1336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1335,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1354,"src":"2137:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1334,"name":"string","nodeType":"ElementaryTypeName","src":"2137:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2136:15:11"},"scope":1485,"src":"2078:378:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1385,"nodeType":"Block","src":"2598:175:11","statements":[{"assignments":[1364],"declarations":[{"constant":false,"id":1364,"mutability":"mutable","name":"result","nameLocation":"2616:6:11","nodeType":"VariableDeclaration","scope":1385,"src":"2608:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1363,"name":"uint256","nodeType":"ElementaryTypeName","src":"2608:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1374,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1369,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1358,"src":"2652:4:11","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}],"expression":{"id":1367,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"2633:11:11","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1274_$","typeString":"type(ShortString)"}},"id":1368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2645:6:11","memberName":"unwrap","nodeType":"MemberAccess","src":"2633:18:11","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1274_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2633:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2625:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1365,"name":"uint256","nodeType":"ElementaryTypeName","src":"2625:7:11","typeDescriptions":{}}},"id":1371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2625:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30784646","id":1372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2661:4:11","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xFF"},"src":"2625:40:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2608:57:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1375,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"2679:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":1376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2688:2:11","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"2679:11:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1382,"nodeType":"IfStatement","src":"2675:69:11","trueBody":{"id":1381,"nodeType":"Block","src":"2692:52:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1378,"name":"InvalidShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"2713:18:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2713:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1380,"nodeType":"RevertStatement","src":"2706:27:11"}]}},{"expression":{"id":1383,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"2760:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1362,"id":1384,"nodeType":"Return","src":"2753:13:11"}]},"documentation":{"id":1355,"nodeType":"StructuredDocumentation","src":"2462:61:11","text":" @dev Return the length of a `ShortString`."},"id":1386,"implemented":true,"kind":"function","modifiers":[],"name":"byteLength","nameLocation":"2537:10:11","nodeType":"FunctionDefinition","parameters":{"id":1359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1358,"mutability":"mutable","name":"sstr","nameLocation":"2560:4:11","nodeType":"VariableDeclaration","scope":1386,"src":"2548:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"},"typeName":{"id":1357,"nodeType":"UserDefinedTypeName","pathNode":{"id":1356,"name":"ShortString","nameLocations":["2548:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":1274,"src":"2548:11:11"},"referencedDeclaration":1274,"src":"2548:11:11","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}},"visibility":"internal"}],"src":"2547:18:11"},"returnParameters":{"id":1362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1361,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1386,"src":"2589:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1360,"name":"uint256","nodeType":"ElementaryTypeName","src":"2589:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2588:9:11"},"scope":1485,"src":"2528:245:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1425,"nodeType":"Block","src":"2996:231:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1399,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1389,"src":"3016:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1398,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3010:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1397,"name":"bytes","nodeType":"ElementaryTypeName","src":"3010:5:11","typeDescriptions":{}}},"id":1400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3010:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3023:6:11","memberName":"length","nodeType":"MemberAccess","src":"3010:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3332","id":1402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3032:2:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3010:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1423,"nodeType":"Block","src":"3094:127:11","statements":[{"expression":{"id":1416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1412,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1391,"src":"3134:5:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"expression":{"id":1409,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"3108:11:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1609_$","typeString":"type(library StorageSlot)"}},"id":1411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3120:13:11","memberName":"getStringSlot","nodeType":"MemberAccess","referencedDeclaration":1586,"src":"3108:25:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$1506_storage_ptr_$","typeString":"function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"}},"id":1413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3108:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1506_storage_ptr","typeString":"struct StorageSlot.StringSlot storage pointer"}},"id":1414,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3141:5:11","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1505,"src":"3108:38:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1415,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1389,"src":"3149:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3108:46:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1417,"nodeType":"ExpressionStatement","src":"3108:46:11"},{"expression":{"arguments":[{"id":1420,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"3192:17:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1418,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"3175:11:11","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1274_$","typeString":"type(ShortString)"}},"id":1419,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3187:4:11","memberName":"wrap","nodeType":"MemberAccess","src":"3175:16:11","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$1274_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":1421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3175:35:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}},"functionReturnParameters":1396,"id":1422,"nodeType":"Return","src":"3168:42:11"}]},"id":1424,"nodeType":"IfStatement","src":"3006:215:11","trueBody":{"id":1408,"nodeType":"Block","src":"3036:52:11","statements":[{"expression":{"arguments":[{"id":1405,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1389,"src":"3071:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1404,"name":"toShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1328,"src":"3057:13:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$1274_$","typeString":"function (string memory) pure returns (ShortString)"}},"id":1406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3057:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}},"functionReturnParameters":1396,"id":1407,"nodeType":"Return","src":"3050:27:11"}]}}]},"documentation":{"id":1387,"nodeType":"StructuredDocumentation","src":"2779:103:11","text":" @dev Encode a string into a `ShortString`, or write it to storage if it is too long."},"id":1426,"implemented":true,"kind":"function","modifiers":[],"name":"toShortStringWithFallback","nameLocation":"2896:25:11","nodeType":"FunctionDefinition","parameters":{"id":1392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1389,"mutability":"mutable","name":"value","nameLocation":"2936:5:11","nodeType":"VariableDeclaration","scope":1426,"src":"2922:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1388,"name":"string","nodeType":"ElementaryTypeName","src":"2922:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1391,"mutability":"mutable","name":"store","nameLocation":"2958:5:11","nodeType":"VariableDeclaration","scope":1426,"src":"2943:20:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1390,"name":"string","nodeType":"ElementaryTypeName","src":"2943:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2921:43:11"},"returnParameters":{"id":1396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1395,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1426,"src":"2983:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"},"typeName":{"id":1394,"nodeType":"UserDefinedTypeName","pathNode":{"id":1393,"name":"ShortString","nameLocations":["2983:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":1274,"src":"2983:11:11"},"referencedDeclaration":1274,"src":"2983:11:11","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}},"visibility":"internal"}],"src":"2982:13:11"},"scope":1485,"src":"2887:340:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1452,"nodeType":"Block","src":"3467:158:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1439,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1430,"src":"3500:5:11","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}],"expression":{"id":1437,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"3481:11:11","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1274_$","typeString":"type(ShortString)"}},"id":1438,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3493:6:11","memberName":"unwrap","nodeType":"MemberAccess","src":"3481:18:11","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1274_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3481:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1441,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"3510:17:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3481:46:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1450,"nodeType":"Block","src":"3582:37:11","statements":[{"expression":{"id":1448,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"3603:5:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}},"functionReturnParameters":1436,"id":1449,"nodeType":"Return","src":"3596:12:11"}]},"id":1451,"nodeType":"IfStatement","src":"3477:142:11","trueBody":{"id":1447,"nodeType":"Block","src":"3529:47:11","statements":[{"expression":{"arguments":[{"id":1444,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1430,"src":"3559:5:11","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}],"id":1443,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1354,"src":"3550:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1274_$returns$_t_string_memory_ptr_$","typeString":"function (ShortString) pure returns (string memory)"}},"id":1445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3550:15:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1436,"id":1446,"nodeType":"Return","src":"3543:22:11"}]}}]},"documentation":{"id":1427,"nodeType":"StructuredDocumentation","src":"3233:120:11","text":" @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}."},"id":1453,"implemented":true,"kind":"function","modifiers":[],"name":"toStringWithFallback","nameLocation":"3367:20:11","nodeType":"FunctionDefinition","parameters":{"id":1433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1430,"mutability":"mutable","name":"value","nameLocation":"3400:5:11","nodeType":"VariableDeclaration","scope":1453,"src":"3388:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"},"typeName":{"id":1429,"nodeType":"UserDefinedTypeName","pathNode":{"id":1428,"name":"ShortString","nameLocations":["3388:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":1274,"src":"3388:11:11"},"referencedDeclaration":1274,"src":"3388:11:11","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":1432,"mutability":"mutable","name":"store","nameLocation":"3422:5:11","nodeType":"VariableDeclaration","scope":1453,"src":"3407:20:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1431,"name":"string","nodeType":"ElementaryTypeName","src":"3407:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3387:41:11"},"returnParameters":{"id":1436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1435,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1453,"src":"3452:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1434,"name":"string","nodeType":"ElementaryTypeName","src":"3452:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3451:15:11"},"scope":1485,"src":"3358:267:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1483,"nodeType":"Block","src":"4105:174:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1466,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1457,"src":"4138:5:11","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}],"expression":{"id":1464,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"4119:11:11","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1274_$","typeString":"type(ShortString)"}},"id":1465,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4131:6:11","memberName":"unwrap","nodeType":"MemberAccess","src":"4119:18:11","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1274_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4119:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1468,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"4148:17:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4119:46:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1481,"nodeType":"Block","src":"4222:51:11","statements":[{"expression":{"expression":{"arguments":[{"id":1477,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1459,"src":"4249:5:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"id":1476,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4243:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1475,"name":"bytes","nodeType":"ElementaryTypeName","src":"4243:5:11","typeDescriptions":{}}},"id":1478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4243:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":1479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4256:6:11","memberName":"length","nodeType":"MemberAccess","src":"4243:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1463,"id":1480,"nodeType":"Return","src":"4236:26:11"}]},"id":1482,"nodeType":"IfStatement","src":"4115:158:11","trueBody":{"id":1474,"nodeType":"Block","src":"4167:49:11","statements":[{"expression":{"arguments":[{"id":1471,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1457,"src":"4199:5:11","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}],"id":1470,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"4188:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1274_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":1472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4188:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1463,"id":1473,"nodeType":"Return","src":"4181:24:11"}]}}]},"documentation":{"id":1454,"nodeType":"StructuredDocumentation","src":"3631:364:11","text":" @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n {setWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."},"id":1484,"implemented":true,"kind":"function","modifiers":[],"name":"byteLengthWithFallback","nameLocation":"4009:22:11","nodeType":"FunctionDefinition","parameters":{"id":1460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1457,"mutability":"mutable","name":"value","nameLocation":"4044:5:11","nodeType":"VariableDeclaration","scope":1484,"src":"4032:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"},"typeName":{"id":1456,"nodeType":"UserDefinedTypeName","pathNode":{"id":1455,"name":"ShortString","nameLocations":["4032:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":1274,"src":"4032:11:11"},"referencedDeclaration":1274,"src":"4032:11:11","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":1459,"mutability":"mutable","name":"store","nameLocation":"4066:5:11","nodeType":"VariableDeclaration","scope":1484,"src":"4051:20:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1458,"name":"string","nodeType":"ElementaryTypeName","src":"4051:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4031:41:11"},"returnParameters":{"id":1463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1462,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1484,"src":"4096:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1461,"name":"uint256","nodeType":"ElementaryTypeName","src":"4096:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4095:9:11"},"scope":1485,"src":"4000:279:11","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1486,"src":"1255:3026:11","usedErrors":[1282,1284],"usedEvents":[]}],"src":"106:4176:11"},"id":11},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[1609]},"id":1610,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1487,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:12"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":1488,"nodeType":"StructuredDocumentation","src":"219:1187:12","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."},"fullyImplemented":true,"id":1609,"linearizedBaseContracts":[1609],"name":"StorageSlot","nameLocation":"1415:11:12","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":1491,"members":[{"constant":false,"id":1490,"mutability":"mutable","name":"value","nameLocation":"1470:5:12","nodeType":"VariableDeclaration","scope":1491,"src":"1462:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1489,"name":"address","nodeType":"ElementaryTypeName","src":"1462:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1440:11:12","nodeType":"StructDefinition","scope":1609,"src":"1433:49:12","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":1494,"members":[{"constant":false,"id":1493,"mutability":"mutable","name":"value","nameLocation":"1522:5:12","nodeType":"VariableDeclaration","scope":1494,"src":"1517:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1492,"name":"bool","nodeType":"ElementaryTypeName","src":"1517:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1495:11:12","nodeType":"StructDefinition","scope":1609,"src":"1488:46:12","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":1497,"members":[{"constant":false,"id":1496,"mutability":"mutable","name":"value","nameLocation":"1577:5:12","nodeType":"VariableDeclaration","scope":1497,"src":"1569:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1495,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1569:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1547:11:12","nodeType":"StructDefinition","scope":1609,"src":"1540:49:12","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":1500,"members":[{"constant":false,"id":1499,"mutability":"mutable","name":"value","nameLocation":"1632:5:12","nodeType":"VariableDeclaration","scope":1500,"src":"1624:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1498,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1602:11:12","nodeType":"StructDefinition","scope":1609,"src":"1595:49:12","visibility":"public"},{"canonicalName":"StorageSlot.Int256Slot","id":1503,"members":[{"constant":false,"id":1502,"mutability":"mutable","name":"value","nameLocation":"1685:5:12","nodeType":"VariableDeclaration","scope":1503,"src":"1678:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1501,"name":"int256","nodeType":"ElementaryTypeName","src":"1678:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"Int256Slot","nameLocation":"1657:10:12","nodeType":"StructDefinition","scope":1609,"src":"1650:47:12","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":1506,"members":[{"constant":false,"id":1505,"mutability":"mutable","name":"value","nameLocation":"1738:5:12","nodeType":"VariableDeclaration","scope":1506,"src":"1731:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1504,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1710:10:12","nodeType":"StructDefinition","scope":1609,"src":"1703:47:12","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":1509,"members":[{"constant":false,"id":1508,"mutability":"mutable","name":"value","nameLocation":"1789:5:12","nodeType":"VariableDeclaration","scope":1509,"src":"1783:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1507,"name":"bytes","nodeType":"ElementaryTypeName","src":"1783:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1763:9:12","nodeType":"StructDefinition","scope":1609,"src":"1756:45:12","visibility":"public"},{"body":{"id":1519,"nodeType":"Block","src":"1983:79:12","statements":[{"AST":{"nativeSrc":"2018:38:12","nodeType":"YulBlock","src":"2018:38:12","statements":[{"nativeSrc":"2032:14:12","nodeType":"YulAssignment","src":"2032:14:12","value":{"name":"slot","nativeSrc":"2042:4:12","nodeType":"YulIdentifier","src":"2042:4:12"},"variableNames":[{"name":"r.slot","nativeSrc":"2032:6:12","nodeType":"YulIdentifier","src":"2032:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1516,"isOffset":false,"isSlot":true,"src":"2032:6:12","suffix":"slot","valueSize":1},{"declaration":1512,"isOffset":false,"isSlot":false,"src":"2042:4:12","valueSize":1}],"flags":["memory-safe"],"id":1518,"nodeType":"InlineAssembly","src":"1993:63:12"}]},"documentation":{"id":1510,"nodeType":"StructuredDocumentation","src":"1807:87:12","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":1520,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1908:14:12","nodeType":"FunctionDefinition","parameters":{"id":1513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1512,"mutability":"mutable","name":"slot","nameLocation":"1931:4:12","nodeType":"VariableDeclaration","scope":1520,"src":"1923:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1511,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1923:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1922:14:12"},"returnParameters":{"id":1517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1516,"mutability":"mutable","name":"r","nameLocation":"1980:1:12","nodeType":"VariableDeclaration","scope":1520,"src":"1960:21:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1491_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":1515,"nodeType":"UserDefinedTypeName","pathNode":{"id":1514,"name":"AddressSlot","nameLocations":["1960:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":1491,"src":"1960:11:12"},"referencedDeclaration":1491,"src":"1960:11:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1491_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1959:23:12"},"scope":1609,"src":"1899:163:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1530,"nodeType":"Block","src":"2243:79:12","statements":[{"AST":{"nativeSrc":"2278:38:12","nodeType":"YulBlock","src":"2278:38:12","statements":[{"nativeSrc":"2292:14:12","nodeType":"YulAssignment","src":"2292:14:12","value":{"name":"slot","nativeSrc":"2302:4:12","nodeType":"YulIdentifier","src":"2302:4:12"},"variableNames":[{"name":"r.slot","nativeSrc":"2292:6:12","nodeType":"YulIdentifier","src":"2292:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1527,"isOffset":false,"isSlot":true,"src":"2292:6:12","suffix":"slot","valueSize":1},{"declaration":1523,"isOffset":false,"isSlot":false,"src":"2302:4:12","valueSize":1}],"flags":["memory-safe"],"id":1529,"nodeType":"InlineAssembly","src":"2253:63:12"}]},"documentation":{"id":1521,"nodeType":"StructuredDocumentation","src":"2068:86:12","text":" @dev Returns a `BooleanSlot` with member `value` located at `slot`."},"id":1531,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2168:14:12","nodeType":"FunctionDefinition","parameters":{"id":1524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1523,"mutability":"mutable","name":"slot","nameLocation":"2191:4:12","nodeType":"VariableDeclaration","scope":1531,"src":"2183:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1522,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2183:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2182:14:12"},"returnParameters":{"id":1528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1527,"mutability":"mutable","name":"r","nameLocation":"2240:1:12","nodeType":"VariableDeclaration","scope":1531,"src":"2220:21:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1494_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":1526,"nodeType":"UserDefinedTypeName","pathNode":{"id":1525,"name":"BooleanSlot","nameLocations":["2220:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":1494,"src":"2220:11:12"},"referencedDeclaration":1494,"src":"2220:11:12","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1494_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2219:23:12"},"scope":1609,"src":"2159:163:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1541,"nodeType":"Block","src":"2503:79:12","statements":[{"AST":{"nativeSrc":"2538:38:12","nodeType":"YulBlock","src":"2538:38:12","statements":[{"nativeSrc":"2552:14:12","nodeType":"YulAssignment","src":"2552:14:12","value":{"name":"slot","nativeSrc":"2562:4:12","nodeType":"YulIdentifier","src":"2562:4:12"},"variableNames":[{"name":"r.slot","nativeSrc":"2552:6:12","nodeType":"YulIdentifier","src":"2552:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1538,"isOffset":false,"isSlot":true,"src":"2552:6:12","suffix":"slot","valueSize":1},{"declaration":1534,"isOffset":false,"isSlot":false,"src":"2562:4:12","valueSize":1}],"flags":["memory-safe"],"id":1540,"nodeType":"InlineAssembly","src":"2513:63:12"}]},"documentation":{"id":1532,"nodeType":"StructuredDocumentation","src":"2328:86:12","text":" @dev Returns a `Bytes32Slot` with member `value` located at `slot`."},"id":1542,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2428:14:12","nodeType":"FunctionDefinition","parameters":{"id":1535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1534,"mutability":"mutable","name":"slot","nameLocation":"2451:4:12","nodeType":"VariableDeclaration","scope":1542,"src":"2443:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1533,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2443:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2442:14:12"},"returnParameters":{"id":1539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1538,"mutability":"mutable","name":"r","nameLocation":"2500:1:12","nodeType":"VariableDeclaration","scope":1542,"src":"2480:21:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1497_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":1537,"nodeType":"UserDefinedTypeName","pathNode":{"id":1536,"name":"Bytes32Slot","nameLocations":["2480:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":1497,"src":"2480:11:12"},"referencedDeclaration":1497,"src":"2480:11:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1497_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2479:23:12"},"scope":1609,"src":"2419:163:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1552,"nodeType":"Block","src":"2763:79:12","statements":[{"AST":{"nativeSrc":"2798:38:12","nodeType":"YulBlock","src":"2798:38:12","statements":[{"nativeSrc":"2812:14:12","nodeType":"YulAssignment","src":"2812:14:12","value":{"name":"slot","nativeSrc":"2822:4:12","nodeType":"YulIdentifier","src":"2822:4:12"},"variableNames":[{"name":"r.slot","nativeSrc":"2812:6:12","nodeType":"YulIdentifier","src":"2812:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1549,"isOffset":false,"isSlot":true,"src":"2812:6:12","suffix":"slot","valueSize":1},{"declaration":1545,"isOffset":false,"isSlot":false,"src":"2822:4:12","valueSize":1}],"flags":["memory-safe"],"id":1551,"nodeType":"InlineAssembly","src":"2773:63:12"}]},"documentation":{"id":1543,"nodeType":"StructuredDocumentation","src":"2588:86:12","text":" @dev Returns a `Uint256Slot` with member `value` located at `slot`."},"id":1553,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2688:14:12","nodeType":"FunctionDefinition","parameters":{"id":1546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1545,"mutability":"mutable","name":"slot","nameLocation":"2711:4:12","nodeType":"VariableDeclaration","scope":1553,"src":"2703:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1544,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2703:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2702:14:12"},"returnParameters":{"id":1550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1549,"mutability":"mutable","name":"r","nameLocation":"2760:1:12","nodeType":"VariableDeclaration","scope":1553,"src":"2740:21:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1500_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":1548,"nodeType":"UserDefinedTypeName","pathNode":{"id":1547,"name":"Uint256Slot","nameLocations":["2740:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":1500,"src":"2740:11:12"},"referencedDeclaration":1500,"src":"2740:11:12","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1500_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2739:23:12"},"scope":1609,"src":"2679:163:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1563,"nodeType":"Block","src":"3020:79:12","statements":[{"AST":{"nativeSrc":"3055:38:12","nodeType":"YulBlock","src":"3055:38:12","statements":[{"nativeSrc":"3069:14:12","nodeType":"YulAssignment","src":"3069:14:12","value":{"name":"slot","nativeSrc":"3079:4:12","nodeType":"YulIdentifier","src":"3079:4:12"},"variableNames":[{"name":"r.slot","nativeSrc":"3069:6:12","nodeType":"YulIdentifier","src":"3069:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1560,"isOffset":false,"isSlot":true,"src":"3069:6:12","suffix":"slot","valueSize":1},{"declaration":1556,"isOffset":false,"isSlot":false,"src":"3079:4:12","valueSize":1}],"flags":["memory-safe"],"id":1562,"nodeType":"InlineAssembly","src":"3030:63:12"}]},"documentation":{"id":1554,"nodeType":"StructuredDocumentation","src":"2848:85:12","text":" @dev Returns a `Int256Slot` with member `value` located at `slot`."},"id":1564,"implemented":true,"kind":"function","modifiers":[],"name":"getInt256Slot","nameLocation":"2947:13:12","nodeType":"FunctionDefinition","parameters":{"id":1557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1556,"mutability":"mutable","name":"slot","nameLocation":"2969:4:12","nodeType":"VariableDeclaration","scope":1564,"src":"2961:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1555,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2961:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2960:14:12"},"returnParameters":{"id":1561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1560,"mutability":"mutable","name":"r","nameLocation":"3017:1:12","nodeType":"VariableDeclaration","scope":1564,"src":"2998:20:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$1503_storage_ptr","typeString":"struct StorageSlot.Int256Slot"},"typeName":{"id":1559,"nodeType":"UserDefinedTypeName","pathNode":{"id":1558,"name":"Int256Slot","nameLocations":["2998:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":1503,"src":"2998:10:12"},"referencedDeclaration":1503,"src":"2998:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$1503_storage_ptr","typeString":"struct StorageSlot.Int256Slot"}},"visibility":"internal"}],"src":"2997:22:12"},"scope":1609,"src":"2938:161:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1574,"nodeType":"Block","src":"3277:79:12","statements":[{"AST":{"nativeSrc":"3312:38:12","nodeType":"YulBlock","src":"3312:38:12","statements":[{"nativeSrc":"3326:14:12","nodeType":"YulAssignment","src":"3326:14:12","value":{"name":"slot","nativeSrc":"3336:4:12","nodeType":"YulIdentifier","src":"3336:4:12"},"variableNames":[{"name":"r.slot","nativeSrc":"3326:6:12","nodeType":"YulIdentifier","src":"3326:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1571,"isOffset":false,"isSlot":true,"src":"3326:6:12","suffix":"slot","valueSize":1},{"declaration":1567,"isOffset":false,"isSlot":false,"src":"3336:4:12","valueSize":1}],"flags":["memory-safe"],"id":1573,"nodeType":"InlineAssembly","src":"3287:63:12"}]},"documentation":{"id":1565,"nodeType":"StructuredDocumentation","src":"3105:85:12","text":" @dev Returns a `StringSlot` with member `value` located at `slot`."},"id":1575,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3204:13:12","nodeType":"FunctionDefinition","parameters":{"id":1568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1567,"mutability":"mutable","name":"slot","nameLocation":"3226:4:12","nodeType":"VariableDeclaration","scope":1575,"src":"3218:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1566,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3218:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3217:14:12"},"returnParameters":{"id":1572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1571,"mutability":"mutable","name":"r","nameLocation":"3274:1:12","nodeType":"VariableDeclaration","scope":1575,"src":"3255:20:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1506_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":1570,"nodeType":"UserDefinedTypeName","pathNode":{"id":1569,"name":"StringSlot","nameLocations":["3255:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":1506,"src":"3255:10:12"},"referencedDeclaration":1506,"src":"3255:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1506_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3254:22:12"},"scope":1609,"src":"3195:161:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1585,"nodeType":"Block","src":"3558:85:12","statements":[{"AST":{"nativeSrc":"3593:44:12","nodeType":"YulBlock","src":"3593:44:12","statements":[{"nativeSrc":"3607:20:12","nodeType":"YulAssignment","src":"3607:20:12","value":{"name":"store.slot","nativeSrc":"3617:10:12","nodeType":"YulIdentifier","src":"3617:10:12"},"variableNames":[{"name":"r.slot","nativeSrc":"3607:6:12","nodeType":"YulIdentifier","src":"3607:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1582,"isOffset":false,"isSlot":true,"src":"3607:6:12","suffix":"slot","valueSize":1},{"declaration":1578,"isOffset":false,"isSlot":true,"src":"3617:10:12","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":1584,"nodeType":"InlineAssembly","src":"3568:69:12"}]},"documentation":{"id":1576,"nodeType":"StructuredDocumentation","src":"3362:101:12","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":1586,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3477:13:12","nodeType":"FunctionDefinition","parameters":{"id":1579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1578,"mutability":"mutable","name":"store","nameLocation":"3506:5:12","nodeType":"VariableDeclaration","scope":1586,"src":"3491:20:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1577,"name":"string","nodeType":"ElementaryTypeName","src":"3491:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3490:22:12"},"returnParameters":{"id":1583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1582,"mutability":"mutable","name":"r","nameLocation":"3555:1:12","nodeType":"VariableDeclaration","scope":1586,"src":"3536:20:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1506_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":1581,"nodeType":"UserDefinedTypeName","pathNode":{"id":1580,"name":"StringSlot","nameLocations":["3536:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":1506,"src":"3536:10:12"},"referencedDeclaration":1506,"src":"3536:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1506_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3535:22:12"},"scope":1609,"src":"3468:175:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1596,"nodeType":"Block","src":"3818:79:12","statements":[{"AST":{"nativeSrc":"3853:38:12","nodeType":"YulBlock","src":"3853:38:12","statements":[{"nativeSrc":"3867:14:12","nodeType":"YulAssignment","src":"3867:14:12","value":{"name":"slot","nativeSrc":"3877:4:12","nodeType":"YulIdentifier","src":"3877:4:12"},"variableNames":[{"name":"r.slot","nativeSrc":"3867:6:12","nodeType":"YulIdentifier","src":"3867:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1593,"isOffset":false,"isSlot":true,"src":"3867:6:12","suffix":"slot","valueSize":1},{"declaration":1589,"isOffset":false,"isSlot":false,"src":"3877:4:12","valueSize":1}],"flags":["memory-safe"],"id":1595,"nodeType":"InlineAssembly","src":"3828:63:12"}]},"documentation":{"id":1587,"nodeType":"StructuredDocumentation","src":"3649:84:12","text":" @dev Returns a `BytesSlot` with member `value` located at `slot`."},"id":1597,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3747:12:12","nodeType":"FunctionDefinition","parameters":{"id":1590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1589,"mutability":"mutable","name":"slot","nameLocation":"3768:4:12","nodeType":"VariableDeclaration","scope":1597,"src":"3760:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1588,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3760:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3759:14:12"},"returnParameters":{"id":1594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1593,"mutability":"mutable","name":"r","nameLocation":"3815:1:12","nodeType":"VariableDeclaration","scope":1597,"src":"3797:19:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1509_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":1592,"nodeType":"UserDefinedTypeName","pathNode":{"id":1591,"name":"BytesSlot","nameLocations":["3797:9:12"],"nodeType":"IdentifierPath","referencedDeclaration":1509,"src":"3797:9:12"},"referencedDeclaration":1509,"src":"3797:9:12","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1509_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3796:21:12"},"scope":1609,"src":"3738:159:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1607,"nodeType":"Block","src":"4094:85:12","statements":[{"AST":{"nativeSrc":"4129:44:12","nodeType":"YulBlock","src":"4129:44:12","statements":[{"nativeSrc":"4143:20:12","nodeType":"YulAssignment","src":"4143:20:12","value":{"name":"store.slot","nativeSrc":"4153:10:12","nodeType":"YulIdentifier","src":"4153:10:12"},"variableNames":[{"name":"r.slot","nativeSrc":"4143:6:12","nodeType":"YulIdentifier","src":"4143:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1604,"isOffset":false,"isSlot":true,"src":"4143:6:12","suffix":"slot","valueSize":1},{"declaration":1600,"isOffset":false,"isSlot":true,"src":"4153:10:12","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":1606,"nodeType":"InlineAssembly","src":"4104:69:12"}]},"documentation":{"id":1598,"nodeType":"StructuredDocumentation","src":"3903:99:12","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":1608,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"4016:12:12","nodeType":"FunctionDefinition","parameters":{"id":1601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1600,"mutability":"mutable","name":"store","nameLocation":"4043:5:12","nodeType":"VariableDeclaration","scope":1608,"src":"4029:19:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1599,"name":"bytes","nodeType":"ElementaryTypeName","src":"4029:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4028:21:12"},"returnParameters":{"id":1605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1604,"mutability":"mutable","name":"r","nameLocation":"4091:1:12","nodeType":"VariableDeclaration","scope":1608,"src":"4073:19:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1509_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":1603,"nodeType":"UserDefinedTypeName","pathNode":{"id":1602,"name":"BytesSlot","nameLocations":["4073:9:12"],"nodeType":"IdentifierPath","referencedDeclaration":1509,"src":"4073:9:12"},"referencedDeclaration":1509,"src":"4073:9:12","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1509_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"4072:21:12"},"scope":1609,"src":"4007:172:12","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1610,"src":"1407:2774:12","usedErrors":[],"usedEvents":[]}],"src":"193:3989:12"},"id":12},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[5064],"SafeCast":[6829],"SignedMath":[6973],"Strings":[2809]},"id":2810,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1611,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:13"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":1613,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2810,"sourceUnit":5065,"src":"127:37:13","symbolAliases":[{"foreign":{"id":1612,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5064,"src":"135:4:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":1615,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2810,"sourceUnit":6830,"src":"165:45:13","symbolAliases":[{"foreign":{"id":1614,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"173:8:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":1617,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2810,"sourceUnit":6974,"src":"211:49:13","symbolAliases":[{"foreign":{"id":1616,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6973,"src":"219:10:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":1618,"nodeType":"StructuredDocumentation","src":"262:34:13","text":" @dev String operations."},"fullyImplemented":true,"id":2809,"linearizedBaseContracts":[2809],"name":"Strings","nameLocation":"305:7:13","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1620,"libraryName":{"id":1619,"name":"SafeCast","nameLocations":["325:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":6829,"src":"325:8:13"},"nodeType":"UsingForDirective","src":"319:21:13"},{"constant":true,"id":1623,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:13","nodeType":"VariableDeclaration","scope":2809,"src":"346:56:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1621,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:13","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":1626,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:13","nodeType":"VariableDeclaration","scope":2809,"src":"408:42:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1624,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":1625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:13","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"documentation":{"id":1627,"nodeType":"StructuredDocumentation","src":"457:81:13","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":1633,"name":"StringsInsufficientHexLength","nameLocation":"549:28:13","nodeType":"ErrorDefinition","parameters":{"id":1632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1629,"mutability":"mutable","name":"value","nameLocation":"586:5:13","nodeType":"VariableDeclaration","scope":1633,"src":"578:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1628,"name":"uint256","nodeType":"ElementaryTypeName","src":"578:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1631,"mutability":"mutable","name":"length","nameLocation":"601:6:13","nodeType":"VariableDeclaration","scope":1633,"src":"593:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1630,"name":"uint256","nodeType":"ElementaryTypeName","src":"593:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"577:31:13"},"src":"543:66:13"},{"documentation":{"id":1634,"nodeType":"StructuredDocumentation","src":"615:108:13","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":1636,"name":"StringsInvalidChar","nameLocation":"734:18:13","nodeType":"ErrorDefinition","parameters":{"id":1635,"nodeType":"ParameterList","parameters":[],"src":"752:2:13"},"src":"728:27:13"},{"documentation":{"id":1637,"nodeType":"StructuredDocumentation","src":"761:84:13","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":1639,"name":"StringsInvalidAddressFormat","nameLocation":"856:27:13","nodeType":"ErrorDefinition","parameters":{"id":1638,"nodeType":"ParameterList","parameters":[],"src":"883:2:13"},"src":"850:36:13"},{"body":{"id":1686,"nodeType":"Block","src":"1058:561:13","statements":[{"id":1685,"nodeType":"UncheckedBlock","src":"1068:545:13","statements":[{"assignments":[1648],"declarations":[{"constant":false,"id":1648,"mutability":"mutable","name":"length","nameLocation":"1100:6:13","nodeType":"VariableDeclaration","scope":1685,"src":"1092:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1647,"name":"uint256","nodeType":"ElementaryTypeName","src":"1092:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1655,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1651,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1642,"src":"1120:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1649,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5064,"src":"1109:4:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5064_$","typeString":"type(library Math)"}},"id":1650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1114:5:13","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":4836,"src":"1109:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1109:17:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1129:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1109:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1092:38:13"},{"assignments":[1657],"declarations":[{"constant":false,"id":1657,"mutability":"mutable","name":"buffer","nameLocation":"1158:6:13","nodeType":"VariableDeclaration","scope":1685,"src":"1144:20:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1656,"name":"string","nodeType":"ElementaryTypeName","src":"1144:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1662,"initialValue":{"arguments":[{"id":1660,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1648,"src":"1178:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1659,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1167:10:13","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1658,"name":"string","nodeType":"ElementaryTypeName","src":"1171:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1167:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1144:41:13"},{"assignments":[1664],"declarations":[{"constant":false,"id":1664,"mutability":"mutable","name":"ptr","nameLocation":"1207:3:13","nodeType":"VariableDeclaration","scope":1685,"src":"1199:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1663,"name":"uint256","nodeType":"ElementaryTypeName","src":"1199:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1665,"nodeType":"VariableDeclarationStatement","src":"1199:11:13"},{"AST":{"nativeSrc":"1249:67:13","nodeType":"YulBlock","src":"1249:67:13","statements":[{"nativeSrc":"1267:35:13","nodeType":"YulAssignment","src":"1267:35:13","value":{"arguments":[{"name":"buffer","nativeSrc":"1278:6:13","nodeType":"YulIdentifier","src":"1278:6:13"},{"arguments":[{"kind":"number","nativeSrc":"1290:2:13","nodeType":"YulLiteral","src":"1290:2:13","type":"","value":"32"},{"name":"length","nativeSrc":"1294:6:13","nodeType":"YulIdentifier","src":"1294:6:13"}],"functionName":{"name":"add","nativeSrc":"1286:3:13","nodeType":"YulIdentifier","src":"1286:3:13"},"nativeSrc":"1286:15:13","nodeType":"YulFunctionCall","src":"1286:15:13"}],"functionName":{"name":"add","nativeSrc":"1274:3:13","nodeType":"YulIdentifier","src":"1274:3:13"},"nativeSrc":"1274:28:13","nodeType":"YulFunctionCall","src":"1274:28:13"},"variableNames":[{"name":"ptr","nativeSrc":"1267:3:13","nodeType":"YulIdentifier","src":"1267:3:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1657,"isOffset":false,"isSlot":false,"src":"1278:6:13","valueSize":1},{"declaration":1648,"isOffset":false,"isSlot":false,"src":"1294:6:13","valueSize":1},{"declaration":1664,"isOffset":false,"isSlot":false,"src":"1267:3:13","valueSize":1}],"flags":["memory-safe"],"id":1666,"nodeType":"InlineAssembly","src":"1224:92:13"},{"body":{"id":1681,"nodeType":"Block","src":"1342:234:13","statements":[{"expression":{"id":1669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1360:5:13","subExpression":{"id":1668,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"1360:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1670,"nodeType":"ExpressionStatement","src":"1360:5:13"},{"AST":{"nativeSrc":"1408:86:13","nodeType":"YulBlock","src":"1408:86:13","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"1438:3:13","nodeType":"YulIdentifier","src":"1438:3:13"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1452:5:13","nodeType":"YulIdentifier","src":"1452:5:13"},{"kind":"number","nativeSrc":"1459:2:13","nodeType":"YulLiteral","src":"1459:2:13","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"1448:3:13","nodeType":"YulIdentifier","src":"1448:3:13"},"nativeSrc":"1448:14:13","nodeType":"YulFunctionCall","src":"1448:14:13"},{"name":"HEX_DIGITS","nativeSrc":"1464:10:13","nodeType":"YulIdentifier","src":"1464:10:13"}],"functionName":{"name":"byte","nativeSrc":"1443:4:13","nodeType":"YulIdentifier","src":"1443:4:13"},"nativeSrc":"1443:32:13","nodeType":"YulFunctionCall","src":"1443:32:13"}],"functionName":{"name":"mstore8","nativeSrc":"1430:7:13","nodeType":"YulIdentifier","src":"1430:7:13"},"nativeSrc":"1430:46:13","nodeType":"YulFunctionCall","src":"1430:46:13"},"nativeSrc":"1430:46:13","nodeType":"YulExpressionStatement","src":"1430:46:13"}]},"evmVersion":"paris","externalReferences":[{"declaration":1623,"isOffset":false,"isSlot":false,"src":"1464:10:13","valueSize":1},{"declaration":1664,"isOffset":false,"isSlot":false,"src":"1438:3:13","valueSize":1},{"declaration":1642,"isOffset":false,"isSlot":false,"src":"1452:5:13","valueSize":1}],"flags":["memory-safe"],"id":1671,"nodeType":"InlineAssembly","src":"1383:111:13"},{"expression":{"id":1674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1672,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1642,"src":"1511:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1520:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1511:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1675,"nodeType":"ExpressionStatement","src":"1511:11:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1676,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1642,"src":"1544:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1553:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1544:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1680,"nodeType":"IfStatement","src":"1540:21:13","trueBody":{"id":1679,"nodeType":"Break","src":"1556:5:13"}}]},"condition":{"hexValue":"74727565","id":1667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1336:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":1682,"nodeType":"WhileStatement","src":"1329:247:13"},{"expression":{"id":1683,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"1596:6:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1646,"id":1684,"nodeType":"Return","src":"1589:13:13"}]}]},"documentation":{"id":1640,"nodeType":"StructuredDocumentation","src":"892:90:13","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":1687,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"996:8:13","nodeType":"FunctionDefinition","parameters":{"id":1643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1642,"mutability":"mutable","name":"value","nameLocation":"1013:5:13","nodeType":"VariableDeclaration","scope":1687,"src":"1005:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1641,"name":"uint256","nodeType":"ElementaryTypeName","src":"1005:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1004:15:13"},"returnParameters":{"id":1646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1645,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1687,"src":"1043:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1644,"name":"string","nodeType":"ElementaryTypeName","src":"1043:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1042:15:13"},"scope":2809,"src":"987:632:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1712,"nodeType":"Block","src":"1795:92:13","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1698,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"1826:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":1699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1834:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1826:9:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1844:2:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1826:20:13","trueExpression":{"hexValue":"2d","id":1701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1838:3:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":1707,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"1872:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":1705,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6973,"src":"1857:10:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$6973_$","typeString":"type(library SignedMath)"}},"id":1706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1868:3:13","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":6972,"src":"1857:14:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":1708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1857:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1704,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1687,"src":"1848:8:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1848:31:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1696,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1812:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1695,"name":"string","nodeType":"ElementaryTypeName","src":"1812:6:13","typeDescriptions":{}}},"id":1697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1819:6:13","memberName":"concat","nodeType":"MemberAccess","src":"1812:13:13","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1812:68:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1694,"id":1711,"nodeType":"Return","src":"1805:75:13"}]},"documentation":{"id":1688,"nodeType":"StructuredDocumentation","src":"1625:89:13","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":1713,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"1728:14:13","nodeType":"FunctionDefinition","parameters":{"id":1691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1690,"mutability":"mutable","name":"value","nameLocation":"1750:5:13","nodeType":"VariableDeclaration","scope":1713,"src":"1743:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1689,"name":"int256","nodeType":"ElementaryTypeName","src":"1743:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1742:14:13"},"returnParameters":{"id":1694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1693,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1713,"src":"1780:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1692,"name":"string","nodeType":"ElementaryTypeName","src":"1780:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1779:15:13"},"scope":2809,"src":"1719:168:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1732,"nodeType":"Block","src":"2066:100:13","statements":[{"id":1731,"nodeType":"UncheckedBlock","src":"2076:84:13","statements":[{"expression":{"arguments":[{"id":1722,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"2119:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1725,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"2138:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1723,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5064,"src":"2126:4:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5064_$","typeString":"type(library Math)"}},"id":1724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2131:6:13","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":5007,"src":"2126:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2126:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2147:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2126:22:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1721,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1733,1816,1836],"referencedDeclaration":1816,"src":"2107:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2107:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1720,"id":1730,"nodeType":"Return","src":"2100:49:13"}]}]},"documentation":{"id":1714,"nodeType":"StructuredDocumentation","src":"1893:94:13","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":1733,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2001:11:13","nodeType":"FunctionDefinition","parameters":{"id":1717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1716,"mutability":"mutable","name":"value","nameLocation":"2021:5:13","nodeType":"VariableDeclaration","scope":1733,"src":"2013:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1715,"name":"uint256","nodeType":"ElementaryTypeName","src":"2013:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2012:15:13"},"returnParameters":{"id":1720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1719,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1733,"src":"2051:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1718,"name":"string","nodeType":"ElementaryTypeName","src":"2051:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2050:15:13"},"scope":2809,"src":"1992:174:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1815,"nodeType":"Block","src":"2379:435:13","statements":[{"assignments":[1744],"declarations":[{"constant":false,"id":1744,"mutability":"mutable","name":"localValue","nameLocation":"2397:10:13","nodeType":"VariableDeclaration","scope":1815,"src":"2389:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1743,"name":"uint256","nodeType":"ElementaryTypeName","src":"2389:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1746,"initialValue":{"id":1745,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1736,"src":"2410:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2389:26:13"},{"assignments":[1748],"declarations":[{"constant":false,"id":1748,"mutability":"mutable","name":"buffer","nameLocation":"2438:6:13","nodeType":"VariableDeclaration","scope":1815,"src":"2425:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1747,"name":"bytes","nodeType":"ElementaryTypeName","src":"2425:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1757,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2457:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1752,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1738,"src":"2461:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2457:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2470:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2457:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2447:9:13","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1749,"name":"bytes","nodeType":"ElementaryTypeName","src":"2451:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2447:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2425:47:13"},{"expression":{"id":1762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1758,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"2482:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1760,"indexExpression":{"hexValue":"30","id":1759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2489:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2482:9:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2494:3:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2482:15:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1763,"nodeType":"ExpressionStatement","src":"2482:15:13"},{"expression":{"id":1768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1764,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"2507:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1766,"indexExpression":{"hexValue":"31","id":1765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2514:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2507:9:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":1767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2519:3:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2507:15:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1769,"nodeType":"ExpressionStatement","src":"2507:15:13"},{"body":{"id":1798,"nodeType":"Block","src":"2577:95:13","statements":[{"expression":{"id":1792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1784,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"2591:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1786,"indexExpression":{"id":1785,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"2598:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2591:9:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1787,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"2603:10:13","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":1791,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1788,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"2614:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2627:3:13","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2614:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2603:28:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2591:40:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1793,"nodeType":"ExpressionStatement","src":"2591:40:13"},{"expression":{"id":1796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1794,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"2645:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2660:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2645:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1797,"nodeType":"ExpressionStatement","src":"2645:16:13"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1778,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"2565:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2569:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2565:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1799,"initializationExpression":{"assignments":[1771],"declarations":[{"constant":false,"id":1771,"mutability":"mutable","name":"i","nameLocation":"2545:1:13","nodeType":"VariableDeclaration","scope":1799,"src":"2537:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1770,"name":"uint256","nodeType":"ElementaryTypeName","src":"2537:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1777,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2549:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1773,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1738,"src":"2553:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2549:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2562:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2549:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2537:26:13"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":1782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2572:3:13","subExpression":{"id":1781,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"2574:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1783,"nodeType":"ExpressionStatement","src":"2572:3:13"},"nodeType":"ForStatement","src":"2532:140:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1800,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"2685:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2699:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2685:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1809,"nodeType":"IfStatement","src":"2681:96:13","trueBody":{"id":1808,"nodeType":"Block","src":"2702:75:13","statements":[{"errorCall":{"arguments":[{"id":1804,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1736,"src":"2752:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1805,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1738,"src":"2759:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1803,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"2723:28:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":1806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:43:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1807,"nodeType":"RevertStatement","src":"2716:50:13"}]}},{"expression":{"arguments":[{"id":1812,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"2800:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2793:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1810,"name":"string","nodeType":"ElementaryTypeName","src":"2793:6:13","typeDescriptions":{}}},"id":1813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2793:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1742,"id":1814,"nodeType":"Return","src":"2786:21:13"}]},"documentation":{"id":1734,"nodeType":"StructuredDocumentation","src":"2172:112:13","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":1816,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2298:11:13","nodeType":"FunctionDefinition","parameters":{"id":1739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1736,"mutability":"mutable","name":"value","nameLocation":"2318:5:13","nodeType":"VariableDeclaration","scope":1816,"src":"2310:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1735,"name":"uint256","nodeType":"ElementaryTypeName","src":"2310:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1738,"mutability":"mutable","name":"length","nameLocation":"2333:6:13","nodeType":"VariableDeclaration","scope":1816,"src":"2325:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1737,"name":"uint256","nodeType":"ElementaryTypeName","src":"2325:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2309:31:13"},"returnParameters":{"id":1742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1741,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1816,"src":"2364:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1740,"name":"string","nodeType":"ElementaryTypeName","src":"2364:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2363:15:13"},"scope":2809,"src":"2289:525:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1835,"nodeType":"Block","src":"3046:75:13","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1829,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1819,"src":"3091:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1828,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3083:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1827,"name":"uint160","nodeType":"ElementaryTypeName","src":"3083:7:13","typeDescriptions":{}}},"id":1830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3083:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1826,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3075:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1825,"name":"uint256","nodeType":"ElementaryTypeName","src":"3075:7:13","typeDescriptions":{}}},"id":1831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3075:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1832,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1626,"src":"3099:14:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1824,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1733,1816,1836],"referencedDeclaration":1816,"src":"3063:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3063:51:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1823,"id":1834,"nodeType":"Return","src":"3056:58:13"}]},"documentation":{"id":1817,"nodeType":"StructuredDocumentation","src":"2820:148:13","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":1836,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2982:11:13","nodeType":"FunctionDefinition","parameters":{"id":1820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1819,"mutability":"mutable","name":"addr","nameLocation":"3002:4:13","nodeType":"VariableDeclaration","scope":1836,"src":"2994:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1818,"name":"address","nodeType":"ElementaryTypeName","src":"2994:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2993:14:13"},"returnParameters":{"id":1823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1822,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1836,"src":"3031:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1821,"name":"string","nodeType":"ElementaryTypeName","src":"3031:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3030:15:13"},"scope":2809,"src":"2973:148:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1900,"nodeType":"Block","src":"3378:642:13","statements":[{"assignments":[1845],"declarations":[{"constant":false,"id":1845,"mutability":"mutable","name":"buffer","nameLocation":"3401:6:13","nodeType":"VariableDeclaration","scope":1900,"src":"3388:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1844,"name":"bytes","nodeType":"ElementaryTypeName","src":"3388:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1852,"initialValue":{"arguments":[{"arguments":[{"id":1849,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1839,"src":"3428:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1848,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1733,1816,1836],"referencedDeclaration":1836,"src":"3416:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":1850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3416:17:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1847,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3410:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1846,"name":"bytes","nodeType":"ElementaryTypeName","src":"3410:5:13","typeDescriptions":{}}},"id":1851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3410:24:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3388:46:13"},{"assignments":[1854],"declarations":[{"constant":false,"id":1854,"mutability":"mutable","name":"hashValue","nameLocation":"3527:9:13","nodeType":"VariableDeclaration","scope":1900,"src":"3519:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1853,"name":"uint256","nodeType":"ElementaryTypeName","src":"3519:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1855,"nodeType":"VariableDeclarationStatement","src":"3519:17:13"},{"AST":{"nativeSrc":"3571:78:13","nodeType":"YulBlock","src":"3571:78:13","statements":[{"nativeSrc":"3585:54:13","nodeType":"YulAssignment","src":"3585:54:13","value":{"arguments":[{"kind":"number","nativeSrc":"3602:2:13","nodeType":"YulLiteral","src":"3602:2:13","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"3620:6:13","nodeType":"YulIdentifier","src":"3620:6:13"},{"kind":"number","nativeSrc":"3628:4:13","nodeType":"YulLiteral","src":"3628:4:13","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3616:3:13","nodeType":"YulIdentifier","src":"3616:3:13"},"nativeSrc":"3616:17:13","nodeType":"YulFunctionCall","src":"3616:17:13"},{"kind":"number","nativeSrc":"3635:2:13","nodeType":"YulLiteral","src":"3635:2:13","type":"","value":"40"}],"functionName":{"name":"keccak256","nativeSrc":"3606:9:13","nodeType":"YulIdentifier","src":"3606:9:13"},"nativeSrc":"3606:32:13","nodeType":"YulFunctionCall","src":"3606:32:13"}],"functionName":{"name":"shr","nativeSrc":"3598:3:13","nodeType":"YulIdentifier","src":"3598:3:13"},"nativeSrc":"3598:41:13","nodeType":"YulFunctionCall","src":"3598:41:13"},"variableNames":[{"name":"hashValue","nativeSrc":"3585:9:13","nodeType":"YulIdentifier","src":"3585:9:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1845,"isOffset":false,"isSlot":false,"src":"3620:6:13","valueSize":1},{"declaration":1854,"isOffset":false,"isSlot":false,"src":"3585:9:13","valueSize":1}],"flags":["memory-safe"],"id":1856,"nodeType":"InlineAssembly","src":"3546:103:13"},{"body":{"id":1893,"nodeType":"Block","src":"3692:291:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1867,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"3798:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3810:3:13","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"3798:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":1870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3816:1:13","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"3798:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":1874,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1845,"src":"3827:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1876,"indexExpression":{"id":1875,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"3834:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3827:9:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":1873,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3821:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1872,"name":"uint8","nodeType":"ElementaryTypeName","src":"3821:5:13","typeDescriptions":{}}},"id":1877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3821:16:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":1878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3840:2:13","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"3821:21:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3798:44:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1888,"nodeType":"IfStatement","src":"3794:150:13","trueBody":{"id":1887,"nodeType":"Block","src":"3844:100:13","statements":[{"expression":{"id":1885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1881,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1845,"src":"3912:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1883,"indexExpression":{"id":1882,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"3919:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3912:9:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":1884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3925:4:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"3912:17:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1886,"nodeType":"ExpressionStatement","src":"3912:17:13"}]}},{"expression":{"id":1891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1889,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"3957:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3971:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"3957:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1892,"nodeType":"ExpressionStatement","src":"3957:15:13"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1861,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"3680:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3684:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3680:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1894,"initializationExpression":{"assignments":[1858],"declarations":[{"constant":false,"id":1858,"mutability":"mutable","name":"i","nameLocation":"3672:1:13","nodeType":"VariableDeclaration","scope":1894,"src":"3664:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1857,"name":"uint256","nodeType":"ElementaryTypeName","src":"3664:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1860,"initialValue":{"hexValue":"3431","id":1859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3676:2:13","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3664:14:13"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":1865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"3687:3:13","subExpression":{"id":1864,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"3689:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1866,"nodeType":"ExpressionStatement","src":"3687:3:13"},"nodeType":"ForStatement","src":"3659:324:13"},{"expression":{"arguments":[{"id":1897,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1845,"src":"4006:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3999:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1895,"name":"string","nodeType":"ElementaryTypeName","src":"3999:6:13","typeDescriptions":{}}},"id":1898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3999:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1843,"id":1899,"nodeType":"Return","src":"3992:21:13"}]},"documentation":{"id":1837,"nodeType":"StructuredDocumentation","src":"3127:165:13","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":1901,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3306:19:13","nodeType":"FunctionDefinition","parameters":{"id":1840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1839,"mutability":"mutable","name":"addr","nameLocation":"3334:4:13","nodeType":"VariableDeclaration","scope":1901,"src":"3326:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1838,"name":"address","nodeType":"ElementaryTypeName","src":"3326:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3325:14:13"},"returnParameters":{"id":1843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1842,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1901,"src":"3363:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1841,"name":"string","nodeType":"ElementaryTypeName","src":"3363:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3362:15:13"},"scope":2809,"src":"3297:723:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1937,"nodeType":"Block","src":"4175:104:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1913,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"4198:1:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4192:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1911,"name":"bytes","nodeType":"ElementaryTypeName","src":"4192:5:13","typeDescriptions":{}}},"id":1914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4192:8:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4201:6:13","memberName":"length","nodeType":"MemberAccess","src":"4192:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1918,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"4217:1:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1917,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4211:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1916,"name":"bytes","nodeType":"ElementaryTypeName","src":"4211:5:13","typeDescriptions":{}}},"id":1919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4211:8:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4220:6:13","memberName":"length","nodeType":"MemberAccess","src":"4211:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4192:34:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1925,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"4246:1:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1924,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4240:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1923,"name":"bytes","nodeType":"ElementaryTypeName","src":"4240:5:13","typeDescriptions":{}}},"id":1926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4240:8:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1922,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4230:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4230:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":1931,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"4269:1:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1930,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4263:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1929,"name":"bytes","nodeType":"ElementaryTypeName","src":"4263:5:13","typeDescriptions":{}}},"id":1932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4263:8:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1928,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4253:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4253:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4230:42:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4192:80:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1910,"id":1936,"nodeType":"Return","src":"4185:87:13"}]},"documentation":{"id":1902,"nodeType":"StructuredDocumentation","src":"4026:66:13","text":" @dev Returns true if the two strings are equal."},"id":1938,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4106:5:13","nodeType":"FunctionDefinition","parameters":{"id":1907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1904,"mutability":"mutable","name":"a","nameLocation":"4126:1:13","nodeType":"VariableDeclaration","scope":1938,"src":"4112:15:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1903,"name":"string","nodeType":"ElementaryTypeName","src":"4112:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1906,"mutability":"mutable","name":"b","nameLocation":"4143:1:13","nodeType":"VariableDeclaration","scope":1938,"src":"4129:15:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1905,"name":"string","nodeType":"ElementaryTypeName","src":"4129:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4111:34:13"},"returnParameters":{"id":1910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1909,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1938,"src":"4169:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1908,"name":"bool","nodeType":"ElementaryTypeName","src":"4169:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4168:6:13"},"scope":2809,"src":"4097:182:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1956,"nodeType":"Block","src":"4576:64:13","statements":[{"expression":{"arguments":[{"id":1947,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"4603:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4610:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1951,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"4619:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1950,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4613:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1949,"name":"bytes","nodeType":"ElementaryTypeName","src":"4613:5:13","typeDescriptions":{}}},"id":1952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4613:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4626:6:13","memberName":"length","nodeType":"MemberAccess","src":"4613:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1946,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[1957,1988],"referencedDeclaration":1988,"src":"4593:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":1954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4593:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1945,"id":1955,"nodeType":"Return","src":"4586:47:13"}]},"documentation":{"id":1939,"nodeType":"StructuredDocumentation","src":"4285:214:13","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":1957,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4513:9:13","nodeType":"FunctionDefinition","parameters":{"id":1942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1941,"mutability":"mutable","name":"input","nameLocation":"4537:5:13","nodeType":"VariableDeclaration","scope":1957,"src":"4523:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1940,"name":"string","nodeType":"ElementaryTypeName","src":"4523:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4522:21:13"},"returnParameters":{"id":1945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1944,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1957,"src":"4567:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1943,"name":"uint256","nodeType":"ElementaryTypeName","src":"4567:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4566:9:13"},"scope":2809,"src":"4504:136:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1987,"nodeType":"Block","src":"5038:153:13","statements":[{"assignments":[1970,1972],"declarations":[{"constant":false,"id":1970,"mutability":"mutable","name":"success","nameLocation":"5054:7:13","nodeType":"VariableDeclaration","scope":1987,"src":"5049:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1969,"name":"bool","nodeType":"ElementaryTypeName","src":"5049:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1972,"mutability":"mutable","name":"value","nameLocation":"5071:5:13","nodeType":"VariableDeclaration","scope":1987,"src":"5063:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1971,"name":"uint256","nodeType":"ElementaryTypeName","src":"5063:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1978,"initialValue":{"arguments":[{"id":1974,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"5093:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1975,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"5100:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1976,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"5107:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1973,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[2009,2046],"referencedDeclaration":2046,"src":"5080:12:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5080:31:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5048:63:13"},{"condition":{"id":1980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5125:8:13","subExpression":{"id":1979,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1970,"src":"5126:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1984,"nodeType":"IfStatement","src":"5121:41:13","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1981,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1636,"src":"5142:18:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5142:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1983,"nodeType":"RevertStatement","src":"5135:27:13"}},{"expression":{"id":1985,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1972,"src":"5179:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1968,"id":1986,"nodeType":"Return","src":"5172:12:13"}]},"documentation":{"id":1958,"nodeType":"StructuredDocumentation","src":"4646:287:13","text":" @dev Variant of {parseUint} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":1988,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4947:9:13","nodeType":"FunctionDefinition","parameters":{"id":1965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1960,"mutability":"mutable","name":"input","nameLocation":"4971:5:13","nodeType":"VariableDeclaration","scope":1988,"src":"4957:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1959,"name":"string","nodeType":"ElementaryTypeName","src":"4957:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1962,"mutability":"mutable","name":"begin","nameLocation":"4986:5:13","nodeType":"VariableDeclaration","scope":1988,"src":"4978:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1961,"name":"uint256","nodeType":"ElementaryTypeName","src":"4978:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1964,"mutability":"mutable","name":"end","nameLocation":"5001:3:13","nodeType":"VariableDeclaration","scope":1988,"src":"4993:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1963,"name":"uint256","nodeType":"ElementaryTypeName","src":"4993:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4956:49:13"},"returnParameters":{"id":1968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1967,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1988,"src":"5029:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1966,"name":"uint256","nodeType":"ElementaryTypeName","src":"5029:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5028:9:13"},"scope":2809,"src":"4938:253:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2008,"nodeType":"Block","src":"5512:83:13","statements":[{"expression":{"arguments":[{"id":1999,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1991,"src":"5558:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5565:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2003,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1991,"src":"5574:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2002,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5568:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2001,"name":"bytes","nodeType":"ElementaryTypeName","src":"5568:5:13","typeDescriptions":{}}},"id":2004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5568:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5581:6:13","memberName":"length","nodeType":"MemberAccess","src":"5568:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1998,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2116,"src":"5529:28:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5529:59:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1997,"id":2007,"nodeType":"Return","src":"5522:66:13"}]},"documentation":{"id":1989,"nodeType":"StructuredDocumentation","src":"5197:215:13","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2009,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5426:12:13","nodeType":"FunctionDefinition","parameters":{"id":1992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1991,"mutability":"mutable","name":"input","nameLocation":"5453:5:13","nodeType":"VariableDeclaration","scope":2009,"src":"5439:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1990,"name":"string","nodeType":"ElementaryTypeName","src":"5439:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5438:21:13"},"returnParameters":{"id":1997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1994,"mutability":"mutable","name":"success","nameLocation":"5488:7:13","nodeType":"VariableDeclaration","scope":2009,"src":"5483:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1993,"name":"bool","nodeType":"ElementaryTypeName","src":"5483:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1996,"mutability":"mutable","name":"value","nameLocation":"5505:5:13","nodeType":"VariableDeclaration","scope":2009,"src":"5497:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1995,"name":"uint256","nodeType":"ElementaryTypeName","src":"5497:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5482:29:13"},"scope":2809,"src":"5417:178:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2045,"nodeType":"Block","src":"5997:144:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2023,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"6011:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2026,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"6023:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2025,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6017:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2024,"name":"bytes","nodeType":"ElementaryTypeName","src":"6017:5:13","typeDescriptions":{}}},"id":2027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6017:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6030:6:13","memberName":"length","nodeType":"MemberAccess","src":"6017:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6011:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2030,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2014,"src":"6040:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2031,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"6048:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6040:11:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6011:40:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2038,"nodeType":"IfStatement","src":"6007:63:13","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6061:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6068:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2036,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6060:10:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2022,"id":2037,"nodeType":"Return","src":"6053:17:13"}},{"expression":{"arguments":[{"id":2040,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"6116:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2041,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2014,"src":"6123:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2042,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"6130:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2039,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2116,"src":"6087:28:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6087:47:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2022,"id":2044,"nodeType":"Return","src":"6080:54:13"}]},"documentation":{"id":2010,"nodeType":"StructuredDocumentation","src":"5601:238:13","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2046,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5853:12:13","nodeType":"FunctionDefinition","parameters":{"id":2017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2012,"mutability":"mutable","name":"input","nameLocation":"5889:5:13","nodeType":"VariableDeclaration","scope":2046,"src":"5875:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2011,"name":"string","nodeType":"ElementaryTypeName","src":"5875:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2014,"mutability":"mutable","name":"begin","nameLocation":"5912:5:13","nodeType":"VariableDeclaration","scope":2046,"src":"5904:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2013,"name":"uint256","nodeType":"ElementaryTypeName","src":"5904:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2016,"mutability":"mutable","name":"end","nameLocation":"5935:3:13","nodeType":"VariableDeclaration","scope":2046,"src":"5927:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2015,"name":"uint256","nodeType":"ElementaryTypeName","src":"5927:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5865:79:13"},"returnParameters":{"id":2022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2019,"mutability":"mutable","name":"success","nameLocation":"5973:7:13","nodeType":"VariableDeclaration","scope":2046,"src":"5968:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2018,"name":"bool","nodeType":"ElementaryTypeName","src":"5968:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2021,"mutability":"mutable","name":"value","nameLocation":"5990:5:13","nodeType":"VariableDeclaration","scope":2046,"src":"5982:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2020,"name":"uint256","nodeType":"ElementaryTypeName","src":"5982:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5967:29:13"},"scope":2809,"src":"5844:297:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2115,"nodeType":"Block","src":"6521:347:13","statements":[{"assignments":[2061],"declarations":[{"constant":false,"id":2061,"mutability":"mutable","name":"buffer","nameLocation":"6544:6:13","nodeType":"VariableDeclaration","scope":2115,"src":"6531:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2060,"name":"bytes","nodeType":"ElementaryTypeName","src":"6531:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2066,"initialValue":{"arguments":[{"id":2064,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2049,"src":"6559:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2063,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6553:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2062,"name":"bytes","nodeType":"ElementaryTypeName","src":"6553:5:13","typeDescriptions":{}}},"id":2065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6553:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6531:34:13"},{"assignments":[2068],"declarations":[{"constant":false,"id":2068,"mutability":"mutable","name":"result","nameLocation":"6584:6:13","nodeType":"VariableDeclaration","scope":2115,"src":"6576:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2067,"name":"uint256","nodeType":"ElementaryTypeName","src":"6576:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2070,"initialValue":{"hexValue":"30","id":2069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6593:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6576:18:13"},{"body":{"id":2109,"nodeType":"Block","src":"6642:189:13","statements":[{"assignments":[2082],"declarations":[{"constant":false,"id":2082,"mutability":"mutable","name":"chr","nameLocation":"6662:3:13","nodeType":"VariableDeclaration","scope":2109,"src":"6656:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2081,"name":"uint8","nodeType":"ElementaryTypeName","src":"6656:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2092,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":2087,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2061,"src":"6711:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2088,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2072,"src":"6719:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2086,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"6688:22:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6688:33:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2085,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6681:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2084,"name":"bytes1","nodeType":"ElementaryTypeName","src":"6681:6:13","typeDescriptions":{}}},"id":2090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6681:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2083,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2796,"src":"6668:12:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":2091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6668:55:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"6656:67:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2093,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"6741:3:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":2094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6747:1:13","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"6741:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2100,"nodeType":"IfStatement","src":"6737:30:13","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6758:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6765:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2098,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6757:10:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2059,"id":2099,"nodeType":"Return","src":"6750:17:13"}},{"expression":{"id":2103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2101,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2068,"src":"6781:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":2102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6791:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"6781:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2104,"nodeType":"ExpressionStatement","src":"6781:12:13"},{"expression":{"id":2107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2105,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2068,"src":"6807:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2106,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"6817:3:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6807:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2108,"nodeType":"ExpressionStatement","src":"6807:13:13"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2075,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2072,"src":"6628:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2076,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2053,"src":"6632:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6628:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2110,"initializationExpression":{"assignments":[2072],"declarations":[{"constant":false,"id":2072,"mutability":"mutable","name":"i","nameLocation":"6617:1:13","nodeType":"VariableDeclaration","scope":2110,"src":"6609:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2071,"name":"uint256","nodeType":"ElementaryTypeName","src":"6609:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2074,"initialValue":{"id":2073,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"6621:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6609:17:13"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6637:3:13","subExpression":{"id":2078,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2072,"src":"6639:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2080,"nodeType":"ExpressionStatement","src":"6637:3:13"},"nodeType":"ForStatement","src":"6604:227:13"},{"expression":{"components":[{"hexValue":"74727565","id":2111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6848:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2112,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2068,"src":"6854:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2113,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6847:14:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2059,"id":2114,"nodeType":"Return","src":"6840:21:13"}]},"documentation":{"id":2047,"nodeType":"StructuredDocumentation","src":"6147:201:13","text":" @dev Implementation of {tryParseUint} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2116,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6362:28:13","nodeType":"FunctionDefinition","parameters":{"id":2054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2049,"mutability":"mutable","name":"input","nameLocation":"6414:5:13","nodeType":"VariableDeclaration","scope":2116,"src":"6400:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2048,"name":"string","nodeType":"ElementaryTypeName","src":"6400:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2051,"mutability":"mutable","name":"begin","nameLocation":"6437:5:13","nodeType":"VariableDeclaration","scope":2116,"src":"6429:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2050,"name":"uint256","nodeType":"ElementaryTypeName","src":"6429:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2053,"mutability":"mutable","name":"end","nameLocation":"6460:3:13","nodeType":"VariableDeclaration","scope":2116,"src":"6452:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2052,"name":"uint256","nodeType":"ElementaryTypeName","src":"6452:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6390:79:13"},"returnParameters":{"id":2059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2056,"mutability":"mutable","name":"success","nameLocation":"6497:7:13","nodeType":"VariableDeclaration","scope":2116,"src":"6492:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2055,"name":"bool","nodeType":"ElementaryTypeName","src":"6492:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2058,"mutability":"mutable","name":"value","nameLocation":"6514:5:13","nodeType":"VariableDeclaration","scope":2116,"src":"6506:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2057,"name":"uint256","nodeType":"ElementaryTypeName","src":"6506:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6491:29:13"},"scope":2809,"src":"6353:515:13","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2134,"nodeType":"Block","src":"7165:63:13","statements":[{"expression":{"arguments":[{"id":2125,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2119,"src":"7191:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7198:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2129,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2119,"src":"7207:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7201:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2127,"name":"bytes","nodeType":"ElementaryTypeName","src":"7201:5:13","typeDescriptions":{}}},"id":2130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7201:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7214:6:13","memberName":"length","nodeType":"MemberAccess","src":"7201:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2124,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[2135,2166],"referencedDeclaration":2166,"src":"7182:8:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":2132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7182:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2123,"id":2133,"nodeType":"Return","src":"7175:46:13"}]},"documentation":{"id":2117,"nodeType":"StructuredDocumentation","src":"6874:216:13","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2135,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7104:8:13","nodeType":"FunctionDefinition","parameters":{"id":2120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2119,"mutability":"mutable","name":"input","nameLocation":"7127:5:13","nodeType":"VariableDeclaration","scope":2135,"src":"7113:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2118,"name":"string","nodeType":"ElementaryTypeName","src":"7113:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7112:21:13"},"returnParameters":{"id":2123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2122,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2135,"src":"7157:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2121,"name":"int256","nodeType":"ElementaryTypeName","src":"7157:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7156:8:13"},"scope":2809,"src":"7095:133:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2165,"nodeType":"Block","src":"7633:151:13","statements":[{"assignments":[2148,2150],"declarations":[{"constant":false,"id":2148,"mutability":"mutable","name":"success","nameLocation":"7649:7:13","nodeType":"VariableDeclaration","scope":2165,"src":"7644:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2147,"name":"bool","nodeType":"ElementaryTypeName","src":"7644:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2150,"mutability":"mutable","name":"value","nameLocation":"7665:5:13","nodeType":"VariableDeclaration","scope":2165,"src":"7658:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2149,"name":"int256","nodeType":"ElementaryTypeName","src":"7658:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2156,"initialValue":{"arguments":[{"id":2152,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2138,"src":"7686:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2153,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2140,"src":"7693:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2154,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2142,"src":"7700:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2151,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[2187,2229],"referencedDeclaration":2229,"src":"7674:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7674:30:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7643:61:13"},{"condition":{"id":2158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7718:8:13","subExpression":{"id":2157,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2148,"src":"7719:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2162,"nodeType":"IfStatement","src":"7714:41:13","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2159,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1636,"src":"7735:18:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":2160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7735:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2161,"nodeType":"RevertStatement","src":"7728:27:13"}},{"expression":{"id":2163,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2150,"src":"7772:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2146,"id":2164,"nodeType":"Return","src":"7765:12:13"}]},"documentation":{"id":2136,"nodeType":"StructuredDocumentation","src":"7234:296:13","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2166,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7544:8:13","nodeType":"FunctionDefinition","parameters":{"id":2143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2138,"mutability":"mutable","name":"input","nameLocation":"7567:5:13","nodeType":"VariableDeclaration","scope":2166,"src":"7553:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2137,"name":"string","nodeType":"ElementaryTypeName","src":"7553:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2140,"mutability":"mutable","name":"begin","nameLocation":"7582:5:13","nodeType":"VariableDeclaration","scope":2166,"src":"7574:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2139,"name":"uint256","nodeType":"ElementaryTypeName","src":"7574:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2142,"mutability":"mutable","name":"end","nameLocation":"7597:3:13","nodeType":"VariableDeclaration","scope":2166,"src":"7589:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2141,"name":"uint256","nodeType":"ElementaryTypeName","src":"7589:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7552:49:13"},"returnParameters":{"id":2146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2145,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2166,"src":"7625:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2144,"name":"int256","nodeType":"ElementaryTypeName","src":"7625:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7624:8:13"},"scope":2809,"src":"7535:249:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2186,"nodeType":"Block","src":"8175:82:13","statements":[{"expression":{"arguments":[{"id":2177,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2169,"src":"8220:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8227:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2181,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2169,"src":"8236:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2180,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8230:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2179,"name":"bytes","nodeType":"ElementaryTypeName","src":"8230:5:13","typeDescriptions":{}}},"id":2182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8230:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8243:6:13","memberName":"length","nodeType":"MemberAccess","src":"8230:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2176,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"8192:27:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8192:58:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2175,"id":2185,"nodeType":"Return","src":"8185:65:13"}]},"documentation":{"id":2167,"nodeType":"StructuredDocumentation","src":"7790:287:13","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2187,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8091:11:13","nodeType":"FunctionDefinition","parameters":{"id":2170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2169,"mutability":"mutable","name":"input","nameLocation":"8117:5:13","nodeType":"VariableDeclaration","scope":2187,"src":"8103:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2168,"name":"string","nodeType":"ElementaryTypeName","src":"8103:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8102:21:13"},"returnParameters":{"id":2175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2172,"mutability":"mutable","name":"success","nameLocation":"8152:7:13","nodeType":"VariableDeclaration","scope":2187,"src":"8147:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2171,"name":"bool","nodeType":"ElementaryTypeName","src":"8147:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2174,"mutability":"mutable","name":"value","nameLocation":"8168:5:13","nodeType":"VariableDeclaration","scope":2187,"src":"8161:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2173,"name":"int256","nodeType":"ElementaryTypeName","src":"8161:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8146:28:13"},"scope":2809,"src":"8082:175:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":2192,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8288:14:13","nodeType":"VariableDeclaration","scope":2809,"src":"8263:50:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2188,"name":"uint256","nodeType":"ElementaryTypeName","src":"8263:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":2191,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8305:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":2190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8310:3:13","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8305:8:13","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":2228,"nodeType":"Block","src":"8779:143:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2206,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2199,"src":"8793:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2209,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2195,"src":"8805:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2208,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8799:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2207,"name":"bytes","nodeType":"ElementaryTypeName","src":"8799:5:13","typeDescriptions":{}}},"id":2210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8799:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8812:6:13","memberName":"length","nodeType":"MemberAccess","src":"8799:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8793:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2213,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2197,"src":"8822:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2214,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2199,"src":"8830:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8822:11:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8793:40:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2221,"nodeType":"IfStatement","src":"8789:63:13","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8843:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8850:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2219,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"8842:10:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2205,"id":2220,"nodeType":"Return","src":"8835:17:13"}},{"expression":{"arguments":[{"id":2223,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2195,"src":"8897:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2224,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2197,"src":"8904:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2225,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2199,"src":"8911:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2222,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"8869:27:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8869:46:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2205,"id":2227,"nodeType":"Return","src":"8862:53:13"}]},"documentation":{"id":2193,"nodeType":"StructuredDocumentation","src":"8320:303:13","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2229,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8637:11:13","nodeType":"FunctionDefinition","parameters":{"id":2200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2195,"mutability":"mutable","name":"input","nameLocation":"8672:5:13","nodeType":"VariableDeclaration","scope":2229,"src":"8658:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2194,"name":"string","nodeType":"ElementaryTypeName","src":"8658:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2197,"mutability":"mutable","name":"begin","nameLocation":"8695:5:13","nodeType":"VariableDeclaration","scope":2229,"src":"8687:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2196,"name":"uint256","nodeType":"ElementaryTypeName","src":"8687:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2199,"mutability":"mutable","name":"end","nameLocation":"8718:3:13","nodeType":"VariableDeclaration","scope":2229,"src":"8710:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2198,"name":"uint256","nodeType":"ElementaryTypeName","src":"8710:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8648:79:13"},"returnParameters":{"id":2205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2202,"mutability":"mutable","name":"success","nameLocation":"8756:7:13","nodeType":"VariableDeclaration","scope":2229,"src":"8751:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2201,"name":"bool","nodeType":"ElementaryTypeName","src":"8751:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2204,"mutability":"mutable","name":"value","nameLocation":"8772:5:13","nodeType":"VariableDeclaration","scope":2229,"src":"8765:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2203,"name":"int256","nodeType":"ElementaryTypeName","src":"8765:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8750:28:13"},"scope":2809,"src":"8628:294:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2349,"nodeType":"Block","src":"9299:812:13","statements":[{"assignments":[2244],"declarations":[{"constant":false,"id":2244,"mutability":"mutable","name":"buffer","nameLocation":"9322:6:13","nodeType":"VariableDeclaration","scope":2349,"src":"9309:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2243,"name":"bytes","nodeType":"ElementaryTypeName","src":"9309:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2249,"initialValue":{"arguments":[{"id":2247,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"9337:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2246,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9331:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2245,"name":"bytes","nodeType":"ElementaryTypeName","src":"9331:5:13","typeDescriptions":{}}},"id":2248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9331:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9309:34:13"},{"assignments":[2251],"declarations":[{"constant":false,"id":2251,"mutability":"mutable","name":"sign","nameLocation":"9407:4:13","nodeType":"VariableDeclaration","scope":2349,"src":"9400:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2250,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9400:6:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":2267,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2252,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"9414:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2253,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2236,"src":"9423:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9414:12:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":2262,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"9471:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2263,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"9479:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2261,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"9448:22:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9448:37:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2260,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9441:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2259,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9441:6:13","typeDescriptions":{}}},"id":2265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9441:45:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9414:72:13","trueExpression":{"arguments":[{"hexValue":"30","id":2257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9436:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9429:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2255,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9429:6:13","typeDescriptions":{}}},"id":2258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9429:9:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9400:86:13"},{"assignments":[2269],"declarations":[{"constant":false,"id":2269,"mutability":"mutable","name":"positiveSign","nameLocation":"9572:12:13","nodeType":"VariableDeclaration","scope":2349,"src":"9567:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2268,"name":"bool","nodeType":"ElementaryTypeName","src":"9567:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2276,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2270,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2251,"src":"9587:4:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":2273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9602:3:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":2272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9595:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2271,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9595:6:13","typeDescriptions":{}}},"id":2274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9595:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9587:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9567:39:13"},{"assignments":[2278],"declarations":[{"constant":false,"id":2278,"mutability":"mutable","name":"negativeSign","nameLocation":"9621:12:13","nodeType":"VariableDeclaration","scope":2349,"src":"9616:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2277,"name":"bool","nodeType":"ElementaryTypeName","src":"9616:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2285,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2279,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2251,"src":"9636:4:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":2282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9651:3:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":2281,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9644:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2280,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9644:6:13","typeDescriptions":{}}},"id":2283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9644:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9636:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9616:39:13"},{"assignments":[2287],"declarations":[{"constant":false,"id":2287,"mutability":"mutable","name":"offset","nameLocation":"9673:6:13","nodeType":"VariableDeclaration","scope":2349,"src":"9665:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2286,"name":"uint256","nodeType":"ElementaryTypeName","src":"9665:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2294,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2288,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2269,"src":"9683:12:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":2289,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2278,"src":"9699:12:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9683:28:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2291,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9682:30:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9713:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6828,"src":"9682:37:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9682:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9665:56:13"},{"assignments":[2296,2298],"declarations":[{"constant":false,"id":2296,"mutability":"mutable","name":"absSuccess","nameLocation":"9738:10:13","nodeType":"VariableDeclaration","scope":2349,"src":"9733:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2295,"name":"bool","nodeType":"ElementaryTypeName","src":"9733:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2298,"mutability":"mutable","name":"absValue","nameLocation":"9758:8:13","nodeType":"VariableDeclaration","scope":2349,"src":"9750:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2297,"name":"uint256","nodeType":"ElementaryTypeName","src":"9750:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2306,"initialValue":{"arguments":[{"id":2300,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"9783:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2301,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"9790:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2302,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2287,"src":"9798:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9790:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2304,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2236,"src":"9806:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2299,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[2009,2046],"referencedDeclaration":2046,"src":"9770:12:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9770:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"9732:78:13"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2307,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2296,"src":"9825:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2308,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2298,"src":"9839:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2309,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"9850:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9839:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9825:39:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2327,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2296,"src":"9967:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":2328,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2278,"src":"9981:12:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9967:26:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2330,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2298,"src":"9997:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2331,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"10009:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9997:26:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9967:56:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10095:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10102:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2345,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10094:10:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2242,"id":2346,"nodeType":"Return","src":"10087:17:13"},"id":2347,"nodeType":"IfStatement","src":"9963:141:13","trueBody":{"id":2342,"nodeType":"Block","src":"10025:56:13","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10047:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":2337,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10058:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2336,"name":"int256","nodeType":"ElementaryTypeName","src":"10058:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":2335,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10053:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10053:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":2339,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10066:3:13","memberName":"min","nodeType":"MemberAccess","src":"10053:16:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2340,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10046:24:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2242,"id":2341,"nodeType":"Return","src":"10039:31:13"}]}},"id":2348,"nodeType":"IfStatement","src":"9821:283:13","trueBody":{"id":2326,"nodeType":"Block","src":"9866:91:13","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9888:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":2313,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2278,"src":"9894:12:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":2321,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2298,"src":"9936:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2320,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9929:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2319,"name":"int256","nodeType":"ElementaryTypeName","src":"9929:6:13","typeDescriptions":{}}},"id":2322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9929:16:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9894:51:13","trueExpression":{"id":2318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"9909:17:13","subExpression":{"arguments":[{"id":2316,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2298,"src":"9917:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9910:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2314,"name":"int256","nodeType":"ElementaryTypeName","src":"9910:6:13","typeDescriptions":{}}},"id":2317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9910:16:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2324,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9887:59:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2242,"id":2325,"nodeType":"Return","src":"9880:66:13"}]}}]},"documentation":{"id":2230,"nodeType":"StructuredDocumentation","src":"8928:200:13","text":" @dev Implementation of {tryParseInt} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2350,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9142:27:13","nodeType":"FunctionDefinition","parameters":{"id":2237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2232,"mutability":"mutable","name":"input","nameLocation":"9193:5:13","nodeType":"VariableDeclaration","scope":2350,"src":"9179:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2231,"name":"string","nodeType":"ElementaryTypeName","src":"9179:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2234,"mutability":"mutable","name":"begin","nameLocation":"9216:5:13","nodeType":"VariableDeclaration","scope":2350,"src":"9208:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2233,"name":"uint256","nodeType":"ElementaryTypeName","src":"9208:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2236,"mutability":"mutable","name":"end","nameLocation":"9239:3:13","nodeType":"VariableDeclaration","scope":2350,"src":"9231:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2235,"name":"uint256","nodeType":"ElementaryTypeName","src":"9231:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9169:79:13"},"returnParameters":{"id":2242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2239,"mutability":"mutable","name":"success","nameLocation":"9276:7:13","nodeType":"VariableDeclaration","scope":2350,"src":"9271:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2238,"name":"bool","nodeType":"ElementaryTypeName","src":"9271:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2241,"mutability":"mutable","name":"value","nameLocation":"9292:5:13","nodeType":"VariableDeclaration","scope":2350,"src":"9285:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2240,"name":"int256","nodeType":"ElementaryTypeName","src":"9285:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9270:28:13"},"scope":2809,"src":"9133:978:13","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2368,"nodeType":"Block","src":"10456:67:13","statements":[{"expression":{"arguments":[{"id":2359,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2353,"src":"10486:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10493:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2363,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2353,"src":"10502:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10496:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2361,"name":"bytes","nodeType":"ElementaryTypeName","src":"10496:5:13","typeDescriptions":{}}},"id":2364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10496:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10509:6:13","memberName":"length","nodeType":"MemberAccess","src":"10496:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2358,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[2369,2400],"referencedDeclaration":2400,"src":"10473:12:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":2366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10473:43:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2357,"id":2367,"nodeType":"Return","src":"10466:50:13"}]},"documentation":{"id":2351,"nodeType":"StructuredDocumentation","src":"10117:259:13","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":2369,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10390:12:13","nodeType":"FunctionDefinition","parameters":{"id":2354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2353,"mutability":"mutable","name":"input","nameLocation":"10417:5:13","nodeType":"VariableDeclaration","scope":2369,"src":"10403:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2352,"name":"string","nodeType":"ElementaryTypeName","src":"10403:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10402:21:13"},"returnParameters":{"id":2357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2356,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2369,"src":"10447:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2355,"name":"uint256","nodeType":"ElementaryTypeName","src":"10447:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10446:9:13"},"scope":2809,"src":"10381:142:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2399,"nodeType":"Block","src":"10937:156:13","statements":[{"assignments":[2382,2384],"declarations":[{"constant":false,"id":2382,"mutability":"mutable","name":"success","nameLocation":"10953:7:13","nodeType":"VariableDeclaration","scope":2399,"src":"10948:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2381,"name":"bool","nodeType":"ElementaryTypeName","src":"10948:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2384,"mutability":"mutable","name":"value","nameLocation":"10970:5:13","nodeType":"VariableDeclaration","scope":2399,"src":"10962:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2383,"name":"uint256","nodeType":"ElementaryTypeName","src":"10962:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2390,"initialValue":{"arguments":[{"id":2386,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2372,"src":"10995:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2387,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2374,"src":"11002:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2388,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2376,"src":"11009:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2385,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[2421,2458],"referencedDeclaration":2458,"src":"10979:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10979:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10947:66:13"},{"condition":{"id":2392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11027:8:13","subExpression":{"id":2391,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2382,"src":"11028:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2396,"nodeType":"IfStatement","src":"11023:41:13","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2393,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1636,"src":"11044:18:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":2394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11044:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2395,"nodeType":"RevertStatement","src":"11037:27:13"}},{"expression":{"id":2397,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2384,"src":"11081:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2380,"id":2398,"nodeType":"Return","src":"11074:12:13"}]},"documentation":{"id":2370,"nodeType":"StructuredDocumentation","src":"10529:300:13","text":" @dev Variant of {parseHexUint} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":2400,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10843:12:13","nodeType":"FunctionDefinition","parameters":{"id":2377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2372,"mutability":"mutable","name":"input","nameLocation":"10870:5:13","nodeType":"VariableDeclaration","scope":2400,"src":"10856:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2371,"name":"string","nodeType":"ElementaryTypeName","src":"10856:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2374,"mutability":"mutable","name":"begin","nameLocation":"10885:5:13","nodeType":"VariableDeclaration","scope":2400,"src":"10877:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2373,"name":"uint256","nodeType":"ElementaryTypeName","src":"10877:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2376,"mutability":"mutable","name":"end","nameLocation":"10900:3:13","nodeType":"VariableDeclaration","scope":2400,"src":"10892:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2375,"name":"uint256","nodeType":"ElementaryTypeName","src":"10892:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10855:49:13"},"returnParameters":{"id":2380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2379,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2400,"src":"10928:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2378,"name":"uint256","nodeType":"ElementaryTypeName","src":"10928:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10927:9:13"},"scope":2809,"src":"10834:259:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2420,"nodeType":"Block","src":"11420:86:13","statements":[{"expression":{"arguments":[{"id":2411,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2403,"src":"11469:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11476:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2415,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2403,"src":"11485:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2414,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11479:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2413,"name":"bytes","nodeType":"ElementaryTypeName","src":"11479:5:13","typeDescriptions":{}}},"id":2416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11479:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11492:6:13","memberName":"length","nodeType":"MemberAccess","src":"11479:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2410,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2561,"src":"11437:31:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11437:62:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2409,"id":2419,"nodeType":"Return","src":"11430:69:13"}]},"documentation":{"id":2401,"nodeType":"StructuredDocumentation","src":"11099:218:13","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2421,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11331:15:13","nodeType":"FunctionDefinition","parameters":{"id":2404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2403,"mutability":"mutable","name":"input","nameLocation":"11361:5:13","nodeType":"VariableDeclaration","scope":2421,"src":"11347:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2402,"name":"string","nodeType":"ElementaryTypeName","src":"11347:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11346:21:13"},"returnParameters":{"id":2409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2406,"mutability":"mutable","name":"success","nameLocation":"11396:7:13","nodeType":"VariableDeclaration","scope":2421,"src":"11391:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2405,"name":"bool","nodeType":"ElementaryTypeName","src":"11391:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2408,"mutability":"mutable","name":"value","nameLocation":"11413:5:13","nodeType":"VariableDeclaration","scope":2421,"src":"11405:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2407,"name":"uint256","nodeType":"ElementaryTypeName","src":"11405:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11390:29:13"},"scope":2809,"src":"11322:184:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2457,"nodeType":"Block","src":"11914:147:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2435,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2428,"src":"11928:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2438,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2424,"src":"11940:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11934:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2436,"name":"bytes","nodeType":"ElementaryTypeName","src":"11934:5:13","typeDescriptions":{}}},"id":2439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11934:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11947:6:13","memberName":"length","nodeType":"MemberAccess","src":"11934:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11928:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2442,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"11957:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2443,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2428,"src":"11965:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11957:11:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11928:40:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2450,"nodeType":"IfStatement","src":"11924:63:13","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11978:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11985:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2448,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"11977:10:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2434,"id":2449,"nodeType":"Return","src":"11970:17:13"}},{"expression":{"arguments":[{"id":2452,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2424,"src":"12036:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2453,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"12043:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2454,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2428,"src":"12050:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2451,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2561,"src":"12004:31:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12004:50:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2434,"id":2456,"nodeType":"Return","src":"11997:57:13"}]},"documentation":{"id":2422,"nodeType":"StructuredDocumentation","src":"11512:241:13","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2458,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11767:15:13","nodeType":"FunctionDefinition","parameters":{"id":2429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2424,"mutability":"mutable","name":"input","nameLocation":"11806:5:13","nodeType":"VariableDeclaration","scope":2458,"src":"11792:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2423,"name":"string","nodeType":"ElementaryTypeName","src":"11792:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2426,"mutability":"mutable","name":"begin","nameLocation":"11829:5:13","nodeType":"VariableDeclaration","scope":2458,"src":"11821:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2425,"name":"uint256","nodeType":"ElementaryTypeName","src":"11821:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2428,"mutability":"mutable","name":"end","nameLocation":"11852:3:13","nodeType":"VariableDeclaration","scope":2458,"src":"11844:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2427,"name":"uint256","nodeType":"ElementaryTypeName","src":"11844:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11782:79:13"},"returnParameters":{"id":2434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2431,"mutability":"mutable","name":"success","nameLocation":"11890:7:13","nodeType":"VariableDeclaration","scope":2458,"src":"11885:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2430,"name":"bool","nodeType":"ElementaryTypeName","src":"11885:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2433,"mutability":"mutable","name":"value","nameLocation":"11907:5:13","nodeType":"VariableDeclaration","scope":2458,"src":"11899:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2432,"name":"uint256","nodeType":"ElementaryTypeName","src":"11899:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11884:29:13"},"scope":2809,"src":"11758:303:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2560,"nodeType":"Block","src":"12447:880:13","statements":[{"assignments":[2473],"declarations":[{"constant":false,"id":2473,"mutability":"mutable","name":"buffer","nameLocation":"12470:6:13","nodeType":"VariableDeclaration","scope":2560,"src":"12457:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2472,"name":"bytes","nodeType":"ElementaryTypeName","src":"12457:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2478,"initialValue":{"arguments":[{"id":2476,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2461,"src":"12485:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2475,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12479:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2474,"name":"bytes","nodeType":"ElementaryTypeName","src":"12479:5:13","typeDescriptions":{}}},"id":2477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12479:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12457:34:13"},{"assignments":[2480],"declarations":[{"constant":false,"id":2480,"mutability":"mutable","name":"hasPrefix","nameLocation":"12544:9:13","nodeType":"VariableDeclaration","scope":2560,"src":"12539:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2479,"name":"bool","nodeType":"ElementaryTypeName","src":"12539:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2500,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2481,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2465,"src":"12557:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2482,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"12563:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12571:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12563:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12557:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2486,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12556:17:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":2498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2490,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2473,"src":"12607:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2491,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"12615:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2489,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"12584:22:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12584:37:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12577:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2487,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12577:6:13","typeDescriptions":{}}},"id":2493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12577:45:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":2496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12633:4:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":2495,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12626:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2494,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12626:6:13","typeDescriptions":{}}},"id":2497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12626:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12577:61:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12556:82:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12539:99:13"},{"assignments":[2502],"declarations":[{"constant":false,"id":2502,"mutability":"mutable","name":"offset","nameLocation":"12727:6:13","nodeType":"VariableDeclaration","scope":2560,"src":"12719:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2501,"name":"uint256","nodeType":"ElementaryTypeName","src":"12719:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2508,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2503,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"12736:9:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12746:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6828,"src":"12736:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12736:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":2506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12757:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12736:22:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12719:39:13"},{"assignments":[2510],"declarations":[{"constant":false,"id":2510,"mutability":"mutable","name":"result","nameLocation":"12777:6:13","nodeType":"VariableDeclaration","scope":2560,"src":"12769:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2509,"name":"uint256","nodeType":"ElementaryTypeName","src":"12769:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2512,"initialValue":{"hexValue":"30","id":2511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12786:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12769:18:13"},{"body":{"id":2554,"nodeType":"Block","src":"12844:446:13","statements":[{"assignments":[2526],"declarations":[{"constant":false,"id":2526,"mutability":"mutable","name":"chr","nameLocation":"12864:3:13","nodeType":"VariableDeclaration","scope":2554,"src":"12858:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2525,"name":"uint8","nodeType":"ElementaryTypeName","src":"12858:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2536,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":2531,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2473,"src":"12913:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2532,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2514,"src":"12921:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2530,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"12890:22:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12890:33:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2529,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12883:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2528,"name":"bytes1","nodeType":"ElementaryTypeName","src":"12883:6:13","typeDescriptions":{}}},"id":2534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12883:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2527,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2796,"src":"12870:12:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":2535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12870:55:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"12858:67:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2537,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2526,"src":"12943:3:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":2538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12949:2:13","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"12943:8:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2544,"nodeType":"IfStatement","src":"12939:31:13","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12961:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12968:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2542,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12960:10:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2471,"id":2543,"nodeType":"Return","src":"12953:17:13"}},{"expression":{"id":2547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2545,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2510,"src":"12984:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":2546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12994:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12984:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2548,"nodeType":"ExpressionStatement","src":"12984:12:13"},{"id":2553,"nodeType":"UncheckedBlock","src":"13010:270:13","statements":[{"expression":{"id":2551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2549,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2510,"src":"13252:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2550,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2526,"src":"13262:3:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13252:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2552,"nodeType":"ExpressionStatement","src":"13252:13:13"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2519,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2514,"src":"12830:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2520,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2465,"src":"12834:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12830:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2555,"initializationExpression":{"assignments":[2514],"declarations":[{"constant":false,"id":2514,"mutability":"mutable","name":"i","nameLocation":"12810:1:13","nodeType":"VariableDeclaration","scope":2555,"src":"12802:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2513,"name":"uint256","nodeType":"ElementaryTypeName","src":"12802:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2518,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2515,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"12814:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2516,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2502,"src":"12822:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12814:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12802:26:13"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"12839:3:13","subExpression":{"id":2522,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2514,"src":"12841:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2524,"nodeType":"ExpressionStatement","src":"12839:3:13"},"nodeType":"ForStatement","src":"12797:493:13"},{"expression":{"components":[{"hexValue":"74727565","id":2556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13307:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2557,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2510,"src":"13313:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2558,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13306:14:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2471,"id":2559,"nodeType":"Return","src":"13299:21:13"}]},"documentation":{"id":2459,"nodeType":"StructuredDocumentation","src":"12067:204:13","text":" @dev Implementation of {tryParseHexUint} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2561,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12285:31:13","nodeType":"FunctionDefinition","parameters":{"id":2466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2461,"mutability":"mutable","name":"input","nameLocation":"12340:5:13","nodeType":"VariableDeclaration","scope":2561,"src":"12326:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2460,"name":"string","nodeType":"ElementaryTypeName","src":"12326:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2463,"mutability":"mutable","name":"begin","nameLocation":"12363:5:13","nodeType":"VariableDeclaration","scope":2561,"src":"12355:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2462,"name":"uint256","nodeType":"ElementaryTypeName","src":"12355:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2465,"mutability":"mutable","name":"end","nameLocation":"12386:3:13","nodeType":"VariableDeclaration","scope":2561,"src":"12378:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2464,"name":"uint256","nodeType":"ElementaryTypeName","src":"12378:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12316:79:13"},"returnParameters":{"id":2471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2468,"mutability":"mutable","name":"success","nameLocation":"12423:7:13","nodeType":"VariableDeclaration","scope":2561,"src":"12418:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2467,"name":"bool","nodeType":"ElementaryTypeName","src":"12418:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2470,"mutability":"mutable","name":"value","nameLocation":"12440:5:13","nodeType":"VariableDeclaration","scope":2561,"src":"12432:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2469,"name":"uint256","nodeType":"ElementaryTypeName","src":"12432:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12417:29:13"},"scope":2809,"src":"12276:1051:13","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2579,"nodeType":"Block","src":"13625:67:13","statements":[{"expression":{"arguments":[{"id":2570,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2564,"src":"13655:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13662:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2574,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2564,"src":"13671:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2573,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13665:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2572,"name":"bytes","nodeType":"ElementaryTypeName","src":"13665:5:13","typeDescriptions":{}}},"id":2575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13665:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13678:6:13","memberName":"length","nodeType":"MemberAccess","src":"13665:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2569,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[2580,2611],"referencedDeclaration":2611,"src":"13642:12:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":2577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13642:43:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2568,"id":2578,"nodeType":"Return","src":"13635:50:13"}]},"documentation":{"id":2562,"nodeType":"StructuredDocumentation","src":"13333:212:13","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":2580,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13559:12:13","nodeType":"FunctionDefinition","parameters":{"id":2565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2564,"mutability":"mutable","name":"input","nameLocation":"13586:5:13","nodeType":"VariableDeclaration","scope":2580,"src":"13572:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2563,"name":"string","nodeType":"ElementaryTypeName","src":"13572:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13571:21:13"},"returnParameters":{"id":2568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2567,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2580,"src":"13616:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2566,"name":"address","nodeType":"ElementaryTypeName","src":"13616:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13615:9:13"},"scope":2809,"src":"13550:142:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2610,"nodeType":"Block","src":"14058:165:13","statements":[{"assignments":[2593,2595],"declarations":[{"constant":false,"id":2593,"mutability":"mutable","name":"success","nameLocation":"14074:7:13","nodeType":"VariableDeclaration","scope":2610,"src":"14069:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2592,"name":"bool","nodeType":"ElementaryTypeName","src":"14069:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2595,"mutability":"mutable","name":"value","nameLocation":"14091:5:13","nodeType":"VariableDeclaration","scope":2610,"src":"14083:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2594,"name":"address","nodeType":"ElementaryTypeName","src":"14083:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2601,"initialValue":{"arguments":[{"id":2597,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2583,"src":"14116:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2598,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"14123:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2599,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2587,"src":"14130:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2596,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[2632,2736],"referencedDeclaration":2736,"src":"14100:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":2600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14100:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14068:66:13"},{"condition":{"id":2603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14148:8:13","subExpression":{"id":2602,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"14149:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2607,"nodeType":"IfStatement","src":"14144:50:13","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2604,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1639,"src":"14165:27:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":2605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14165:29:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2606,"nodeType":"RevertStatement","src":"14158:36:13"}},{"expression":{"id":2608,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2595,"src":"14211:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2591,"id":2609,"nodeType":"Return","src":"14204:12:13"}]},"documentation":{"id":2581,"nodeType":"StructuredDocumentation","src":"13698:252:13","text":" @dev Variant of {parseAddress} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":2611,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13964:12:13","nodeType":"FunctionDefinition","parameters":{"id":2588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2583,"mutability":"mutable","name":"input","nameLocation":"13991:5:13","nodeType":"VariableDeclaration","scope":2611,"src":"13977:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2582,"name":"string","nodeType":"ElementaryTypeName","src":"13977:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2585,"mutability":"mutable","name":"begin","nameLocation":"14006:5:13","nodeType":"VariableDeclaration","scope":2611,"src":"13998:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2584,"name":"uint256","nodeType":"ElementaryTypeName","src":"13998:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2587,"mutability":"mutable","name":"end","nameLocation":"14021:3:13","nodeType":"VariableDeclaration","scope":2611,"src":"14013:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2586,"name":"uint256","nodeType":"ElementaryTypeName","src":"14013:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13976:49:13"},"returnParameters":{"id":2591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2590,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2611,"src":"14049:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2589,"name":"address","nodeType":"ElementaryTypeName","src":"14049:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14048:9:13"},"scope":2809,"src":"13955:268:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2631,"nodeType":"Block","src":"14523:70:13","statements":[{"expression":{"arguments":[{"id":2622,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2614,"src":"14556:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14563:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2626,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2614,"src":"14572:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2625,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14566:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2624,"name":"bytes","nodeType":"ElementaryTypeName","src":"14566:5:13","typeDescriptions":{}}},"id":2627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14566:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14579:6:13","memberName":"length","nodeType":"MemberAccess","src":"14566:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2621,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[2632,2736],"referencedDeclaration":2736,"src":"14540:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":2629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14540:46:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2620,"id":2630,"nodeType":"Return","src":"14533:53:13"}]},"documentation":{"id":2612,"nodeType":"StructuredDocumentation","src":"14229:191:13","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress} requirements."},"id":2632,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14434:15:13","nodeType":"FunctionDefinition","parameters":{"id":2615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2614,"mutability":"mutable","name":"input","nameLocation":"14464:5:13","nodeType":"VariableDeclaration","scope":2632,"src":"14450:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2613,"name":"string","nodeType":"ElementaryTypeName","src":"14450:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14449:21:13"},"returnParameters":{"id":2620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2617,"mutability":"mutable","name":"success","nameLocation":"14499:7:13","nodeType":"VariableDeclaration","scope":2632,"src":"14494:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2616,"name":"bool","nodeType":"ElementaryTypeName","src":"14494:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2619,"mutability":"mutable","name":"value","nameLocation":"14516:5:13","nodeType":"VariableDeclaration","scope":2632,"src":"14508:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2618,"name":"address","nodeType":"ElementaryTypeName","src":"14508:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14493:29:13"},"scope":2809,"src":"14425:168:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2735,"nodeType":"Block","src":"14963:733:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2646,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2639,"src":"14977:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2649,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2635,"src":"14989:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2648,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14983:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2647,"name":"bytes","nodeType":"ElementaryTypeName","src":"14983:5:13","typeDescriptions":{}}},"id":2650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14983:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14996:6:13","memberName":"length","nodeType":"MemberAccess","src":"14983:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14977:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2653,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"15006:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2654,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2639,"src":"15014:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15006:11:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14977:40:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2664,"nodeType":"IfStatement","src":"14973:72:13","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15027:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":2660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15042:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2659,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15034:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2658,"name":"address","nodeType":"ElementaryTypeName","src":"15034:7:13","typeDescriptions":{}}},"id":2661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15034:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2662,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15026:19:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2645,"id":2663,"nodeType":"Return","src":"15019:26:13"}},{"assignments":[2666],"declarations":[{"constant":false,"id":2666,"mutability":"mutable","name":"hasPrefix","nameLocation":"15061:9:13","nodeType":"VariableDeclaration","scope":2735,"src":"15056:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2665,"name":"bool","nodeType":"ElementaryTypeName","src":"15056:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2689,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2667,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2639,"src":"15074:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2668,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"15080:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15088:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15080:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15074:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2672,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15073:17:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":2687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":2678,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2635,"src":"15130:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2677,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15124:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2676,"name":"bytes","nodeType":"ElementaryTypeName","src":"15124:5:13","typeDescriptions":{}}},"id":2679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15124:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2680,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"15138:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2675,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"15101:22:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15101:43:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15094:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2673,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15094:6:13","typeDescriptions":{}}},"id":2682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15094:51:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":2685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15156:4:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":2684,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15149:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2683,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15149:6:13","typeDescriptions":{}}},"id":2686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15149:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15094:67:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15073:88:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15056:105:13"},{"assignments":[2691],"declarations":[{"constant":false,"id":2691,"mutability":"mutable","name":"expectedLength","nameLocation":"15250:14:13","nodeType":"VariableDeclaration","scope":2735,"src":"15242:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2690,"name":"uint256","nodeType":"ElementaryTypeName","src":"15242:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2699,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":2692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15267:2:13","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2693,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"15272:9:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15282:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6828,"src":"15272:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15272:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":2696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15293:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15272:22:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15267:27:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15242:52:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2700,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2639,"src":"15359:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2701,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"15365:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15359:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2703,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2691,"src":"15374:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15359:29:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2733,"nodeType":"Block","src":"15639:51:13","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":2726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15661:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":2729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15676:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2728,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15668:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2727,"name":"address","nodeType":"ElementaryTypeName","src":"15668:7:13","typeDescriptions":{}}},"id":2730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15668:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2731,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15660:19:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2645,"id":2732,"nodeType":"Return","src":"15653:26:13"}]},"id":2734,"nodeType":"IfStatement","src":"15355:335:13","trueBody":{"id":2725,"nodeType":"Block","src":"15390:243:13","statements":[{"assignments":[2706,2708],"declarations":[{"constant":false,"id":2706,"mutability":"mutable","name":"s","nameLocation":"15511:1:13","nodeType":"VariableDeclaration","scope":2725,"src":"15506:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2705,"name":"bool","nodeType":"ElementaryTypeName","src":"15506:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2708,"mutability":"mutable","name":"v","nameLocation":"15522:1:13","nodeType":"VariableDeclaration","scope":2725,"src":"15514:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2707,"name":"uint256","nodeType":"ElementaryTypeName","src":"15514:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2714,"initialValue":{"arguments":[{"id":2710,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2635,"src":"15559:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2711,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"15566:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2712,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2639,"src":"15573:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2709,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2561,"src":"15527:31:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15527:50:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15505:72:13"},{"expression":{"components":[{"id":2715,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2706,"src":"15599:1:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":2720,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2708,"src":"15618:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2719,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15610:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2718,"name":"uint160","nodeType":"ElementaryTypeName","src":"15610:7:13","typeDescriptions":{}}},"id":2721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15610:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2717,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15602:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2716,"name":"address","nodeType":"ElementaryTypeName","src":"15602:7:13","typeDescriptions":{}}},"id":2722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15602:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2723,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15598:24:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2645,"id":2724,"nodeType":"Return","src":"15591:31:13"}]}}]},"documentation":{"id":2633,"nodeType":"StructuredDocumentation","src":"14599:203:13","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress} requirements."},"id":2736,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14816:15:13","nodeType":"FunctionDefinition","parameters":{"id":2640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2635,"mutability":"mutable","name":"input","nameLocation":"14855:5:13","nodeType":"VariableDeclaration","scope":2736,"src":"14841:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2634,"name":"string","nodeType":"ElementaryTypeName","src":"14841:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2637,"mutability":"mutable","name":"begin","nameLocation":"14878:5:13","nodeType":"VariableDeclaration","scope":2736,"src":"14870:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2636,"name":"uint256","nodeType":"ElementaryTypeName","src":"14870:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2639,"mutability":"mutable","name":"end","nameLocation":"14901:3:13","nodeType":"VariableDeclaration","scope":2736,"src":"14893:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2638,"name":"uint256","nodeType":"ElementaryTypeName","src":"14893:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14831:79:13"},"returnParameters":{"id":2645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2642,"mutability":"mutable","name":"success","nameLocation":"14939:7:13","nodeType":"VariableDeclaration","scope":2736,"src":"14934:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2641,"name":"bool","nodeType":"ElementaryTypeName","src":"14934:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2644,"mutability":"mutable","name":"value","nameLocation":"14956:5:13","nodeType":"VariableDeclaration","scope":2736,"src":"14948:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2643,"name":"address","nodeType":"ElementaryTypeName","src":"14948:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14933:29:13"},"scope":2809,"src":"14807:889:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2795,"nodeType":"Block","src":"15765:461:13","statements":[{"assignments":[2744],"declarations":[{"constant":false,"id":2744,"mutability":"mutable","name":"value","nameLocation":"15781:5:13","nodeType":"VariableDeclaration","scope":2795,"src":"15775:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2743,"name":"uint8","nodeType":"ElementaryTypeName","src":"15775:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2749,"initialValue":{"arguments":[{"id":2747,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2738,"src":"15795:3:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2746,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15789:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2745,"name":"uint8","nodeType":"ElementaryTypeName","src":"15789:5:13","typeDescriptions":{}}},"id":2748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15789:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"15775:24:13"},{"id":2792,"nodeType":"UncheckedBlock","src":"15959:238:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2750,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2744,"src":"15987:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":2751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15995:2:13","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"15987:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2753,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2744,"src":"16001:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":2754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16009:2:13","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16001:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15987:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2761,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2744,"src":"16047:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":2762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16055:2:13","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16047:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2764,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2744,"src":"16061:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":2765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16069:3:13","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16061:11:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16047:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2772,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2744,"src":"16108:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":2773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16116:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16108:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2775,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2744,"src":"16122:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":2776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16130:2:13","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16122:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16108:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":2785,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16176:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2784,"name":"uint8","nodeType":"ElementaryTypeName","src":"16176:5:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":2783,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16171:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16171:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":2787,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16183:3:13","memberName":"max","nodeType":"MemberAccess","src":"16171:15:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":2742,"id":2788,"nodeType":"Return","src":"16164:22:13"},"id":2789,"nodeType":"IfStatement","src":"16104:82:13","trueBody":{"expression":{"id":2781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2779,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2744,"src":"16134:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":2780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16143:2:13","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16134:11:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2782,"nodeType":"ExpressionStatement","src":"16134:11:13"}},"id":2790,"nodeType":"IfStatement","src":"16043:143:13","trueBody":{"expression":{"id":2770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2768,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2744,"src":"16074:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":2769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16083:2:13","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16074:11:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2771,"nodeType":"ExpressionStatement","src":"16074:11:13"}},"id":2791,"nodeType":"IfStatement","src":"15983:203:13","trueBody":{"expression":{"id":2759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2757,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2744,"src":"16013:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":2758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16022:2:13","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16013:11:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2760,"nodeType":"ExpressionStatement","src":"16013:11:13"}}]},{"expression":{"id":2793,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2744,"src":"16214:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":2742,"id":2794,"nodeType":"Return","src":"16207:12:13"}]},"id":2796,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"15711:12:13","nodeType":"FunctionDefinition","parameters":{"id":2739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2738,"mutability":"mutable","name":"chr","nameLocation":"15731:3:13","nodeType":"VariableDeclaration","scope":2796,"src":"15724:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2737,"name":"bytes1","nodeType":"ElementaryTypeName","src":"15724:6:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"15723:12:13"},"returnParameters":{"id":2742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2741,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2796,"src":"15758:5:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2740,"name":"uint8","nodeType":"ElementaryTypeName","src":"15758:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"15757:7:13"},"scope":2809,"src":"15702:524:13","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2807,"nodeType":"Block","src":"16611:225:13","statements":[{"AST":{"nativeSrc":"16760:70:13","nodeType":"YulBlock","src":"16760:70:13","statements":[{"nativeSrc":"16774:46:13","nodeType":"YulAssignment","src":"16774:46:13","value":{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"16793:6:13","nodeType":"YulIdentifier","src":"16793:6:13"},{"arguments":[{"kind":"number","nativeSrc":"16805:4:13","nodeType":"YulLiteral","src":"16805:4:13","type":"","value":"0x20"},{"name":"offset","nativeSrc":"16811:6:13","nodeType":"YulIdentifier","src":"16811:6:13"}],"functionName":{"name":"add","nativeSrc":"16801:3:13","nodeType":"YulIdentifier","src":"16801:3:13"},"nativeSrc":"16801:17:13","nodeType":"YulFunctionCall","src":"16801:17:13"}],"functionName":{"name":"add","nativeSrc":"16789:3:13","nodeType":"YulIdentifier","src":"16789:3:13"},"nativeSrc":"16789:30:13","nodeType":"YulFunctionCall","src":"16789:30:13"}],"functionName":{"name":"mload","nativeSrc":"16783:5:13","nodeType":"YulIdentifier","src":"16783:5:13"},"nativeSrc":"16783:37:13","nodeType":"YulFunctionCall","src":"16783:37:13"},"variableNames":[{"name":"value","nativeSrc":"16774:5:13","nodeType":"YulIdentifier","src":"16774:5:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2799,"isOffset":false,"isSlot":false,"src":"16793:6:13","valueSize":1},{"declaration":2801,"isOffset":false,"isSlot":false,"src":"16811:6:13","valueSize":1},{"declaration":2804,"isOffset":false,"isSlot":false,"src":"16774:5:13","valueSize":1}],"flags":["memory-safe"],"id":2806,"nodeType":"InlineAssembly","src":"16735:95:13"}]},"documentation":{"id":2797,"nodeType":"StructuredDocumentation","src":"16232:268:13","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":2808,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"16514:22:13","nodeType":"FunctionDefinition","parameters":{"id":2802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2799,"mutability":"mutable","name":"buffer","nameLocation":"16550:6:13","nodeType":"VariableDeclaration","scope":2808,"src":"16537:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2798,"name":"bytes","nodeType":"ElementaryTypeName","src":"16537:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2801,"mutability":"mutable","name":"offset","nameLocation":"16566:6:13","nodeType":"VariableDeclaration","scope":2808,"src":"16558:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2800,"name":"uint256","nodeType":"ElementaryTypeName","src":"16558:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16536:37:13"},"returnParameters":{"id":2805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2804,"mutability":"mutable","name":"value","nameLocation":"16604:5:13","nodeType":"VariableDeclaration","scope":2808,"src":"16596:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2803,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16596:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16595:15:13"},"scope":2809,"src":"16505:331:13","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2810,"src":"297:16541:13","usedErrors":[1633,1636,1639],"usedEvents":[]}],"src":"101:16738:13"},"id":13},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[3157]},"id":3158,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2811,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:14"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":2812,"nodeType":"StructuredDocumentation","src":"138:205:14","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":3157,"linearizedBaseContracts":[3157],"name":"ECDSA","nameLocation":"352:5:14","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":2817,"members":[{"id":2813,"name":"NoError","nameLocation":"392:7:14","nodeType":"EnumValue","src":"392:7:14"},{"id":2814,"name":"InvalidSignature","nameLocation":"409:16:14","nodeType":"EnumValue","src":"409:16:14"},{"id":2815,"name":"InvalidSignatureLength","nameLocation":"435:22:14","nodeType":"EnumValue","src":"435:22:14"},{"id":2816,"name":"InvalidSignatureS","nameLocation":"467:17:14","nodeType":"EnumValue","src":"467:17:14"}],"name":"RecoverError","nameLocation":"369:12:14","nodeType":"EnumDefinition","src":"364:126:14"},{"documentation":{"id":2818,"nodeType":"StructuredDocumentation","src":"496:63:14","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":2820,"name":"ECDSAInvalidSignature","nameLocation":"570:21:14","nodeType":"ErrorDefinition","parameters":{"id":2819,"nodeType":"ParameterList","parameters":[],"src":"591:2:14"},"src":"564:30:14"},{"documentation":{"id":2821,"nodeType":"StructuredDocumentation","src":"600:60:14","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":2825,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:14","nodeType":"ErrorDefinition","parameters":{"id":2824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2823,"mutability":"mutable","name":"length","nameLocation":"707:6:14","nodeType":"VariableDeclaration","scope":2825,"src":"699:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2822,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:14"},"src":"665:50:14"},{"documentation":{"id":2826,"nodeType":"StructuredDocumentation","src":"721:85:14","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":2830,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:14","nodeType":"ErrorDefinition","parameters":{"id":2829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2828,"mutability":"mutable","name":"s","nameLocation":"848:1:14","nodeType":"VariableDeclaration","scope":2830,"src":"840:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2827,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:14"},"src":"811:40:14"},{"body":{"id":2882,"nodeType":"Block","src":"2285:622:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2845,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2835,"src":"2299:9:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2309:6:14","memberName":"length","nodeType":"MemberAccess","src":"2299:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":2847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2319:2:14","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2299:22:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2880,"nodeType":"Block","src":"2793:108:14","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2823:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2868,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2815:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2867,"name":"address","nodeType":"ElementaryTypeName","src":"2815:7:14","typeDescriptions":{}}},"id":2870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2815:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2871,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2817,"src":"2827:12:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2817_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2872,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2840:22:14","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":2815,"src":"2827:35:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2817","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":2875,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2835,"src":"2872:9:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2882:6:14","memberName":"length","nodeType":"MemberAccess","src":"2872:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2864:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2873,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2864:7:14","typeDescriptions":{}}},"id":2877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2864:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2878,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2814:76:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2817_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2844,"id":2879,"nodeType":"Return","src":"2807:83:14"}]},"id":2881,"nodeType":"IfStatement","src":"2295:606:14","trueBody":{"id":2866,"nodeType":"Block","src":"2323:464:14","statements":[{"assignments":[2850],"declarations":[{"constant":false,"id":2850,"mutability":"mutable","name":"r","nameLocation":"2345:1:14","nodeType":"VariableDeclaration","scope":2866,"src":"2337:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2849,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2337:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2851,"nodeType":"VariableDeclarationStatement","src":"2337:9:14"},{"assignments":[2853],"declarations":[{"constant":false,"id":2853,"mutability":"mutable","name":"s","nameLocation":"2368:1:14","nodeType":"VariableDeclaration","scope":2866,"src":"2360:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2852,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2360:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2854,"nodeType":"VariableDeclarationStatement","src":"2360:9:14"},{"assignments":[2856],"declarations":[{"constant":false,"id":2856,"mutability":"mutable","name":"v","nameLocation":"2389:1:14","nodeType":"VariableDeclaration","scope":2866,"src":"2383:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2855,"name":"uint8","nodeType":"ElementaryTypeName","src":"2383:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2857,"nodeType":"VariableDeclarationStatement","src":"2383:7:14"},{"AST":{"nativeSrc":"2560:171:14","nodeType":"YulBlock","src":"2560:171:14","statements":[{"nativeSrc":"2578:32:14","nodeType":"YulAssignment","src":"2578:32:14","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2593:9:14","nodeType":"YulIdentifier","src":"2593:9:14"},{"kind":"number","nativeSrc":"2604:4:14","nodeType":"YulLiteral","src":"2604:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2589:3:14","nodeType":"YulIdentifier","src":"2589:3:14"},"nativeSrc":"2589:20:14","nodeType":"YulFunctionCall","src":"2589:20:14"}],"functionName":{"name":"mload","nativeSrc":"2583:5:14","nodeType":"YulIdentifier","src":"2583:5:14"},"nativeSrc":"2583:27:14","nodeType":"YulFunctionCall","src":"2583:27:14"},"variableNames":[{"name":"r","nativeSrc":"2578:1:14","nodeType":"YulIdentifier","src":"2578:1:14"}]},{"nativeSrc":"2627:32:14","nodeType":"YulAssignment","src":"2627:32:14","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2642:9:14","nodeType":"YulIdentifier","src":"2642:9:14"},{"kind":"number","nativeSrc":"2653:4:14","nodeType":"YulLiteral","src":"2653:4:14","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"2638:3:14","nodeType":"YulIdentifier","src":"2638:3:14"},"nativeSrc":"2638:20:14","nodeType":"YulFunctionCall","src":"2638:20:14"}],"functionName":{"name":"mload","nativeSrc":"2632:5:14","nodeType":"YulIdentifier","src":"2632:5:14"},"nativeSrc":"2632:27:14","nodeType":"YulFunctionCall","src":"2632:27:14"},"variableNames":[{"name":"s","nativeSrc":"2627:1:14","nodeType":"YulIdentifier","src":"2627:1:14"}]},{"nativeSrc":"2676:41:14","nodeType":"YulAssignment","src":"2676:41:14","value":{"arguments":[{"kind":"number","nativeSrc":"2686:1:14","nodeType":"YulLiteral","src":"2686:1:14","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2699:9:14","nodeType":"YulIdentifier","src":"2699:9:14"},{"kind":"number","nativeSrc":"2710:4:14","nodeType":"YulLiteral","src":"2710:4:14","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"2695:3:14","nodeType":"YulIdentifier","src":"2695:3:14"},"nativeSrc":"2695:20:14","nodeType":"YulFunctionCall","src":"2695:20:14"}],"functionName":{"name":"mload","nativeSrc":"2689:5:14","nodeType":"YulIdentifier","src":"2689:5:14"},"nativeSrc":"2689:27:14","nodeType":"YulFunctionCall","src":"2689:27:14"}],"functionName":{"name":"byte","nativeSrc":"2681:4:14","nodeType":"YulIdentifier","src":"2681:4:14"},"nativeSrc":"2681:36:14","nodeType":"YulFunctionCall","src":"2681:36:14"},"variableNames":[{"name":"v","nativeSrc":"2676:1:14","nodeType":"YulIdentifier","src":"2676:1:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2850,"isOffset":false,"isSlot":false,"src":"2578:1:14","valueSize":1},{"declaration":2853,"isOffset":false,"isSlot":false,"src":"2627:1:14","valueSize":1},{"declaration":2835,"isOffset":false,"isSlot":false,"src":"2593:9:14","valueSize":1},{"declaration":2835,"isOffset":false,"isSlot":false,"src":"2642:9:14","valueSize":1},{"declaration":2835,"isOffset":false,"isSlot":false,"src":"2699:9:14","valueSize":1},{"declaration":2856,"isOffset":false,"isSlot":false,"src":"2676:1:14","valueSize":1}],"flags":["memory-safe"],"id":2858,"nodeType":"InlineAssembly","src":"2535:196:14"},{"expression":{"arguments":[{"id":2860,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"2762:4:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2861,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2856,"src":"2768:1:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2862,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"2771:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2863,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2853,"src":"2774:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2859,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2883,2963,3071],"referencedDeclaration":3071,"src":"2751:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2817_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2817_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2844,"id":2865,"nodeType":"Return","src":"2744:32:14"}]}}]},"documentation":{"id":2831,"nodeType":"StructuredDocumentation","src":"857:1267:14","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":2883,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:14","nodeType":"FunctionDefinition","parameters":{"id":2836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2833,"mutability":"mutable","name":"hash","nameLocation":"2166:4:14","nodeType":"VariableDeclaration","scope":2883,"src":"2158:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2832,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2158:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2835,"mutability":"mutable","name":"signature","nameLocation":"2193:9:14","nodeType":"VariableDeclaration","scope":2883,"src":"2180:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2834,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:60:14"},"returnParameters":{"id":2844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2838,"mutability":"mutable","name":"recovered","nameLocation":"2240:9:14","nodeType":"VariableDeclaration","scope":2883,"src":"2232:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2837,"name":"address","nodeType":"ElementaryTypeName","src":"2232:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2841,"mutability":"mutable","name":"err","nameLocation":"2264:3:14","nodeType":"VariableDeclaration","scope":2883,"src":"2251:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2817","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2840,"nodeType":"UserDefinedTypeName","pathNode":{"id":2839,"name":"RecoverError","nameLocations":["2251:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":2817,"src":"2251:12:14"},"referencedDeclaration":2817,"src":"2251:12:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2817","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2843,"mutability":"mutable","name":"errArg","nameLocation":"2277:6:14","nodeType":"VariableDeclaration","scope":2883,"src":"2269:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2842,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2269:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2231:53:14"},"scope":3157,"src":"2129:778:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2912,"nodeType":"Block","src":"3801:168:14","statements":[{"assignments":[2894,2897,2899],"declarations":[{"constant":false,"id":2894,"mutability":"mutable","name":"recovered","nameLocation":"3820:9:14","nodeType":"VariableDeclaration","scope":2912,"src":"3812:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2893,"name":"address","nodeType":"ElementaryTypeName","src":"3812:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2897,"mutability":"mutable","name":"error","nameLocation":"3844:5:14","nodeType":"VariableDeclaration","scope":2912,"src":"3831:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2817","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2896,"nodeType":"UserDefinedTypeName","pathNode":{"id":2895,"name":"RecoverError","nameLocations":["3831:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":2817,"src":"3831:12:14"},"referencedDeclaration":2817,"src":"3831:12:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2817","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2899,"mutability":"mutable","name":"errorArg","nameLocation":"3859:8:14","nodeType":"VariableDeclaration","scope":2912,"src":"3851:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2898,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3851:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2904,"initialValue":{"arguments":[{"id":2901,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2886,"src":"3882:4:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2902,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2888,"src":"3888:9:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2900,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2883,2963,3071],"referencedDeclaration":2883,"src":"3871:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$2817_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3871:27:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2817_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3811:87:14"},{"expression":{"arguments":[{"id":2906,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"3920:5:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2817","typeString":"enum ECDSA.RecoverError"}},{"id":2907,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2899,"src":"3927:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2817","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2905,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3156,"src":"3908:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2817_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":2908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3908:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2909,"nodeType":"ExpressionStatement","src":"3908:28:14"},{"expression":{"id":2910,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"3953:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2892,"id":2911,"nodeType":"Return","src":"3946:16:14"}]},"documentation":{"id":2884,"nodeType":"StructuredDocumentation","src":"2913:796:14","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":2913,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3723:7:14","nodeType":"FunctionDefinition","parameters":{"id":2889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2886,"mutability":"mutable","name":"hash","nameLocation":"3739:4:14","nodeType":"VariableDeclaration","scope":2913,"src":"3731:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2885,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3731:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2888,"mutability":"mutable","name":"signature","nameLocation":"3758:9:14","nodeType":"VariableDeclaration","scope":2913,"src":"3745:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2887,"name":"bytes","nodeType":"ElementaryTypeName","src":"3745:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3730:38:14"},"returnParameters":{"id":2892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2891,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2913,"src":"3792:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2890,"name":"address","nodeType":"ElementaryTypeName","src":"3792:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3791:9:14"},"scope":3157,"src":"3714:255:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2962,"nodeType":"Block","src":"4348:342:14","statements":[{"id":2961,"nodeType":"UncheckedBlock","src":"4358:326:14","statements":[{"assignments":[2931],"declarations":[{"constant":false,"id":2931,"mutability":"mutable","name":"s","nameLocation":"4390:1:14","nodeType":"VariableDeclaration","scope":2961,"src":"4382:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2930,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4382:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2938,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2932,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2920,"src":"4394:2:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":2935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4407:66:14","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":2934,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4399:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2933,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4399:7:14","typeDescriptions":{}}},"id":2936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4399:75:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4394:80:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4382:92:14"},{"assignments":[2940],"declarations":[{"constant":false,"id":2940,"mutability":"mutable","name":"v","nameLocation":"4591:1:14","nodeType":"VariableDeclaration","scope":2961,"src":"4585:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2939,"name":"uint8","nodeType":"ElementaryTypeName","src":"4585:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2953,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2945,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2920,"src":"4610:2:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2944,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4602:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2943,"name":"uint256","nodeType":"ElementaryTypeName","src":"4602:7:14","typeDescriptions":{}}},"id":2946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4602:11:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":2947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4617:3:14","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4602:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2949,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4601:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":2950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4624:2:14","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4601:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4595:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2941,"name":"uint8","nodeType":"ElementaryTypeName","src":"4595:5:14","typeDescriptions":{}}},"id":2952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4595:32:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4585:42:14"},{"expression":{"arguments":[{"id":2955,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2916,"src":"4659:4:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2956,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2940,"src":"4665:1:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2957,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2918,"src":"4668:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2958,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2931,"src":"4671:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2954,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2883,2963,3071],"referencedDeclaration":3071,"src":"4648:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2817_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4648:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2817_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2929,"id":2960,"nodeType":"Return","src":"4641:32:14"}]}]},"documentation":{"id":2914,"nodeType":"StructuredDocumentation","src":"3975:205:14","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]"},"id":2963,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4194:10:14","nodeType":"FunctionDefinition","parameters":{"id":2921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2916,"mutability":"mutable","name":"hash","nameLocation":"4222:4:14","nodeType":"VariableDeclaration","scope":2963,"src":"4214:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2915,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4214:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2918,"mutability":"mutable","name":"r","nameLocation":"4244:1:14","nodeType":"VariableDeclaration","scope":2963,"src":"4236:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2917,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4236:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2920,"mutability":"mutable","name":"vs","nameLocation":"4263:2:14","nodeType":"VariableDeclaration","scope":2963,"src":"4255:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2919,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4204:67:14"},"returnParameters":{"id":2929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2923,"mutability":"mutable","name":"recovered","nameLocation":"4303:9:14","nodeType":"VariableDeclaration","scope":2963,"src":"4295:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2922,"name":"address","nodeType":"ElementaryTypeName","src":"4295:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2926,"mutability":"mutable","name":"err","nameLocation":"4327:3:14","nodeType":"VariableDeclaration","scope":2963,"src":"4314:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2817","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2925,"nodeType":"UserDefinedTypeName","pathNode":{"id":2924,"name":"RecoverError","nameLocations":["4314:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":2817,"src":"4314:12:14"},"referencedDeclaration":2817,"src":"4314:12:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2817","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2928,"mutability":"mutable","name":"errArg","nameLocation":"4340:6:14","nodeType":"VariableDeclaration","scope":2963,"src":"4332:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2927,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4332:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4294:53:14"},"scope":3157,"src":"4185:505:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2995,"nodeType":"Block","src":"4903:164:14","statements":[{"assignments":[2976,2979,2981],"declarations":[{"constant":false,"id":2976,"mutability":"mutable","name":"recovered","nameLocation":"4922:9:14","nodeType":"VariableDeclaration","scope":2995,"src":"4914:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2975,"name":"address","nodeType":"ElementaryTypeName","src":"4914:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2979,"mutability":"mutable","name":"error","nameLocation":"4946:5:14","nodeType":"VariableDeclaration","scope":2995,"src":"4933:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2817","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2978,"nodeType":"UserDefinedTypeName","pathNode":{"id":2977,"name":"RecoverError","nameLocations":["4933:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":2817,"src":"4933:12:14"},"referencedDeclaration":2817,"src":"4933:12:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2817","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2981,"mutability":"mutable","name":"errorArg","nameLocation":"4961:8:14","nodeType":"VariableDeclaration","scope":2995,"src":"4953:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2980,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4953:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2987,"initialValue":{"arguments":[{"id":2983,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"4984:4:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2984,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2968,"src":"4990:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2985,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2970,"src":"4993:2:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2982,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2883,2963,3071],"referencedDeclaration":2963,"src":"4973:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2817_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4973:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2817_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4913:83:14"},{"expression":{"arguments":[{"id":2989,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2979,"src":"5018:5:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2817","typeString":"enum ECDSA.RecoverError"}},{"id":2990,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2981,"src":"5025:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2817","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2988,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3156,"src":"5006:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2817_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":2991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5006:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2992,"nodeType":"ExpressionStatement","src":"5006:28:14"},{"expression":{"id":2993,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2976,"src":"5051:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2974,"id":2994,"nodeType":"Return","src":"5044:16:14"}]},"documentation":{"id":2964,"nodeType":"StructuredDocumentation","src":"4696:116:14","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":2996,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4826:7:14","nodeType":"FunctionDefinition","parameters":{"id":2971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2966,"mutability":"mutable","name":"hash","nameLocation":"4842:4:14","nodeType":"VariableDeclaration","scope":2996,"src":"4834:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2965,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4834:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2968,"mutability":"mutable","name":"r","nameLocation":"4856:1:14","nodeType":"VariableDeclaration","scope":2996,"src":"4848:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2967,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4848:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2970,"mutability":"mutable","name":"vs","nameLocation":"4867:2:14","nodeType":"VariableDeclaration","scope":2996,"src":"4859:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2969,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4859:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4833:37:14"},"returnParameters":{"id":2974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2973,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2996,"src":"4894:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2972,"name":"address","nodeType":"ElementaryTypeName","src":"4894:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4893:9:14"},"scope":3157,"src":"4817:250:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3070,"nodeType":"Block","src":"5382:1372:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3017,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3005,"src":"6278:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6270:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3015,"name":"uint256","nodeType":"ElementaryTypeName","src":"6270:7:14","typeDescriptions":{}}},"id":3018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6270:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":3019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6283:66:14","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6270:79:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3031,"nodeType":"IfStatement","src":"6266:164:14","trueBody":{"id":3030,"nodeType":"Block","src":"6351:79:14","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6381:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3022,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6373:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3021,"name":"address","nodeType":"ElementaryTypeName","src":"6373:7:14","typeDescriptions":{}}},"id":3024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6373:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3025,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2817,"src":"6385:12:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2817_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3026,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6398:17:14","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":2816,"src":"6385:30:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2817","typeString":"enum ECDSA.RecoverError"}},{"id":3027,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3005,"src":"6417:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3028,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6372:47:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2817_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3014,"id":3029,"nodeType":"Return","src":"6365:54:14"}]}},{"assignments":[3033],"declarations":[{"constant":false,"id":3033,"mutability":"mutable","name":"signer","nameLocation":"6532:6:14","nodeType":"VariableDeclaration","scope":3070,"src":"6524:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3032,"name":"address","nodeType":"ElementaryTypeName","src":"6524:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3040,"initialValue":{"arguments":[{"id":3035,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2999,"src":"6551:4:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3036,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"6557:1:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3037,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3003,"src":"6560:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3038,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3005,"src":"6563:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3034,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6541:9:14","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":3039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6541:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6524:41:14"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3041,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3033,"src":"6579:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6597:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3043,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6589:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3042,"name":"address","nodeType":"ElementaryTypeName","src":"6589:7:14","typeDescriptions":{}}},"id":3045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6589:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6579:20:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3060,"nodeType":"IfStatement","src":"6575:113:14","trueBody":{"id":3059,"nodeType":"Block","src":"6601:87:14","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6631:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3048,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6623:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3047,"name":"address","nodeType":"ElementaryTypeName","src":"6623:7:14","typeDescriptions":{}}},"id":3050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6623:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3051,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2817,"src":"6635:12:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2817_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3052,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6648:16:14","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":2814,"src":"6635:29:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2817","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":3055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6674:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3054,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6666:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3053,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6666:7:14","typeDescriptions":{}}},"id":3056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6666:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3057,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6622:55:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2817_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3014,"id":3058,"nodeType":"Return","src":"6615:62:14"}]}},{"expression":{"components":[{"id":3061,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3033,"src":"6706:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3062,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2817,"src":"6714:12:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2817_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3063,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6727:7:14","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":2813,"src":"6714:20:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2817","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":3066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6744:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3065,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6736:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3064,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6736:7:14","typeDescriptions":{}}},"id":3067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6736:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3068,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6705:42:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2817_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3014,"id":3069,"nodeType":"Return","src":"6698:49:14"}]},"documentation":{"id":2997,"nodeType":"StructuredDocumentation","src":"5073:125:14","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":3071,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5212:10:14","nodeType":"FunctionDefinition","parameters":{"id":3006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2999,"mutability":"mutable","name":"hash","nameLocation":"5240:4:14","nodeType":"VariableDeclaration","scope":3071,"src":"5232:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2998,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5232:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3001,"mutability":"mutable","name":"v","nameLocation":"5260:1:14","nodeType":"VariableDeclaration","scope":3071,"src":"5254:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3000,"name":"uint8","nodeType":"ElementaryTypeName","src":"5254:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3003,"mutability":"mutable","name":"r","nameLocation":"5279:1:14","nodeType":"VariableDeclaration","scope":3071,"src":"5271:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3002,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5271:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3005,"mutability":"mutable","name":"s","nameLocation":"5298:1:14","nodeType":"VariableDeclaration","scope":3071,"src":"5290:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3004,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5290:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5222:83:14"},"returnParameters":{"id":3014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3008,"mutability":"mutable","name":"recovered","nameLocation":"5337:9:14","nodeType":"VariableDeclaration","scope":3071,"src":"5329:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3007,"name":"address","nodeType":"ElementaryTypeName","src":"5329:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3011,"mutability":"mutable","name":"err","nameLocation":"5361:3:14","nodeType":"VariableDeclaration","scope":3071,"src":"5348:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2817","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3010,"nodeType":"UserDefinedTypeName","pathNode":{"id":3009,"name":"RecoverError","nameLocations":["5348:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":2817,"src":"5348:12:14"},"referencedDeclaration":2817,"src":"5348:12:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2817","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3013,"mutability":"mutable","name":"errArg","nameLocation":"5374:6:14","nodeType":"VariableDeclaration","scope":3071,"src":"5366:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3012,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5366:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5328:53:14"},"scope":3157,"src":"5203:1551:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3106,"nodeType":"Block","src":"6981:166:14","statements":[{"assignments":[3086,3089,3091],"declarations":[{"constant":false,"id":3086,"mutability":"mutable","name":"recovered","nameLocation":"7000:9:14","nodeType":"VariableDeclaration","scope":3106,"src":"6992:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3085,"name":"address","nodeType":"ElementaryTypeName","src":"6992:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3089,"mutability":"mutable","name":"error","nameLocation":"7024:5:14","nodeType":"VariableDeclaration","scope":3106,"src":"7011:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2817","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3088,"nodeType":"UserDefinedTypeName","pathNode":{"id":3087,"name":"RecoverError","nameLocations":["7011:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":2817,"src":"7011:12:14"},"referencedDeclaration":2817,"src":"7011:12:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2817","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3091,"mutability":"mutable","name":"errorArg","nameLocation":"7039:8:14","nodeType":"VariableDeclaration","scope":3106,"src":"7031:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3090,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7031:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3098,"initialValue":{"arguments":[{"id":3093,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3074,"src":"7062:4:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3094,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3076,"src":"7068:1:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3095,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3078,"src":"7071:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3096,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3080,"src":"7074:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3092,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2883,2963,3071],"referencedDeclaration":3071,"src":"7051:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2817_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7051:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2817_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6991:85:14"},{"expression":{"arguments":[{"id":3100,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3089,"src":"7098:5:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2817","typeString":"enum ECDSA.RecoverError"}},{"id":3101,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3091,"src":"7105:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2817","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3099,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3156,"src":"7086:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2817_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7086:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3103,"nodeType":"ExpressionStatement","src":"7086:28:14"},{"expression":{"id":3104,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3086,"src":"7131:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3084,"id":3105,"nodeType":"Return","src":"7124:16:14"}]},"documentation":{"id":3072,"nodeType":"StructuredDocumentation","src":"6760:122:14","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":3107,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6896:7:14","nodeType":"FunctionDefinition","parameters":{"id":3081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3074,"mutability":"mutable","name":"hash","nameLocation":"6912:4:14","nodeType":"VariableDeclaration","scope":3107,"src":"6904:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3073,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6904:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3076,"mutability":"mutable","name":"v","nameLocation":"6924:1:14","nodeType":"VariableDeclaration","scope":3107,"src":"6918:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3075,"name":"uint8","nodeType":"ElementaryTypeName","src":"6918:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3078,"mutability":"mutable","name":"r","nameLocation":"6935:1:14","nodeType":"VariableDeclaration","scope":3107,"src":"6927:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3077,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6927:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3080,"mutability":"mutable","name":"s","nameLocation":"6946:1:14","nodeType":"VariableDeclaration","scope":3107,"src":"6938:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3079,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6938:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6903:45:14"},"returnParameters":{"id":3084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3083,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3107,"src":"6972:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3082,"name":"address","nodeType":"ElementaryTypeName","src":"6972:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6971:9:14"},"scope":3157,"src":"6887:260:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3155,"nodeType":"Block","src":"7352:460:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2817","typeString":"enum ECDSA.RecoverError"},"id":3119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3116,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"7366:5:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2817","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3117,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2817,"src":"7375:12:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2817_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3118,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7388:7:14","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":2813,"src":"7375:20:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2817","typeString":"enum ECDSA.RecoverError"}},"src":"7366:29:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2817","typeString":"enum ECDSA.RecoverError"},"id":3125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3122,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"7462:5:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2817","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3123,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2817,"src":"7471:12:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2817_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7484:16:14","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":2814,"src":"7471:29:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2817","typeString":"enum ECDSA.RecoverError"}},"src":"7462:38:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2817","typeString":"enum ECDSA.RecoverError"},"id":3133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3130,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"7567:5:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2817","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3131,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2817,"src":"7576:12:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2817_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3132,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7589:22:14","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":2815,"src":"7576:35:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2817","typeString":"enum ECDSA.RecoverError"}},"src":"7567:44:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2817","typeString":"enum ECDSA.RecoverError"},"id":3145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3142,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"7701:5:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2817","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3143,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2817,"src":"7710:12:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2817_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7723:17:14","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":2816,"src":"7710:30:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2817","typeString":"enum ECDSA.RecoverError"}},"src":"7701:39:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3151,"nodeType":"IfStatement","src":"7697:109:14","trueBody":{"id":3150,"nodeType":"Block","src":"7742:64:14","statements":[{"errorCall":{"arguments":[{"id":3147,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3113,"src":"7786:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3146,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2830,"src":"7763:22:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$_t_error_$","typeString":"function (bytes32) pure returns (error)"}},"id":3148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7763:32:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3149,"nodeType":"RevertStatement","src":"7756:39:14"}]}},"id":3152,"nodeType":"IfStatement","src":"7563:243:14","trueBody":{"id":3141,"nodeType":"Block","src":"7613:78:14","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":3137,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3113,"src":"7670:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7662:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3135,"name":"uint256","nodeType":"ElementaryTypeName","src":"7662:7:14","typeDescriptions":{}}},"id":3138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7662:17:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3134,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2825,"src":"7634:27:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":3139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7634:46:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3140,"nodeType":"RevertStatement","src":"7627:53:14"}]}},"id":3153,"nodeType":"IfStatement","src":"7458:348:14","trueBody":{"id":3129,"nodeType":"Block","src":"7502:55:14","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3126,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2820,"src":"7523:21:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":3127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7523:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3128,"nodeType":"RevertStatement","src":"7516:30:14"}]}},"id":3154,"nodeType":"IfStatement","src":"7362:444:14","trueBody":{"id":3121,"nodeType":"Block","src":"7397:55:14","statements":[{"functionReturnParameters":3115,"id":3120,"nodeType":"Return","src":"7411:7:14"}]}}]},"documentation":{"id":3108,"nodeType":"StructuredDocumentation","src":"7153:122:14","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":3156,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7289:11:14","nodeType":"FunctionDefinition","parameters":{"id":3114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3111,"mutability":"mutable","name":"error","nameLocation":"7314:5:14","nodeType":"VariableDeclaration","scope":3156,"src":"7301:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2817","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3110,"nodeType":"UserDefinedTypeName","pathNode":{"id":3109,"name":"RecoverError","nameLocations":["7301:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":2817,"src":"7301:12:14"},"referencedDeclaration":2817,"src":"7301:12:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2817","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3113,"mutability":"mutable","name":"errorArg","nameLocation":"7329:8:14","nodeType":"VariableDeclaration","scope":3156,"src":"7321:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3112,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7321:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7300:38:14"},"returnParameters":{"id":3115,"nodeType":"ParameterList","parameters":[],"src":"7352:0:14"},"scope":3157,"src":"7280:532:14","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3158,"src":"344:7470:14","usedErrors":[2820,2825,2830],"usedEvents":[]}],"src":"112:7703:14"},"id":14},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","exportedSymbols":{"EIP712":[3384],"IERC5267":[172],"MessageHashUtils":[3458],"ShortString":[1274],"ShortStrings":[1485]},"id":3385,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3159,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:15"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","file":"./MessageHashUtils.sol","id":3161,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3385,"sourceUnit":3459,"src":"139:56:15","symbolAliases":[{"foreign":{"id":3160,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3458,"src":"147:16:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","file":"../ShortStrings.sol","id":3164,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3385,"sourceUnit":1486,"src":"196:62:15","symbolAliases":[{"foreign":{"id":3162,"name":"ShortStrings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1485,"src":"204:12:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":3163,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"218:11:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","file":"../../interfaces/IERC5267.sol","id":3166,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3385,"sourceUnit":173,"src":"259:55:15","symbolAliases":[{"foreign":{"id":3165,"name":"IERC5267","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"267:8:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3168,"name":"IERC5267","nameLocations":["1988:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":172,"src":"1988:8:15"},"id":3169,"nodeType":"InheritanceSpecifier","src":"1988:8:15"}],"canonicalName":"EIP712","contractDependencies":[],"contractKind":"contract","documentation":{"id":3167,"nodeType":"StructuredDocumentation","src":"316:1643:15","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n @custom:oz-upgrades-unsafe-allow state-variable-immutable"},"fullyImplemented":true,"id":3384,"linearizedBaseContracts":[3384,172],"name":"EIP712","nameLocation":"1978:6:15","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3171,"libraryName":{"id":3170,"name":"ShortStrings","nameLocations":["2009:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":1485,"src":"2009:12:15"},"nodeType":"UsingForDirective","src":"2003:25:15"},{"constant":true,"id":3176,"mutability":"constant","name":"TYPE_HASH","nameLocation":"2059:9:15","nodeType":"VariableDeclaration","scope":3384,"src":"2034:140:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3172,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2034:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":3174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2089:84:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":3173,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2079:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2079:95:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3178,"mutability":"immutable","name":"_cachedDomainSeparator","nameLocation":"2399:22:15","nodeType":"VariableDeclaration","scope":3384,"src":"2373:48:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3177,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2373:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3180,"mutability":"immutable","name":"_cachedChainId","nameLocation":"2453:14:15","nodeType":"VariableDeclaration","scope":3384,"src":"2427:40:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3179,"name":"uint256","nodeType":"ElementaryTypeName","src":"2427:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":3182,"mutability":"immutable","name":"_cachedThis","nameLocation":"2499:11:15","nodeType":"VariableDeclaration","scope":3384,"src":"2473:37:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3181,"name":"address","nodeType":"ElementaryTypeName","src":"2473:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":3184,"mutability":"immutable","name":"_hashedName","nameLocation":"2543:11:15","nodeType":"VariableDeclaration","scope":3384,"src":"2517:37:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3183,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2517:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3186,"mutability":"immutable","name":"_hashedVersion","nameLocation":"2586:14:15","nodeType":"VariableDeclaration","scope":3384,"src":"2560:40:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3185,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2560:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3189,"mutability":"immutable","name":"_name","nameLocation":"2637:5:15","nodeType":"VariableDeclaration","scope":3384,"src":"2607:35:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"},"typeName":{"id":3188,"nodeType":"UserDefinedTypeName","pathNode":{"id":3187,"name":"ShortString","nameLocations":["2607:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":1274,"src":"2607:11:15"},"referencedDeclaration":1274,"src":"2607:11:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":3192,"mutability":"immutable","name":"_version","nameLocation":"2678:8:15","nodeType":"VariableDeclaration","scope":3384,"src":"2648:38:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"},"typeName":{"id":3191,"nodeType":"UserDefinedTypeName","pathNode":{"id":3190,"name":"ShortString","nameLocations":["2648:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":1274,"src":"2648:11:15"},"referencedDeclaration":1274,"src":"2648:11:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":3194,"mutability":"mutable","name":"_nameFallback","nameLocation":"2707:13:15","nodeType":"VariableDeclaration","scope":3384,"src":"2692:28:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3193,"name":"string","nodeType":"ElementaryTypeName","src":"2692:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":3196,"mutability":"mutable","name":"_versionFallback","nameLocation":"2741:16:15","nodeType":"VariableDeclaration","scope":3384,"src":"2726:31:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3195,"name":"string","nodeType":"ElementaryTypeName","src":"2726:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":3253,"nodeType":"Block","src":"3383:376:15","statements":[{"expression":{"id":3209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3204,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3189,"src":"3393:5:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3207,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"3432:13:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3205,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"3401:4:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3406:25:15","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1426,"src":"3401:30:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$1274_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":3208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3401:45:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}},"src":"3393:53:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}},"id":3210,"nodeType":"ExpressionStatement","src":"3393:53:15"},{"expression":{"id":3216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3211,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"3456:8:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3214,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3196,"src":"3501:16:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3212,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3201,"src":"3467:7:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3475:25:15","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1426,"src":"3467:33:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$1274_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":3215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3467:51:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}},"src":"3456:62:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}},"id":3217,"nodeType":"ExpressionStatement","src":"3456:62:15"},{"expression":{"id":3225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3218,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3184,"src":"3528:11:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":3222,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"3558:4:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3221,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3552:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3220,"name":"bytes","nodeType":"ElementaryTypeName","src":"3552:5:15","typeDescriptions":{}}},"id":3223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3552:11:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3219,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3542:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3542:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3528:36:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3226,"nodeType":"ExpressionStatement","src":"3528:36:15"},{"expression":{"id":3234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3227,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"3574:14:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":3231,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3201,"src":"3607:7:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3230,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3601:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3229,"name":"bytes","nodeType":"ElementaryTypeName","src":"3601:5:15","typeDescriptions":{}}},"id":3232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3601:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3228,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3591:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3591:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3574:42:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3235,"nodeType":"ExpressionStatement","src":"3574:42:15"},{"expression":{"id":3239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3236,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3180,"src":"3627:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3237,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3644:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3650:7:15","memberName":"chainid","nodeType":"MemberAccess","src":"3644:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3627:30:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3240,"nodeType":"ExpressionStatement","src":"3627:30:15"},{"expression":{"id":3244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3241,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3178,"src":"3667:22:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":3242,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3301,"src":"3692:21:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3692:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3667:48:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3245,"nodeType":"ExpressionStatement","src":"3667:48:15"},{"expression":{"id":3251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3246,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"3725:11:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3249,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3747:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3384","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3384","typeString":"contract EIP712"}],"id":3248,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3739:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3247,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:15","typeDescriptions":{}}},"id":3250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3739:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3725:27:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3252,"nodeType":"ExpressionStatement","src":"3725:27:15"}]},"documentation":{"id":3197,"nodeType":"StructuredDocumentation","src":"2764:559:15","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":3254,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3199,"mutability":"mutable","name":"name","nameLocation":"3354:4:15","nodeType":"VariableDeclaration","scope":3254,"src":"3340:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3198,"name":"string","nodeType":"ElementaryTypeName","src":"3340:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3201,"mutability":"mutable","name":"version","nameLocation":"3374:7:15","nodeType":"VariableDeclaration","scope":3254,"src":"3360:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3200,"name":"string","nodeType":"ElementaryTypeName","src":"3360:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3339:43:15"},"returnParameters":{"id":3203,"nodeType":"ParameterList","parameters":[],"src":"3383:0:15"},"scope":3384,"src":"3328:431:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3279,"nodeType":"Block","src":"3907:200:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3262,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3929:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3384","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3384","typeString":"contract EIP712"}],"id":3261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3921:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3260,"name":"address","nodeType":"ElementaryTypeName","src":"3921:7:15","typeDescriptions":{}}},"id":3263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3921:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3264,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"3938:11:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3921:28:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3266,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3953:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3959:7:15","memberName":"chainid","nodeType":"MemberAccess","src":"3953:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3268,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3180,"src":"3970:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3953:31:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3921:63:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3277,"nodeType":"Block","src":"4046:55:15","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3274,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3301,"src":"4067:21:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4067:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3259,"id":3276,"nodeType":"Return","src":"4060:30:15"}]},"id":3278,"nodeType":"IfStatement","src":"3917:184:15","trueBody":{"id":3273,"nodeType":"Block","src":"3986:54:15","statements":[{"expression":{"id":3271,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3178,"src":"4007:22:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3259,"id":3272,"nodeType":"Return","src":"4000:29:15"}]}}]},"documentation":{"id":3255,"nodeType":"StructuredDocumentation","src":"3765:75:15","text":" @dev Returns the domain separator for the current chain."},"id":3280,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"3854:18:15","nodeType":"FunctionDefinition","parameters":{"id":3256,"nodeType":"ParameterList","parameters":[],"src":"3872:2:15"},"returnParameters":{"id":3259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3258,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3280,"src":"3898:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3257,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3898:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3897:9:15"},"scope":3384,"src":"3845:262:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3300,"nodeType":"Block","src":"4177:115:15","statements":[{"expression":{"arguments":[{"arguments":[{"id":3288,"name":"TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3176,"src":"4215:9:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3289,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3184,"src":"4226:11:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3290,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"4239:14:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3291,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4255:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4261:7:15","memberName":"chainid","nodeType":"MemberAccess","src":"4255:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3295,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4278:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3384","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3384","typeString":"contract EIP712"}],"id":3294,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4270:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3293,"name":"address","nodeType":"ElementaryTypeName","src":"4270:7:15","typeDescriptions":{}}},"id":3296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4270:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3286,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4204:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3287,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4208:6:15","memberName":"encode","nodeType":"MemberAccess","src":"4204:10:15","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4204:80:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3285,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4194:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4194:91:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3284,"id":3299,"nodeType":"Return","src":"4187:98:15"}]},"id":3301,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"4122:21:15","nodeType":"FunctionDefinition","parameters":{"id":3281,"nodeType":"ParameterList","parameters":[],"src":"4143:2:15"},"returnParameters":{"id":3284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3283,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3301,"src":"4168:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3282,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4168:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4167:9:15"},"scope":3384,"src":"4113:179:15","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3316,"nodeType":"Block","src":"5003:90:15","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3311,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3280,"src":"5053:18:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5053:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3313,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3304,"src":"5075:10:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3309,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3458,"src":"5020:16:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MessageHashUtils_$3458_$","typeString":"type(library MessageHashUtils)"}},"id":3310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5037:15:15","memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":3457,"src":"5020:32:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":3314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5020:66:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3308,"id":3315,"nodeType":"Return","src":"5013:73:15"}]},"documentation":{"id":3302,"nodeType":"StructuredDocumentation","src":"4298:614:15","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":3317,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"4926:16:15","nodeType":"FunctionDefinition","parameters":{"id":3305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3304,"mutability":"mutable","name":"structHash","nameLocation":"4951:10:15","nodeType":"VariableDeclaration","scope":3317,"src":"4943:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3303,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4943:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4942:20:15"},"returnParameters":{"id":3308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3307,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3317,"src":"4994:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3306,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4994:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4993:9:15"},"scope":3384,"src":"4917:176:15","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[171],"body":{"id":3358,"nodeType":"Block","src":"5472:229:15","statements":[{"expression":{"components":[{"hexValue":"0f","id":3336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"5503:7:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c","typeString":"literal_string hex\"0f\""},"value":"\u000f"},{"arguments":[],"expression":{"argumentTypes":[],"id":3337,"name":"_EIP712Name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3371,"src":"5533:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":3338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5533:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"id":3339,"name":"_EIP712Version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3383,"src":"5560:14:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":3340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5560:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":3341,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5590:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5596:7:15","memberName":"chainid","nodeType":"MemberAccess","src":"5590:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3345,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5625:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3384","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3384","typeString":"contract EIP712"}],"id":3344,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5617:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3343,"name":"address","nodeType":"ElementaryTypeName","src":"5617:7:15","typeDescriptions":{}}},"id":3346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5617:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":3349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5652:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3348,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5644:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3347,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5644:7:15","typeDescriptions":{}}},"id":3350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5644:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":3354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5682:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5668:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3351,"name":"uint256","nodeType":"ElementaryTypeName","src":"5672:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3352,"nodeType":"ArrayTypeName","src":"5672:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5668:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":3356,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5489:205:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"}},"functionReturnParameters":3335,"id":3357,"nodeType":"Return","src":"5482:212:15"}]},"documentation":{"id":3318,"nodeType":"StructuredDocumentation","src":"5099:40:15","text":" @dev See {IERC-5267}."},"functionSelector":"84b0196e","id":3359,"implemented":true,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"5153:12:15","nodeType":"FunctionDefinition","parameters":{"id":3319,"nodeType":"ParameterList","parameters":[],"src":"5165:2:15"},"returnParameters":{"id":3335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3321,"mutability":"mutable","name":"fields","nameLocation":"5249:6:15","nodeType":"VariableDeclaration","scope":3359,"src":"5242:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3320,"name":"bytes1","nodeType":"ElementaryTypeName","src":"5242:6:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":3323,"mutability":"mutable","name":"name","nameLocation":"5283:4:15","nodeType":"VariableDeclaration","scope":3359,"src":"5269:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3322,"name":"string","nodeType":"ElementaryTypeName","src":"5269:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3325,"mutability":"mutable","name":"version","nameLocation":"5315:7:15","nodeType":"VariableDeclaration","scope":3359,"src":"5301:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3324,"name":"string","nodeType":"ElementaryTypeName","src":"5301:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3327,"mutability":"mutable","name":"chainId","nameLocation":"5344:7:15","nodeType":"VariableDeclaration","scope":3359,"src":"5336:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3326,"name":"uint256","nodeType":"ElementaryTypeName","src":"5336:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3329,"mutability":"mutable","name":"verifyingContract","nameLocation":"5373:17:15","nodeType":"VariableDeclaration","scope":3359,"src":"5365:25:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3328,"name":"address","nodeType":"ElementaryTypeName","src":"5365:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3331,"mutability":"mutable","name":"salt","nameLocation":"5412:4:15","nodeType":"VariableDeclaration","scope":3359,"src":"5404:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3330,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5404:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3334,"mutability":"mutable","name":"extensions","nameLocation":"5447:10:15","nodeType":"VariableDeclaration","scope":3359,"src":"5430:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3332,"name":"uint256","nodeType":"ElementaryTypeName","src":"5430:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3333,"nodeType":"ArrayTypeName","src":"5430:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5228:239:15"},"scope":3384,"src":"5144:557:15","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":3370,"nodeType":"Block","src":"6082:65:15","statements":[{"expression":{"arguments":[{"id":3367,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"6126:13:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3365,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3189,"src":"6099:5:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}},"id":3366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6105:20:15","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1453,"src":"6099:26:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1274_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$1274_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":3368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6099:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3364,"id":3369,"nodeType":"Return","src":"6092:48:15"}]},"documentation":{"id":3360,"nodeType":"StructuredDocumentation","src":"5707:256:15","text":" @dev The name parameter for the EIP712 domain.\n NOTE: By default this function reads _name which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":3371,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Name","nameLocation":"6030:11:15","nodeType":"FunctionDefinition","parameters":{"id":3361,"nodeType":"ParameterList","parameters":[],"src":"6041:2:15"},"returnParameters":{"id":3364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3363,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3371,"src":"6067:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3362,"name":"string","nodeType":"ElementaryTypeName","src":"6067:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6066:15:15"},"scope":3384,"src":"6021:126:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3382,"nodeType":"Block","src":"6537:71:15","statements":[{"expression":{"arguments":[{"id":3379,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3196,"src":"6584:16:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3377,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"6554:8:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1274","typeString":"ShortString"}},"id":3378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6563:20:15","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1453,"src":"6554:29:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1274_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$1274_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":3380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6554:47:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3376,"id":3381,"nodeType":"Return","src":"6547:54:15"}]},"documentation":{"id":3372,"nodeType":"StructuredDocumentation","src":"6153:262:15","text":" @dev The version parameter for the EIP712 domain.\n NOTE: By default this function reads _version which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":3383,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Version","nameLocation":"6482:14:15","nodeType":"FunctionDefinition","parameters":{"id":3373,"nodeType":"ParameterList","parameters":[],"src":"6496:2:15"},"returnParameters":{"id":3376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3375,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3383,"src":"6522:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3374,"name":"string","nodeType":"ElementaryTypeName","src":"6522:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6521:15:15"},"scope":3384,"src":"6473:135:15","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":3385,"src":"1960:4650:15","usedErrors":[1282,1284],"usedEvents":[152]}],"src":"113:6498:15"},"id":15},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","exportedSymbols":{"MessageHashUtils":[3458],"Strings":[2809]},"id":3459,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3386,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:16"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":3388,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3459,"sourceUnit":2810,"src":"149:39:16","symbolAliases":[{"foreign":{"id":3387,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2809,"src":"157:7:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":3389,"nodeType":"StructuredDocumentation","src":"190:330:16","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"id":3458,"linearizedBaseContracts":[3458],"name":"MessageHashUtils","nameLocation":"529:16:16","nodeType":"ContractDefinition","nodes":[{"body":{"id":3398,"nodeType":"Block","src":"1314:341:16","statements":[{"AST":{"nativeSrc":"1349:300:16","nodeType":"YulBlock","src":"1349:300:16","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1370:4:16","nodeType":"YulLiteral","src":"1370:4:16","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nativeSrc":"1376:34:16","nodeType":"YulLiteral","src":"1376:34:16","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nativeSrc":"1363:6:16","nodeType":"YulIdentifier","src":"1363:6:16"},"nativeSrc":"1363:48:16","nodeType":"YulFunctionCall","src":"1363:48:16"},"nativeSrc":"1363:48:16","nodeType":"YulExpressionStatement","src":"1363:48:16"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1472:4:16","nodeType":"YulLiteral","src":"1472:4:16","type":"","value":"0x1c"},{"name":"messageHash","nativeSrc":"1478:11:16","nodeType":"YulIdentifier","src":"1478:11:16"}],"functionName":{"name":"mstore","nativeSrc":"1465:6:16","nodeType":"YulIdentifier","src":"1465:6:16"},"nativeSrc":"1465:25:16","nodeType":"YulFunctionCall","src":"1465:25:16"},"nativeSrc":"1465:25:16","nodeType":"YulExpressionStatement","src":"1465:25:16"},{"nativeSrc":"1544:31:16","nodeType":"YulAssignment","src":"1544:31:16","value":{"arguments":[{"kind":"number","nativeSrc":"1564:4:16","nodeType":"YulLiteral","src":"1564:4:16","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1570:4:16","nodeType":"YulLiteral","src":"1570:4:16","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nativeSrc":"1554:9:16","nodeType":"YulIdentifier","src":"1554:9:16"},"nativeSrc":"1554:21:16","nodeType":"YulFunctionCall","src":"1554:21:16"},"variableNames":[{"name":"digest","nativeSrc":"1544:6:16","nodeType":"YulIdentifier","src":"1544:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3395,"isOffset":false,"isSlot":false,"src":"1544:6:16","valueSize":1},{"declaration":3392,"isOffset":false,"isSlot":false,"src":"1478:11:16","valueSize":1}],"flags":["memory-safe"],"id":3397,"nodeType":"InlineAssembly","src":"1324:325:16"}]},"documentation":{"id":3390,"nodeType":"StructuredDocumentation","src":"552:665:16","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"id":3399,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1231:22:16","nodeType":"FunctionDefinition","parameters":{"id":3393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3392,"mutability":"mutable","name":"messageHash","nameLocation":"1262:11:16","nodeType":"VariableDeclaration","scope":3399,"src":"1254:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3391,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1254:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1253:21:16"},"returnParameters":{"id":3396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3395,"mutability":"mutable","name":"digest","nameLocation":"1306:6:16","nodeType":"VariableDeclaration","scope":3399,"src":"1298:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3394,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1298:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1297:16:16"},"scope":3458,"src":"1222:433:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3424,"nodeType":"Block","src":"2207:143:16","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":3411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2259:32:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":3416,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3402,"src":"2316:7:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2324:6:16","memberName":"length","nodeType":"MemberAccess","src":"2316:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3414,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2809,"src":"2299:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$2809_$","typeString":"type(library Strings)"}},"id":3415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2307:8:16","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1687,"src":"2299:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":3418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2299:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2293:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3412,"name":"bytes","nodeType":"ElementaryTypeName","src":"2293:5:16","typeDescriptions":{}}},"id":3419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2293:39:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3420,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3402,"src":"2334:7:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3409,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2246:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3408,"name":"bytes","nodeType":"ElementaryTypeName","src":"2246:5:16","typeDescriptions":{}}},"id":3410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2252:6:16","memberName":"concat","nodeType":"MemberAccess","src":"2246:12:16","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2246:96:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3407,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2236:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2236:107:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3406,"id":3423,"nodeType":"Return","src":"2217:126:16"}]},"documentation":{"id":3400,"nodeType":"StructuredDocumentation","src":"1661:455:16","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"id":3425,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2130:22:16","nodeType":"FunctionDefinition","parameters":{"id":3403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3402,"mutability":"mutable","name":"message","nameLocation":"2166:7:16","nodeType":"VariableDeclaration","scope":3425,"src":"2153:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3401,"name":"bytes","nodeType":"ElementaryTypeName","src":"2153:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2152:22:16"},"returnParameters":{"id":3406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3405,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3425,"src":"2198:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3404,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2198:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2197:9:16"},"scope":3458,"src":"2121:229:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3444,"nodeType":"Block","src":"2804:80:16","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":3438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2848:10:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":3439,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3428,"src":"2860:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3440,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3430,"src":"2871:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3436,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2831:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2835:12:16","memberName":"encodePacked","nodeType":"MemberAccess","src":"2831:16:16","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2831:45:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3435,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2821:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2821:56:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3434,"id":3443,"nodeType":"Return","src":"2814:63:16"}]},"documentation":{"id":3426,"nodeType":"StructuredDocumentation","src":"2356:332:16","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"id":3445,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2702:31:16","nodeType":"FunctionDefinition","parameters":{"id":3431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3428,"mutability":"mutable","name":"validator","nameLocation":"2742:9:16","nodeType":"VariableDeclaration","scope":3445,"src":"2734:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3427,"name":"address","nodeType":"ElementaryTypeName","src":"2734:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3430,"mutability":"mutable","name":"data","nameLocation":"2766:4:16","nodeType":"VariableDeclaration","scope":3445,"src":"2753:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3429,"name":"bytes","nodeType":"ElementaryTypeName","src":"2753:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2733:38:16"},"returnParameters":{"id":3434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3433,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3445,"src":"2795:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3432,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2795:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2794:9:16"},"scope":3458,"src":"2693:191:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3456,"nodeType":"Block","src":"3435:265:16","statements":[{"AST":{"nativeSrc":"3470:224:16","nodeType":"YulBlock","src":"3470:224:16","statements":[{"nativeSrc":"3484:22:16","nodeType":"YulVariableDeclaration","src":"3484:22:16","value":{"arguments":[{"kind":"number","nativeSrc":"3501:4:16","nodeType":"YulLiteral","src":"3501:4:16","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"3495:5:16","nodeType":"YulIdentifier","src":"3495:5:16"},"nativeSrc":"3495:11:16","nodeType":"YulFunctionCall","src":"3495:11:16"},"variables":[{"name":"ptr","nativeSrc":"3488:3:16","nodeType":"YulTypedName","src":"3488:3:16","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"3526:3:16","nodeType":"YulIdentifier","src":"3526:3:16"},{"hexValue":"1901","kind":"string","nativeSrc":"3531:10:16","nodeType":"YulLiteral","src":"3531:10:16","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nativeSrc":"3519:6:16","nodeType":"YulIdentifier","src":"3519:6:16"},"nativeSrc":"3519:23:16","nodeType":"YulFunctionCall","src":"3519:23:16"},"nativeSrc":"3519:23:16","nodeType":"YulExpressionStatement","src":"3519:23:16"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"3566:3:16","nodeType":"YulIdentifier","src":"3566:3:16"},{"kind":"number","nativeSrc":"3571:4:16","nodeType":"YulLiteral","src":"3571:4:16","type":"","value":"0x02"}],"functionName":{"name":"add","nativeSrc":"3562:3:16","nodeType":"YulIdentifier","src":"3562:3:16"},"nativeSrc":"3562:14:16","nodeType":"YulFunctionCall","src":"3562:14:16"},{"name":"domainSeparator","nativeSrc":"3578:15:16","nodeType":"YulIdentifier","src":"3578:15:16"}],"functionName":{"name":"mstore","nativeSrc":"3555:6:16","nodeType":"YulIdentifier","src":"3555:6:16"},"nativeSrc":"3555:39:16","nodeType":"YulFunctionCall","src":"3555:39:16"},"nativeSrc":"3555:39:16","nodeType":"YulExpressionStatement","src":"3555:39:16"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"3618:3:16","nodeType":"YulIdentifier","src":"3618:3:16"},{"kind":"number","nativeSrc":"3623:4:16","nodeType":"YulLiteral","src":"3623:4:16","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3614:3:16","nodeType":"YulIdentifier","src":"3614:3:16"},"nativeSrc":"3614:14:16","nodeType":"YulFunctionCall","src":"3614:14:16"},{"name":"structHash","nativeSrc":"3630:10:16","nodeType":"YulIdentifier","src":"3630:10:16"}],"functionName":{"name":"mstore","nativeSrc":"3607:6:16","nodeType":"YulIdentifier","src":"3607:6:16"},"nativeSrc":"3607:34:16","nodeType":"YulFunctionCall","src":"3607:34:16"},"nativeSrc":"3607:34:16","nodeType":"YulExpressionStatement","src":"3607:34:16"},{"nativeSrc":"3654:30:16","nodeType":"YulAssignment","src":"3654:30:16","value":{"arguments":[{"name":"ptr","nativeSrc":"3674:3:16","nodeType":"YulIdentifier","src":"3674:3:16"},{"kind":"number","nativeSrc":"3679:4:16","nodeType":"YulLiteral","src":"3679:4:16","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nativeSrc":"3664:9:16","nodeType":"YulIdentifier","src":"3664:9:16"},"nativeSrc":"3664:20:16","nodeType":"YulFunctionCall","src":"3664:20:16"},"variableNames":[{"name":"digest","nativeSrc":"3654:6:16","nodeType":"YulIdentifier","src":"3654:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3453,"isOffset":false,"isSlot":false,"src":"3654:6:16","valueSize":1},{"declaration":3448,"isOffset":false,"isSlot":false,"src":"3578:15:16","valueSize":1},{"declaration":3450,"isOffset":false,"isSlot":false,"src":"3630:10:16","valueSize":1}],"flags":["memory-safe"],"id":3455,"nodeType":"InlineAssembly","src":"3445:249:16"}]},"documentation":{"id":3446,"nodeType":"StructuredDocumentation","src":"2890:431:16","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"id":3457,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3335:15:16","nodeType":"FunctionDefinition","parameters":{"id":3451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3448,"mutability":"mutable","name":"domainSeparator","nameLocation":"3359:15:16","nodeType":"VariableDeclaration","scope":3457,"src":"3351:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3447,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3351:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3450,"mutability":"mutable","name":"structHash","nameLocation":"3384:10:16","nodeType":"VariableDeclaration","scope":3457,"src":"3376:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3449,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3376:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3350:45:16"},"returnParameters":{"id":3454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3453,"mutability":"mutable","name":"digest","nameLocation":"3427:6:16","nodeType":"VariableDeclaration","scope":3457,"src":"3419:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3452,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3419:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3418:16:16"},"scope":3458,"src":"3326:374:16","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3459,"src":"521:3181:16","usedErrors":[],"usedEvents":[]}],"src":"123:3580:16"},"id":16},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[5064],"Panic":[1268],"SafeCast":[6829]},"id":5065,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3460,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:17"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":3462,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5065,"sourceUnit":1269,"src":"129:35:17","symbolAliases":[{"foreign":{"id":3461,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1268,"src":"137:5:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":3464,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5065,"sourceUnit":6830,"src":"165:40:17","symbolAliases":[{"foreign":{"id":3463,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"173:8:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":3465,"nodeType":"StructuredDocumentation","src":"207:73:17","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":5064,"linearizedBaseContracts":[5064],"name":"Math","nameLocation":"289:4:17","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":3470,"members":[{"id":3466,"name":"Floor","nameLocation":"324:5:17","nodeType":"EnumValue","src":"324:5:17"},{"id":3467,"name":"Ceil","nameLocation":"367:4:17","nodeType":"EnumValue","src":"367:4:17"},{"id":3468,"name":"Trunc","nameLocation":"409:5:17","nodeType":"EnumValue","src":"409:5:17"},{"id":3469,"name":"Expand","nameLocation":"439:6:17","nodeType":"EnumValue","src":"439:6:17"}],"name":"Rounding","nameLocation":"305:8:17","nodeType":"EnumDefinition","src":"300:169:17"},{"body":{"id":3501,"nodeType":"Block","src":"677:140:17","statements":[{"id":3500,"nodeType":"UncheckedBlock","src":"687:124:17","statements":[{"assignments":[3483],"declarations":[{"constant":false,"id":3483,"mutability":"mutable","name":"c","nameLocation":"719:1:17","nodeType":"VariableDeclaration","scope":3500,"src":"711:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3482,"name":"uint256","nodeType":"ElementaryTypeName","src":"711:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3487,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3484,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3473,"src":"723:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3485,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3475,"src":"727:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"723:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"711:17:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3488,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3483,"src":"746:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3489,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3473,"src":"750:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"746:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3495,"nodeType":"IfStatement","src":"742:28:17","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"761:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"768:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3493,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"760:10:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3481,"id":3494,"nodeType":"Return","src":"753:17:17"}},{"expression":{"components":[{"hexValue":"74727565","id":3496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"792:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3497,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3483,"src":"798:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3498,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"791:9:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3481,"id":3499,"nodeType":"Return","src":"784:16:17"}]}]},"documentation":{"id":3471,"nodeType":"StructuredDocumentation","src":"475:106:17","text":" @dev Returns the addition of two unsigned integers, with an success flag (no overflow)."},"id":3502,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"595:6:17","nodeType":"FunctionDefinition","parameters":{"id":3476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3473,"mutability":"mutable","name":"a","nameLocation":"610:1:17","nodeType":"VariableDeclaration","scope":3502,"src":"602:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3472,"name":"uint256","nodeType":"ElementaryTypeName","src":"602:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3475,"mutability":"mutable","name":"b","nameLocation":"621:1:17","nodeType":"VariableDeclaration","scope":3502,"src":"613:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3474,"name":"uint256","nodeType":"ElementaryTypeName","src":"613:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"601:22:17"},"returnParameters":{"id":3481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3478,"mutability":"mutable","name":"success","nameLocation":"652:7:17","nodeType":"VariableDeclaration","scope":3502,"src":"647:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3477,"name":"bool","nodeType":"ElementaryTypeName","src":"647:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3480,"mutability":"mutable","name":"result","nameLocation":"669:6:17","nodeType":"VariableDeclaration","scope":3502,"src":"661:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3479,"name":"uint256","nodeType":"ElementaryTypeName","src":"661:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"646:30:17"},"scope":5064,"src":"586:231:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3529,"nodeType":"Block","src":"1028:113:17","statements":[{"id":3528,"nodeType":"UncheckedBlock","src":"1038:97:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3514,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3507,"src":"1066:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3515,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3505,"src":"1070:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1066:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3521,"nodeType":"IfStatement","src":"1062:28:17","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1081:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1088:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3519,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1080:10:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3513,"id":3520,"nodeType":"Return","src":"1073:17:17"}},{"expression":{"components":[{"hexValue":"74727565","id":3522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1112:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3523,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3505,"src":"1118:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3524,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3507,"src":"1122:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1118:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3526,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1111:13:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3513,"id":3527,"nodeType":"Return","src":"1104:20:17"}]}]},"documentation":{"id":3503,"nodeType":"StructuredDocumentation","src":"823:109:17","text":" @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow)."},"id":3530,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"946:6:17","nodeType":"FunctionDefinition","parameters":{"id":3508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3505,"mutability":"mutable","name":"a","nameLocation":"961:1:17","nodeType":"VariableDeclaration","scope":3530,"src":"953:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3504,"name":"uint256","nodeType":"ElementaryTypeName","src":"953:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3507,"mutability":"mutable","name":"b","nameLocation":"972:1:17","nodeType":"VariableDeclaration","scope":3530,"src":"964:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3506,"name":"uint256","nodeType":"ElementaryTypeName","src":"964:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"952:22:17"},"returnParameters":{"id":3513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3510,"mutability":"mutable","name":"success","nameLocation":"1003:7:17","nodeType":"VariableDeclaration","scope":3530,"src":"998:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3509,"name":"bool","nodeType":"ElementaryTypeName","src":"998:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3512,"mutability":"mutable","name":"result","nameLocation":"1020:6:17","nodeType":"VariableDeclaration","scope":3530,"src":"1012:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3511,"name":"uint256","nodeType":"ElementaryTypeName","src":"1012:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"997:30:17"},"scope":5064,"src":"937:204:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3571,"nodeType":"Block","src":"1355:417:17","statements":[{"id":3570,"nodeType":"UncheckedBlock","src":"1365:401:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3542,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3533,"src":"1623:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1628:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1623:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3549,"nodeType":"IfStatement","src":"1619:28:17","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":3545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1639:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":3546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3547,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1638:9:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3541,"id":3548,"nodeType":"Return","src":"1631:16:17"}},{"assignments":[3551],"declarations":[{"constant":false,"id":3551,"mutability":"mutable","name":"c","nameLocation":"1669:1:17","nodeType":"VariableDeclaration","scope":3570,"src":"1661:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3550,"name":"uint256","nodeType":"ElementaryTypeName","src":"1661:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3555,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3552,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3533,"src":"1673:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3553,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3535,"src":"1677:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1673:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1661:17:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3556,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3551,"src":"1696:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3557,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3533,"src":"1700:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3559,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3535,"src":"1705:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3565,"nodeType":"IfStatement","src":"1692:33:17","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1716:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1723:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3563,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1715:10:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3541,"id":3564,"nodeType":"Return","src":"1708:17:17"}},{"expression":{"components":[{"hexValue":"74727565","id":3566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1747:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3567,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3551,"src":"1753:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3568,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1746:9:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3541,"id":3569,"nodeType":"Return","src":"1739:16:17"}]}]},"documentation":{"id":3531,"nodeType":"StructuredDocumentation","src":"1147:112:17","text":" @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow)."},"id":3572,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1273:6:17","nodeType":"FunctionDefinition","parameters":{"id":3536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3533,"mutability":"mutable","name":"a","nameLocation":"1288:1:17","nodeType":"VariableDeclaration","scope":3572,"src":"1280:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3532,"name":"uint256","nodeType":"ElementaryTypeName","src":"1280:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3535,"mutability":"mutable","name":"b","nameLocation":"1299:1:17","nodeType":"VariableDeclaration","scope":3572,"src":"1291:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3534,"name":"uint256","nodeType":"ElementaryTypeName","src":"1291:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1279:22:17"},"returnParameters":{"id":3541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3538,"mutability":"mutable","name":"success","nameLocation":"1330:7:17","nodeType":"VariableDeclaration","scope":3572,"src":"1325:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3537,"name":"bool","nodeType":"ElementaryTypeName","src":"1325:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3540,"mutability":"mutable","name":"result","nameLocation":"1347:6:17","nodeType":"VariableDeclaration","scope":3572,"src":"1339:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3539,"name":"uint256","nodeType":"ElementaryTypeName","src":"1339:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1324:30:17"},"scope":5064,"src":"1264:508:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3599,"nodeType":"Block","src":"1987:114:17","statements":[{"id":3598,"nodeType":"UncheckedBlock","src":"1997:98:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3584,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3577,"src":"2025:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2030:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2025:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3591,"nodeType":"IfStatement","src":"2021:29:17","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2041:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2048:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3589,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2040:10:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3583,"id":3590,"nodeType":"Return","src":"2033:17:17"}},{"expression":{"components":[{"hexValue":"74727565","id":3592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2072:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3593,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3575,"src":"2078:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3594,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3577,"src":"2082:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2078:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3596,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2071:13:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3583,"id":3597,"nodeType":"Return","src":"2064:20:17"}]}]},"documentation":{"id":3573,"nodeType":"StructuredDocumentation","src":"1778:113:17","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":3600,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1905:6:17","nodeType":"FunctionDefinition","parameters":{"id":3578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3575,"mutability":"mutable","name":"a","nameLocation":"1920:1:17","nodeType":"VariableDeclaration","scope":3600,"src":"1912:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3574,"name":"uint256","nodeType":"ElementaryTypeName","src":"1912:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3577,"mutability":"mutable","name":"b","nameLocation":"1931:1:17","nodeType":"VariableDeclaration","scope":3600,"src":"1923:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3576,"name":"uint256","nodeType":"ElementaryTypeName","src":"1923:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1911:22:17"},"returnParameters":{"id":3583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3580,"mutability":"mutable","name":"success","nameLocation":"1962:7:17","nodeType":"VariableDeclaration","scope":3600,"src":"1957:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3579,"name":"bool","nodeType":"ElementaryTypeName","src":"1957:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3582,"mutability":"mutable","name":"result","nameLocation":"1979:6:17","nodeType":"VariableDeclaration","scope":3600,"src":"1971:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3581,"name":"uint256","nodeType":"ElementaryTypeName","src":"1971:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1956:30:17"},"scope":5064,"src":"1896:205:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3627,"nodeType":"Block","src":"2326:114:17","statements":[{"id":3626,"nodeType":"UncheckedBlock","src":"2336:98:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3612,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3605,"src":"2364:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2369:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2364:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3619,"nodeType":"IfStatement","src":"2360:29:17","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2380:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2387:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3617,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2379:10:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3611,"id":3618,"nodeType":"Return","src":"2372:17:17"}},{"expression":{"components":[{"hexValue":"74727565","id":3620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2411:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3621,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3603,"src":"2417:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":3622,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3605,"src":"2421:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2417:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3624,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2410:13:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3611,"id":3625,"nodeType":"Return","src":"2403:20:17"}]}]},"documentation":{"id":3601,"nodeType":"StructuredDocumentation","src":"2107:123:17","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":3628,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2244:6:17","nodeType":"FunctionDefinition","parameters":{"id":3606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3603,"mutability":"mutable","name":"a","nameLocation":"2259:1:17","nodeType":"VariableDeclaration","scope":3628,"src":"2251:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3602,"name":"uint256","nodeType":"ElementaryTypeName","src":"2251:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3605,"mutability":"mutable","name":"b","nameLocation":"2270:1:17","nodeType":"VariableDeclaration","scope":3628,"src":"2262:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3604,"name":"uint256","nodeType":"ElementaryTypeName","src":"2262:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2250:22:17"},"returnParameters":{"id":3611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3608,"mutability":"mutable","name":"success","nameLocation":"2301:7:17","nodeType":"VariableDeclaration","scope":3628,"src":"2296:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3607,"name":"bool","nodeType":"ElementaryTypeName","src":"2296:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3610,"mutability":"mutable","name":"result","nameLocation":"2318:6:17","nodeType":"VariableDeclaration","scope":3628,"src":"2310:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3609,"name":"uint256","nodeType":"ElementaryTypeName","src":"2310:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2295:30:17"},"scope":5064,"src":"2235:205:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3654,"nodeType":"Block","src":"2912:207:17","statements":[{"id":3653,"nodeType":"UncheckedBlock","src":"2922:191:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3640,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3635,"src":"3060:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3641,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3633,"src":"3066:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3642,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3635,"src":"3070:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3066:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3644,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3065:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3647,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3631,"src":"3091:9:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3645,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"3075:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6829_$","typeString":"type(library SafeCast)"}},"id":3646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3084:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6828,"src":"3075:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3075:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3065:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3650,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3064:38:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3060:42:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3639,"id":3652,"nodeType":"Return","src":"3053:49:17"}]}]},"documentation":{"id":3629,"nodeType":"StructuredDocumentation","src":"2446:374:17","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":3655,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"2834:7:17","nodeType":"FunctionDefinition","parameters":{"id":3636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3631,"mutability":"mutable","name":"condition","nameLocation":"2847:9:17","nodeType":"VariableDeclaration","scope":3655,"src":"2842:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3630,"name":"bool","nodeType":"ElementaryTypeName","src":"2842:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3633,"mutability":"mutable","name":"a","nameLocation":"2866:1:17","nodeType":"VariableDeclaration","scope":3655,"src":"2858:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3632,"name":"uint256","nodeType":"ElementaryTypeName","src":"2858:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3635,"mutability":"mutable","name":"b","nameLocation":"2877:1:17","nodeType":"VariableDeclaration","scope":3655,"src":"2869:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3634,"name":"uint256","nodeType":"ElementaryTypeName","src":"2869:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2841:38:17"},"returnParameters":{"id":3639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3638,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3655,"src":"2903:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3637,"name":"uint256","nodeType":"ElementaryTypeName","src":"2903:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2902:9:17"},"scope":5064,"src":"2825:294:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3673,"nodeType":"Block","src":"3256:44:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3666,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3658,"src":"3281:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3667,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3660,"src":"3285:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3281:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3669,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3658,"src":"3288:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3670,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3660,"src":"3291:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3665,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3655,"src":"3273:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3273:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3664,"id":3672,"nodeType":"Return","src":"3266:27:17"}]},"documentation":{"id":3656,"nodeType":"StructuredDocumentation","src":"3125:59:17","text":" @dev Returns the largest of two numbers."},"id":3674,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"3198:3:17","nodeType":"FunctionDefinition","parameters":{"id":3661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3658,"mutability":"mutable","name":"a","nameLocation":"3210:1:17","nodeType":"VariableDeclaration","scope":3674,"src":"3202:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3657,"name":"uint256","nodeType":"ElementaryTypeName","src":"3202:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3660,"mutability":"mutable","name":"b","nameLocation":"3221:1:17","nodeType":"VariableDeclaration","scope":3674,"src":"3213:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3659,"name":"uint256","nodeType":"ElementaryTypeName","src":"3213:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3201:22:17"},"returnParameters":{"id":3664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3663,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3674,"src":"3247:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3662,"name":"uint256","nodeType":"ElementaryTypeName","src":"3247:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3246:9:17"},"scope":5064,"src":"3189:111:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3692,"nodeType":"Block","src":"3438:44:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3685,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3677,"src":"3463:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3686,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3679,"src":"3467:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3463:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3688,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3677,"src":"3470:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3689,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3679,"src":"3473:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3684,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3655,"src":"3455:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3455:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3683,"id":3691,"nodeType":"Return","src":"3448:27:17"}]},"documentation":{"id":3675,"nodeType":"StructuredDocumentation","src":"3306:60:17","text":" @dev Returns the smallest of two numbers."},"id":3693,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"3380:3:17","nodeType":"FunctionDefinition","parameters":{"id":3680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3677,"mutability":"mutable","name":"a","nameLocation":"3392:1:17","nodeType":"VariableDeclaration","scope":3693,"src":"3384:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3676,"name":"uint256","nodeType":"ElementaryTypeName","src":"3384:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3679,"mutability":"mutable","name":"b","nameLocation":"3403:1:17","nodeType":"VariableDeclaration","scope":3693,"src":"3395:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3678,"name":"uint256","nodeType":"ElementaryTypeName","src":"3395:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3383:22:17"},"returnParameters":{"id":3683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3682,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3693,"src":"3429:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3681,"name":"uint256","nodeType":"ElementaryTypeName","src":"3429:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3428:9:17"},"scope":5064,"src":"3371:111:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3715,"nodeType":"Block","src":"3666:82:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3703,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"3721:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3704,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3698,"src":"3725:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3721:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3706,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3720:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3707,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"3731:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3708,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3698,"src":"3735:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3731:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3710,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3730:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3740:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3730:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3720:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3702,"id":3714,"nodeType":"Return","src":"3713:28:17"}]},"documentation":{"id":3694,"nodeType":"StructuredDocumentation","src":"3488:102:17","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":3716,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"3604:7:17","nodeType":"FunctionDefinition","parameters":{"id":3699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3696,"mutability":"mutable","name":"a","nameLocation":"3620:1:17","nodeType":"VariableDeclaration","scope":3716,"src":"3612:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3695,"name":"uint256","nodeType":"ElementaryTypeName","src":"3612:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3698,"mutability":"mutable","name":"b","nameLocation":"3631:1:17","nodeType":"VariableDeclaration","scope":3716,"src":"3623:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3697,"name":"uint256","nodeType":"ElementaryTypeName","src":"3623:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3611:22:17"},"returnParameters":{"id":3702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3701,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3716,"src":"3657:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3700,"name":"uint256","nodeType":"ElementaryTypeName","src":"3657:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3656:9:17"},"scope":5064,"src":"3595:153:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3756,"nodeType":"Block","src":"4040:633:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3726,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3721,"src":"4054:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4059:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4054:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3737,"nodeType":"IfStatement","src":"4050:150:17","trueBody":{"id":3736,"nodeType":"Block","src":"4062:138:17","statements":[{"expression":{"arguments":[{"expression":{"id":3732,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1268,"src":"4166:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1268_$","typeString":"type(library Panic)"}},"id":3733,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4172:16:17","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1235,"src":"4166:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3729,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1268,"src":"4154:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1268_$","typeString":"type(library Panic)"}},"id":3731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4160:5:17","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1267,"src":"4154:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4154:35:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3735,"nodeType":"ExpressionStatement","src":"4154:35:17"}]}},{"id":3755,"nodeType":"UncheckedBlock","src":"4583:84:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3740,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3719,"src":"4630:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4634:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4630:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3738,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"4614:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6829_$","typeString":"type(library SafeCast)"}},"id":3739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4623:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6828,"src":"4614:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4614:22:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3744,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3719,"src":"4641:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4645:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4641:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3747,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4640:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3748,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3721,"src":"4650:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4640:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4654:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4640:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3752,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4639:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4614:42:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3725,"id":3754,"nodeType":"Return","src":"4607:49:17"}]}]},"documentation":{"id":3717,"nodeType":"StructuredDocumentation","src":"3754:210:17","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":3757,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3978:7:17","nodeType":"FunctionDefinition","parameters":{"id":3722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3719,"mutability":"mutable","name":"a","nameLocation":"3994:1:17","nodeType":"VariableDeclaration","scope":3757,"src":"3986:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3718,"name":"uint256","nodeType":"ElementaryTypeName","src":"3986:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3721,"mutability":"mutable","name":"b","nameLocation":"4005:1:17","nodeType":"VariableDeclaration","scope":3757,"src":"3997:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3720,"name":"uint256","nodeType":"ElementaryTypeName","src":"3997:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3985:22:17"},"returnParameters":{"id":3725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3724,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3757,"src":"4031:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3723,"name":"uint256","nodeType":"ElementaryTypeName","src":"4031:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4030:9:17"},"scope":5064,"src":"3969:704:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3893,"nodeType":"Block","src":"5094:4128:17","statements":[{"id":3892,"nodeType":"UncheckedBlock","src":"5104:4112:17","statements":[{"assignments":[3770],"declarations":[{"constant":false,"id":3770,"mutability":"mutable","name":"prod0","nameLocation":"5441:5:17","nodeType":"VariableDeclaration","scope":3892,"src":"5433:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3769,"name":"uint256","nodeType":"ElementaryTypeName","src":"5433:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3774,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3771,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3760,"src":"5449:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3772,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"5453:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5449:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5433:21:17"},{"assignments":[3776],"declarations":[{"constant":false,"id":3776,"mutability":"mutable","name":"prod1","nameLocation":"5521:5:17","nodeType":"VariableDeclaration","scope":3892,"src":"5513:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3775,"name":"uint256","nodeType":"ElementaryTypeName","src":"5513:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3777,"nodeType":"VariableDeclarationStatement","src":"5513:13:17"},{"AST":{"nativeSrc":"5593:122:17","nodeType":"YulBlock","src":"5593:122:17","statements":[{"nativeSrc":"5611:30:17","nodeType":"YulVariableDeclaration","src":"5611:30:17","value":{"arguments":[{"name":"x","nativeSrc":"5628:1:17","nodeType":"YulIdentifier","src":"5628:1:17"},{"name":"y","nativeSrc":"5631:1:17","nodeType":"YulIdentifier","src":"5631:1:17"},{"arguments":[{"kind":"number","nativeSrc":"5638:1:17","nodeType":"YulLiteral","src":"5638:1:17","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"5634:3:17","nodeType":"YulIdentifier","src":"5634:3:17"},"nativeSrc":"5634:6:17","nodeType":"YulFunctionCall","src":"5634:6:17"}],"functionName":{"name":"mulmod","nativeSrc":"5621:6:17","nodeType":"YulIdentifier","src":"5621:6:17"},"nativeSrc":"5621:20:17","nodeType":"YulFunctionCall","src":"5621:20:17"},"variables":[{"name":"mm","nativeSrc":"5615:2:17","nodeType":"YulTypedName","src":"5615:2:17","type":""}]},{"nativeSrc":"5658:43:17","nodeType":"YulAssignment","src":"5658:43:17","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"5675:2:17","nodeType":"YulIdentifier","src":"5675:2:17"},{"name":"prod0","nativeSrc":"5679:5:17","nodeType":"YulIdentifier","src":"5679:5:17"}],"functionName":{"name":"sub","nativeSrc":"5671:3:17","nodeType":"YulIdentifier","src":"5671:3:17"},"nativeSrc":"5671:14:17","nodeType":"YulFunctionCall","src":"5671:14:17"},{"arguments":[{"name":"mm","nativeSrc":"5690:2:17","nodeType":"YulIdentifier","src":"5690:2:17"},{"name":"prod0","nativeSrc":"5694:5:17","nodeType":"YulIdentifier","src":"5694:5:17"}],"functionName":{"name":"lt","nativeSrc":"5687:2:17","nodeType":"YulIdentifier","src":"5687:2:17"},"nativeSrc":"5687:13:17","nodeType":"YulFunctionCall","src":"5687:13:17"}],"functionName":{"name":"sub","nativeSrc":"5667:3:17","nodeType":"YulIdentifier","src":"5667:3:17"},"nativeSrc":"5667:34:17","nodeType":"YulFunctionCall","src":"5667:34:17"},"variableNames":[{"name":"prod1","nativeSrc":"5658:5:17","nodeType":"YulIdentifier","src":"5658:5:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3770,"isOffset":false,"isSlot":false,"src":"5679:5:17","valueSize":1},{"declaration":3770,"isOffset":false,"isSlot":false,"src":"5694:5:17","valueSize":1},{"declaration":3776,"isOffset":false,"isSlot":false,"src":"5658:5:17","valueSize":1},{"declaration":3760,"isOffset":false,"isSlot":false,"src":"5628:1:17","valueSize":1},{"declaration":3762,"isOffset":false,"isSlot":false,"src":"5631:1:17","valueSize":1}],"id":3778,"nodeType":"InlineAssembly","src":"5584:131:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3779,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3776,"src":"5796:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5805:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5796:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3787,"nodeType":"IfStatement","src":"5792:368:17","trueBody":{"id":3786,"nodeType":"Block","src":"5808:352:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3782,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3770,"src":"6126:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3783,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3764,"src":"6134:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6126:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3768,"id":3785,"nodeType":"Return","src":"6119:26:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3788,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3764,"src":"6270:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3789,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3776,"src":"6285:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6270:20:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3806,"nodeType":"IfStatement","src":"6266:143:17","trueBody":{"id":3805,"nodeType":"Block","src":"6292:117:17","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3795,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3764,"src":"6330:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6345:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6330:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":3798,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1268,"src":"6348:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1268_$","typeString":"type(library Panic)"}},"id":3799,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6354:16:17","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1235,"src":"6348:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3800,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1268,"src":"6372:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1268_$","typeString":"type(library Panic)"}},"id":3801,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6378:14:17","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":1231,"src":"6372:20:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3794,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3655,"src":"6322:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6322:71:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3791,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1268,"src":"6310:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1268_$","typeString":"type(library Panic)"}},"id":3793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6316:5:17","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1267,"src":"6310:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6310:84:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3804,"nodeType":"ExpressionStatement","src":"6310:84:17"}]}},{"assignments":[3808],"declarations":[{"constant":false,"id":3808,"mutability":"mutable","name":"remainder","nameLocation":"6672:9:17","nodeType":"VariableDeclaration","scope":3892,"src":"6664:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3807,"name":"uint256","nodeType":"ElementaryTypeName","src":"6664:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3809,"nodeType":"VariableDeclarationStatement","src":"6664:17:17"},{"AST":{"nativeSrc":"6704:291:17","nodeType":"YulBlock","src":"6704:291:17","statements":[{"nativeSrc":"6773:38:17","nodeType":"YulAssignment","src":"6773:38:17","value":{"arguments":[{"name":"x","nativeSrc":"6793:1:17","nodeType":"YulIdentifier","src":"6793:1:17"},{"name":"y","nativeSrc":"6796:1:17","nodeType":"YulIdentifier","src":"6796:1:17"},{"name":"denominator","nativeSrc":"6799:11:17","nodeType":"YulIdentifier","src":"6799:11:17"}],"functionName":{"name":"mulmod","nativeSrc":"6786:6:17","nodeType":"YulIdentifier","src":"6786:6:17"},"nativeSrc":"6786:25:17","nodeType":"YulFunctionCall","src":"6786:25:17"},"variableNames":[{"name":"remainder","nativeSrc":"6773:9:17","nodeType":"YulIdentifier","src":"6773:9:17"}]},{"nativeSrc":"6893:41:17","nodeType":"YulAssignment","src":"6893:41:17","value":{"arguments":[{"name":"prod1","nativeSrc":"6906:5:17","nodeType":"YulIdentifier","src":"6906:5:17"},{"arguments":[{"name":"remainder","nativeSrc":"6916:9:17","nodeType":"YulIdentifier","src":"6916:9:17"},{"name":"prod0","nativeSrc":"6927:5:17","nodeType":"YulIdentifier","src":"6927:5:17"}],"functionName":{"name":"gt","nativeSrc":"6913:2:17","nodeType":"YulIdentifier","src":"6913:2:17"},"nativeSrc":"6913:20:17","nodeType":"YulFunctionCall","src":"6913:20:17"}],"functionName":{"name":"sub","nativeSrc":"6902:3:17","nodeType":"YulIdentifier","src":"6902:3:17"},"nativeSrc":"6902:32:17","nodeType":"YulFunctionCall","src":"6902:32:17"},"variableNames":[{"name":"prod1","nativeSrc":"6893:5:17","nodeType":"YulIdentifier","src":"6893:5:17"}]},{"nativeSrc":"6951:30:17","nodeType":"YulAssignment","src":"6951:30:17","value":{"arguments":[{"name":"prod0","nativeSrc":"6964:5:17","nodeType":"YulIdentifier","src":"6964:5:17"},{"name":"remainder","nativeSrc":"6971:9:17","nodeType":"YulIdentifier","src":"6971:9:17"}],"functionName":{"name":"sub","nativeSrc":"6960:3:17","nodeType":"YulIdentifier","src":"6960:3:17"},"nativeSrc":"6960:21:17","nodeType":"YulFunctionCall","src":"6960:21:17"},"variableNames":[{"name":"prod0","nativeSrc":"6951:5:17","nodeType":"YulIdentifier","src":"6951:5:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3764,"isOffset":false,"isSlot":false,"src":"6799:11:17","valueSize":1},{"declaration":3770,"isOffset":false,"isSlot":false,"src":"6927:5:17","valueSize":1},{"declaration":3770,"isOffset":false,"isSlot":false,"src":"6951:5:17","valueSize":1},{"declaration":3770,"isOffset":false,"isSlot":false,"src":"6964:5:17","valueSize":1},{"declaration":3776,"isOffset":false,"isSlot":false,"src":"6893:5:17","valueSize":1},{"declaration":3776,"isOffset":false,"isSlot":false,"src":"6906:5:17","valueSize":1},{"declaration":3808,"isOffset":false,"isSlot":false,"src":"6773:9:17","valueSize":1},{"declaration":3808,"isOffset":false,"isSlot":false,"src":"6916:9:17","valueSize":1},{"declaration":3808,"isOffset":false,"isSlot":false,"src":"6971:9:17","valueSize":1},{"declaration":3760,"isOffset":false,"isSlot":false,"src":"6793:1:17","valueSize":1},{"declaration":3762,"isOffset":false,"isSlot":false,"src":"6796:1:17","valueSize":1}],"id":3810,"nodeType":"InlineAssembly","src":"6695:300:17"},{"assignments":[3812],"declarations":[{"constant":false,"id":3812,"mutability":"mutable","name":"twos","nameLocation":"7207:4:17","nodeType":"VariableDeclaration","scope":3892,"src":"7199:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3811,"name":"uint256","nodeType":"ElementaryTypeName","src":"7199:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3819,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3813,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3764,"src":"7214:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":3814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7229:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3815,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3764,"src":"7233:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7229:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3817,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7228:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7214:31:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7199:46:17"},{"AST":{"nativeSrc":"7268:366:17","nodeType":"YulBlock","src":"7268:366:17","statements":[{"nativeSrc":"7333:37:17","nodeType":"YulAssignment","src":"7333:37:17","value":{"arguments":[{"name":"denominator","nativeSrc":"7352:11:17","nodeType":"YulIdentifier","src":"7352:11:17"},{"name":"twos","nativeSrc":"7365:4:17","nodeType":"YulIdentifier","src":"7365:4:17"}],"functionName":{"name":"div","nativeSrc":"7348:3:17","nodeType":"YulIdentifier","src":"7348:3:17"},"nativeSrc":"7348:22:17","nodeType":"YulFunctionCall","src":"7348:22:17"},"variableNames":[{"name":"denominator","nativeSrc":"7333:11:17","nodeType":"YulIdentifier","src":"7333:11:17"}]},{"nativeSrc":"7437:25:17","nodeType":"YulAssignment","src":"7437:25:17","value":{"arguments":[{"name":"prod0","nativeSrc":"7450:5:17","nodeType":"YulIdentifier","src":"7450:5:17"},{"name":"twos","nativeSrc":"7457:4:17","nodeType":"YulIdentifier","src":"7457:4:17"}],"functionName":{"name":"div","nativeSrc":"7446:3:17","nodeType":"YulIdentifier","src":"7446:3:17"},"nativeSrc":"7446:16:17","nodeType":"YulFunctionCall","src":"7446:16:17"},"variableNames":[{"name":"prod0","nativeSrc":"7437:5:17","nodeType":"YulIdentifier","src":"7437:5:17"}]},{"nativeSrc":"7581:39:17","nodeType":"YulAssignment","src":"7581:39:17","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"7601:1:17","nodeType":"YulLiteral","src":"7601:1:17","type":"","value":"0"},{"name":"twos","nativeSrc":"7604:4:17","nodeType":"YulIdentifier","src":"7604:4:17"}],"functionName":{"name":"sub","nativeSrc":"7597:3:17","nodeType":"YulIdentifier","src":"7597:3:17"},"nativeSrc":"7597:12:17","nodeType":"YulFunctionCall","src":"7597:12:17"},{"name":"twos","nativeSrc":"7611:4:17","nodeType":"YulIdentifier","src":"7611:4:17"}],"functionName":{"name":"div","nativeSrc":"7593:3:17","nodeType":"YulIdentifier","src":"7593:3:17"},"nativeSrc":"7593:23:17","nodeType":"YulFunctionCall","src":"7593:23:17"},{"kind":"number","nativeSrc":"7618:1:17","nodeType":"YulLiteral","src":"7618:1:17","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"7589:3:17","nodeType":"YulIdentifier","src":"7589:3:17"},"nativeSrc":"7589:31:17","nodeType":"YulFunctionCall","src":"7589:31:17"},"variableNames":[{"name":"twos","nativeSrc":"7581:4:17","nodeType":"YulIdentifier","src":"7581:4:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3764,"isOffset":false,"isSlot":false,"src":"7333:11:17","valueSize":1},{"declaration":3764,"isOffset":false,"isSlot":false,"src":"7352:11:17","valueSize":1},{"declaration":3770,"isOffset":false,"isSlot":false,"src":"7437:5:17","valueSize":1},{"declaration":3770,"isOffset":false,"isSlot":false,"src":"7450:5:17","valueSize":1},{"declaration":3812,"isOffset":false,"isSlot":false,"src":"7365:4:17","valueSize":1},{"declaration":3812,"isOffset":false,"isSlot":false,"src":"7457:4:17","valueSize":1},{"declaration":3812,"isOffset":false,"isSlot":false,"src":"7581:4:17","valueSize":1},{"declaration":3812,"isOffset":false,"isSlot":false,"src":"7604:4:17","valueSize":1},{"declaration":3812,"isOffset":false,"isSlot":false,"src":"7611:4:17","valueSize":1}],"id":3820,"nodeType":"InlineAssembly","src":"7259:375:17"},{"expression":{"id":3825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3821,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3770,"src":"7700:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3822,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3776,"src":"7709:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3823,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3812,"src":"7717:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7709:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7700:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3826,"nodeType":"ExpressionStatement","src":"7700:21:17"},{"assignments":[3828],"declarations":[{"constant":false,"id":3828,"mutability":"mutable","name":"inverse","nameLocation":"8064:7:17","nodeType":"VariableDeclaration","scope":3892,"src":"8056:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3827,"name":"uint256","nodeType":"ElementaryTypeName","src":"8056:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3835,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8075:1:17","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3830,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3764,"src":"8079:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8075:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3832,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8074:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":3833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8094:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"8074:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8056:39:17"},{"expression":{"id":3842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3836,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3828,"src":"8312:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8323:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3838,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3764,"src":"8327:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3839,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3828,"src":"8341:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8327:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8323:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8312:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3843,"nodeType":"ExpressionStatement","src":"8312:36:17"},{"expression":{"id":3850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3844,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3828,"src":"8382:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8393:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3846,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3764,"src":"8397:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3847,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3828,"src":"8411:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8397:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8393:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8382:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3851,"nodeType":"ExpressionStatement","src":"8382:36:17"},{"expression":{"id":3858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3852,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3828,"src":"8454:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8465:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3854,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3764,"src":"8469:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3855,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3828,"src":"8483:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8469:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8465:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8454:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3859,"nodeType":"ExpressionStatement","src":"8454:36:17"},{"expression":{"id":3866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3860,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3828,"src":"8525:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8536:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3862,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3764,"src":"8540:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3863,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3828,"src":"8554:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8540:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8536:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8525:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3867,"nodeType":"ExpressionStatement","src":"8525:36:17"},{"expression":{"id":3874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3868,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3828,"src":"8598:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8609:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3870,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3764,"src":"8613:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3871,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3828,"src":"8627:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8613:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8609:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8598:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3875,"nodeType":"ExpressionStatement","src":"8598:36:17"},{"expression":{"id":3882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3876,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3828,"src":"8672:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8683:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3878,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3764,"src":"8687:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3879,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3828,"src":"8701:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8687:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8683:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8672:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3883,"nodeType":"ExpressionStatement","src":"8672:36:17"},{"expression":{"id":3888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3884,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"9154:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3885,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3770,"src":"9163:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3886,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3828,"src":"9171:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9163:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9154:24:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3889,"nodeType":"ExpressionStatement","src":"9154:24:17"},{"expression":{"id":3890,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"9199:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3768,"id":3891,"nodeType":"Return","src":"9192:13:17"}]}]},"documentation":{"id":3758,"nodeType":"StructuredDocumentation","src":"4679:312:17","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":3894,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5005:6:17","nodeType":"FunctionDefinition","parameters":{"id":3765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3760,"mutability":"mutable","name":"x","nameLocation":"5020:1:17","nodeType":"VariableDeclaration","scope":3894,"src":"5012:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3759,"name":"uint256","nodeType":"ElementaryTypeName","src":"5012:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3762,"mutability":"mutable","name":"y","nameLocation":"5031:1:17","nodeType":"VariableDeclaration","scope":3894,"src":"5023:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3761,"name":"uint256","nodeType":"ElementaryTypeName","src":"5023:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3764,"mutability":"mutable","name":"denominator","nameLocation":"5042:11:17","nodeType":"VariableDeclaration","scope":3894,"src":"5034:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3763,"name":"uint256","nodeType":"ElementaryTypeName","src":"5034:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5011:43:17"},"returnParameters":{"id":3768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3767,"mutability":"mutable","name":"result","nameLocation":"5086:6:17","nodeType":"VariableDeclaration","scope":3894,"src":"5078:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3766,"name":"uint256","nodeType":"ElementaryTypeName","src":"5078:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5077:16:17"},"scope":5064,"src":"4996:4226:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3930,"nodeType":"Block","src":"9461:128:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3910,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3897,"src":"9485:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3911,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3899,"src":"9488:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3912,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3901,"src":"9491:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3909,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[3894,3931],"referencedDeclaration":3894,"src":"9478:6:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9478:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3917,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3904,"src":"9539:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3470","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3470","typeString":"enum Math.Rounding"}],"id":3916,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5063,"src":"9522:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3470_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9522:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3920,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3897,"src":"9559:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3921,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3899,"src":"9562:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3922,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3901,"src":"9565:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3919,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"9552:6:17","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9552:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9580:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9552:29:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9522:59:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3914,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"9506:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6829_$","typeString":"type(library SafeCast)"}},"id":3915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9515:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6828,"src":"9506:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9506:76:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9478:104:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3908,"id":3929,"nodeType":"Return","src":"9471:111:17"}]},"documentation":{"id":3895,"nodeType":"StructuredDocumentation","src":"9228:118:17","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":3931,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"9360:6:17","nodeType":"FunctionDefinition","parameters":{"id":3905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3897,"mutability":"mutable","name":"x","nameLocation":"9375:1:17","nodeType":"VariableDeclaration","scope":3931,"src":"9367:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3896,"name":"uint256","nodeType":"ElementaryTypeName","src":"9367:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3899,"mutability":"mutable","name":"y","nameLocation":"9386:1:17","nodeType":"VariableDeclaration","scope":3931,"src":"9378:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3898,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3901,"mutability":"mutable","name":"denominator","nameLocation":"9397:11:17","nodeType":"VariableDeclaration","scope":3931,"src":"9389:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3900,"name":"uint256","nodeType":"ElementaryTypeName","src":"9389:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3904,"mutability":"mutable","name":"rounding","nameLocation":"9419:8:17","nodeType":"VariableDeclaration","scope":3931,"src":"9410:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3470","typeString":"enum Math.Rounding"},"typeName":{"id":3903,"nodeType":"UserDefinedTypeName","pathNode":{"id":3902,"name":"Rounding","nameLocations":["9410:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":3470,"src":"9410:8:17"},"referencedDeclaration":3470,"src":"9410:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3470","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9366:62:17"},"returnParameters":{"id":3908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3907,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3931,"src":"9452:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3906,"name":"uint256","nodeType":"ElementaryTypeName","src":"9452:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9451:9:17"},"scope":5064,"src":"9351:238:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4027,"nodeType":"Block","src":"10223:1849:17","statements":[{"id":4026,"nodeType":"UncheckedBlock","src":"10233:1833:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3941,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3936,"src":"10261:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10266:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10261:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3946,"nodeType":"IfStatement","src":"10257:20:17","trueBody":{"expression":{"hexValue":"30","id":3944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3940,"id":3945,"nodeType":"Return","src":"10269:8:17"}},{"assignments":[3948],"declarations":[{"constant":false,"id":3948,"mutability":"mutable","name":"remainder","nameLocation":"10756:9:17","nodeType":"VariableDeclaration","scope":4026,"src":"10748:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3947,"name":"uint256","nodeType":"ElementaryTypeName","src":"10748:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3952,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3949,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3934,"src":"10768:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":3950,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3936,"src":"10772:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10768:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10748:25:17"},{"assignments":[3954],"declarations":[{"constant":false,"id":3954,"mutability":"mutable","name":"gcd","nameLocation":"10795:3:17","nodeType":"VariableDeclaration","scope":4026,"src":"10787:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3953,"name":"uint256","nodeType":"ElementaryTypeName","src":"10787:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3956,"initialValue":{"id":3955,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3936,"src":"10801:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10787:15:17"},{"assignments":[3958],"declarations":[{"constant":false,"id":3958,"mutability":"mutable","name":"x","nameLocation":"10945:1:17","nodeType":"VariableDeclaration","scope":4026,"src":"10938:8:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3957,"name":"int256","nodeType":"ElementaryTypeName","src":"10938:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3960,"initialValue":{"hexValue":"30","id":3959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10949:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10938:12:17"},{"assignments":[3962],"declarations":[{"constant":false,"id":3962,"mutability":"mutable","name":"y","nameLocation":"10971:1:17","nodeType":"VariableDeclaration","scope":4026,"src":"10964:8:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3961,"name":"int256","nodeType":"ElementaryTypeName","src":"10964:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3964,"initialValue":{"hexValue":"31","id":3963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10975:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"10964:12:17"},{"body":{"id":4001,"nodeType":"Block","src":"11014:882:17","statements":[{"assignments":[3969],"declarations":[{"constant":false,"id":3969,"mutability":"mutable","name":"quotient","nameLocation":"11040:8:17","nodeType":"VariableDeclaration","scope":4001,"src":"11032:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3968,"name":"uint256","nodeType":"ElementaryTypeName","src":"11032:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3973,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3970,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3954,"src":"11051:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3971,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3948,"src":"11057:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11051:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11032:34:17"},{"expression":{"id":3984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3974,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3954,"src":"11086:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3975,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3948,"src":"11091:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3976,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11085:16:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":3977,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3948,"src":"11191:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3978,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3954,"src":"11436:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3979,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3948,"src":"11442:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3980,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3969,"src":"11454:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11442:20:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11436:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3983,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11104:376:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"11085:395:17","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3985,"nodeType":"ExpressionStatement","src":"11085:395:17"},{"expression":{"id":3999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3986,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3958,"src":"11500:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":3987,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3962,"src":"11503:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3988,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11499:6:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":3989,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3962,"src":"11585:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3990,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3958,"src":"11839:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3991,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3962,"src":"11843:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3994,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3969,"src":"11854:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3993,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11847:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3992,"name":"int256","nodeType":"ElementaryTypeName","src":"11847:6:17","typeDescriptions":{}}},"id":3995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11847:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11843:20:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11839:24:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3998,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11508:373:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"11499:382:17","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4000,"nodeType":"ExpressionStatement","src":"11499:382:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3965,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3948,"src":"10998:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11011:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10998:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4002,"nodeType":"WhileStatement","src":"10991:905:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4003,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3954,"src":"11914:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":4004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11921:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11914:8:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4008,"nodeType":"IfStatement","src":"11910:22:17","trueBody":{"expression":{"hexValue":"30","id":4006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11931:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3940,"id":4007,"nodeType":"Return","src":"11924:8:17"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4010,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3958,"src":"11983:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":4011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11987:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11983:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4013,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3936,"src":"11990:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":4017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"12002:2:17","subExpression":{"id":4016,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3958,"src":"12003:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4015,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11994:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4014,"name":"uint256","nodeType":"ElementaryTypeName","src":"11994:7:17","typeDescriptions":{}}},"id":4018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11994:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11990:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4022,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3958,"src":"12015:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4021,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12007:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4020,"name":"uint256","nodeType":"ElementaryTypeName","src":"12007:7:17","typeDescriptions":{}}},"id":4023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12007:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4009,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3655,"src":"11975:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11975:43:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3940,"id":4025,"nodeType":"Return","src":"11968:50:17"}]}]},"documentation":{"id":3932,"nodeType":"StructuredDocumentation","src":"9595:553:17","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":4028,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"10162:6:17","nodeType":"FunctionDefinition","parameters":{"id":3937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3934,"mutability":"mutable","name":"a","nameLocation":"10177:1:17","nodeType":"VariableDeclaration","scope":4028,"src":"10169:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3933,"name":"uint256","nodeType":"ElementaryTypeName","src":"10169:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3936,"mutability":"mutable","name":"n","nameLocation":"10188:1:17","nodeType":"VariableDeclaration","scope":4028,"src":"10180:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3935,"name":"uint256","nodeType":"ElementaryTypeName","src":"10180:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10168:22:17"},"returnParameters":{"id":3940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3939,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4028,"src":"10214:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3938,"name":"uint256","nodeType":"ElementaryTypeName","src":"10214:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10213:9:17"},"scope":5064,"src":"10153:1919:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4048,"nodeType":"Block","src":"12672:82:17","statements":[{"id":4047,"nodeType":"UncheckedBlock","src":"12682:66:17","statements":[{"expression":{"arguments":[{"id":4040,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4031,"src":"12725:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4041,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4033,"src":"12728:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":4042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12732:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12728:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4044,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4033,"src":"12735:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4038,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5064,"src":"12713:4:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5064_$","typeString":"type(library Math)"}},"id":4039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12718:6:17","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":4085,"src":"12713:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":4045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12713:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4037,"id":4046,"nodeType":"Return","src":"12706:31:17"}]}]},"documentation":{"id":4029,"nodeType":"StructuredDocumentation","src":"12078:514:17","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":4049,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"12606:11:17","nodeType":"FunctionDefinition","parameters":{"id":4034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4031,"mutability":"mutable","name":"a","nameLocation":"12626:1:17","nodeType":"VariableDeclaration","scope":4049,"src":"12618:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4030,"name":"uint256","nodeType":"ElementaryTypeName","src":"12618:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4033,"mutability":"mutable","name":"p","nameLocation":"12637:1:17","nodeType":"VariableDeclaration","scope":4049,"src":"12629:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4032,"name":"uint256","nodeType":"ElementaryTypeName","src":"12629:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12617:22:17"},"returnParameters":{"id":4037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4036,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4049,"src":"12663:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4035,"name":"uint256","nodeType":"ElementaryTypeName","src":"12663:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12662:9:17"},"scope":5064,"src":"12597:157:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4084,"nodeType":"Block","src":"13524:174:17","statements":[{"assignments":[4062,4064],"declarations":[{"constant":false,"id":4062,"mutability":"mutable","name":"success","nameLocation":"13540:7:17","nodeType":"VariableDeclaration","scope":4084,"src":"13535:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4061,"name":"bool","nodeType":"ElementaryTypeName","src":"13535:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4064,"mutability":"mutable","name":"result","nameLocation":"13557:6:17","nodeType":"VariableDeclaration","scope":4084,"src":"13549:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4063,"name":"uint256","nodeType":"ElementaryTypeName","src":"13549:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4070,"initialValue":{"arguments":[{"id":4066,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4052,"src":"13577:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4067,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4054,"src":"13580:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4068,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4056,"src":"13583:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4065,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4109,4191],"referencedDeclaration":4109,"src":"13567:9:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":4069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13567:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"13534:51:17"},{"condition":{"id":4072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13599:8:17","subExpression":{"id":4071,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4062,"src":"13600:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4081,"nodeType":"IfStatement","src":"13595:74:17","trueBody":{"id":4080,"nodeType":"Block","src":"13609:60:17","statements":[{"expression":{"arguments":[{"expression":{"id":4076,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1268,"src":"13635:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1268_$","typeString":"type(library Panic)"}},"id":4077,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13641:16:17","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1235,"src":"13635:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4073,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1268,"src":"13623:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1268_$","typeString":"type(library Panic)"}},"id":4075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13629:5:17","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1267,"src":"13623:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13623:35:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4079,"nodeType":"ExpressionStatement","src":"13623:35:17"}]}},{"expression":{"id":4082,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4064,"src":"13685:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4060,"id":4083,"nodeType":"Return","src":"13678:13:17"}]},"documentation":{"id":4050,"nodeType":"StructuredDocumentation","src":"12760:678:17","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":4085,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"13452:6:17","nodeType":"FunctionDefinition","parameters":{"id":4057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4052,"mutability":"mutable","name":"b","nameLocation":"13467:1:17","nodeType":"VariableDeclaration","scope":4085,"src":"13459:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4051,"name":"uint256","nodeType":"ElementaryTypeName","src":"13459:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4054,"mutability":"mutable","name":"e","nameLocation":"13478:1:17","nodeType":"VariableDeclaration","scope":4085,"src":"13470:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4053,"name":"uint256","nodeType":"ElementaryTypeName","src":"13470:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4056,"mutability":"mutable","name":"m","nameLocation":"13489:1:17","nodeType":"VariableDeclaration","scope":4085,"src":"13481:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4055,"name":"uint256","nodeType":"ElementaryTypeName","src":"13481:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13458:33:17"},"returnParameters":{"id":4060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4059,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4085,"src":"13515:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4058,"name":"uint256","nodeType":"ElementaryTypeName","src":"13515:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13514:9:17"},"scope":5064,"src":"13443:255:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4108,"nodeType":"Block","src":"14552:1493:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4099,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4092,"src":"14566:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14571:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14566:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4106,"nodeType":"IfStatement","src":"14562:29:17","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14582:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14589:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4104,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"14581:10:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4098,"id":4105,"nodeType":"Return","src":"14574:17:17"}},{"AST":{"nativeSrc":"14626:1413:17","nodeType":"YulBlock","src":"14626:1413:17","statements":[{"nativeSrc":"14640:22:17","nodeType":"YulVariableDeclaration","src":"14640:22:17","value":{"arguments":[{"kind":"number","nativeSrc":"14657:4:17","nodeType":"YulLiteral","src":"14657:4:17","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"14651:5:17","nodeType":"YulIdentifier","src":"14651:5:17"},"nativeSrc":"14651:11:17","nodeType":"YulFunctionCall","src":"14651:11:17"},"variables":[{"name":"ptr","nativeSrc":"14644:3:17","nodeType":"YulTypedName","src":"14644:3:17","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"15570:3:17","nodeType":"YulIdentifier","src":"15570:3:17"},{"kind":"number","nativeSrc":"15575:4:17","nodeType":"YulLiteral","src":"15575:4:17","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"15563:6:17","nodeType":"YulIdentifier","src":"15563:6:17"},"nativeSrc":"15563:17:17","nodeType":"YulFunctionCall","src":"15563:17:17"},"nativeSrc":"15563:17:17","nodeType":"YulExpressionStatement","src":"15563:17:17"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15604:3:17","nodeType":"YulIdentifier","src":"15604:3:17"},{"kind":"number","nativeSrc":"15609:4:17","nodeType":"YulLiteral","src":"15609:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"15600:3:17","nodeType":"YulIdentifier","src":"15600:3:17"},"nativeSrc":"15600:14:17","nodeType":"YulFunctionCall","src":"15600:14:17"},{"kind":"number","nativeSrc":"15616:4:17","nodeType":"YulLiteral","src":"15616:4:17","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"15593:6:17","nodeType":"YulIdentifier","src":"15593:6:17"},"nativeSrc":"15593:28:17","nodeType":"YulFunctionCall","src":"15593:28:17"},"nativeSrc":"15593:28:17","nodeType":"YulExpressionStatement","src":"15593:28:17"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15645:3:17","nodeType":"YulIdentifier","src":"15645:3:17"},{"kind":"number","nativeSrc":"15650:4:17","nodeType":"YulLiteral","src":"15650:4:17","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"15641:3:17","nodeType":"YulIdentifier","src":"15641:3:17"},"nativeSrc":"15641:14:17","nodeType":"YulFunctionCall","src":"15641:14:17"},{"kind":"number","nativeSrc":"15657:4:17","nodeType":"YulLiteral","src":"15657:4:17","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"15634:6:17","nodeType":"YulIdentifier","src":"15634:6:17"},"nativeSrc":"15634:28:17","nodeType":"YulFunctionCall","src":"15634:28:17"},"nativeSrc":"15634:28:17","nodeType":"YulExpressionStatement","src":"15634:28:17"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15686:3:17","nodeType":"YulIdentifier","src":"15686:3:17"},{"kind":"number","nativeSrc":"15691:4:17","nodeType":"YulLiteral","src":"15691:4:17","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"15682:3:17","nodeType":"YulIdentifier","src":"15682:3:17"},"nativeSrc":"15682:14:17","nodeType":"YulFunctionCall","src":"15682:14:17"},{"name":"b","nativeSrc":"15698:1:17","nodeType":"YulIdentifier","src":"15698:1:17"}],"functionName":{"name":"mstore","nativeSrc":"15675:6:17","nodeType":"YulIdentifier","src":"15675:6:17"},"nativeSrc":"15675:25:17","nodeType":"YulFunctionCall","src":"15675:25:17"},"nativeSrc":"15675:25:17","nodeType":"YulExpressionStatement","src":"15675:25:17"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15724:3:17","nodeType":"YulIdentifier","src":"15724:3:17"},{"kind":"number","nativeSrc":"15729:4:17","nodeType":"YulLiteral","src":"15729:4:17","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"15720:3:17","nodeType":"YulIdentifier","src":"15720:3:17"},"nativeSrc":"15720:14:17","nodeType":"YulFunctionCall","src":"15720:14:17"},{"name":"e","nativeSrc":"15736:1:17","nodeType":"YulIdentifier","src":"15736:1:17"}],"functionName":{"name":"mstore","nativeSrc":"15713:6:17","nodeType":"YulIdentifier","src":"15713:6:17"},"nativeSrc":"15713:25:17","nodeType":"YulFunctionCall","src":"15713:25:17"},"nativeSrc":"15713:25:17","nodeType":"YulExpressionStatement","src":"15713:25:17"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15762:3:17","nodeType":"YulIdentifier","src":"15762:3:17"},{"kind":"number","nativeSrc":"15767:4:17","nodeType":"YulLiteral","src":"15767:4:17","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"15758:3:17","nodeType":"YulIdentifier","src":"15758:3:17"},"nativeSrc":"15758:14:17","nodeType":"YulFunctionCall","src":"15758:14:17"},{"name":"m","nativeSrc":"15774:1:17","nodeType":"YulIdentifier","src":"15774:1:17"}],"functionName":{"name":"mstore","nativeSrc":"15751:6:17","nodeType":"YulIdentifier","src":"15751:6:17"},"nativeSrc":"15751:25:17","nodeType":"YulFunctionCall","src":"15751:25:17"},"nativeSrc":"15751:25:17","nodeType":"YulExpressionStatement","src":"15751:25:17"},{"nativeSrc":"15938:57:17","nodeType":"YulAssignment","src":"15938:57:17","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"15960:3:17","nodeType":"YulIdentifier","src":"15960:3:17"},"nativeSrc":"15960:5:17","nodeType":"YulFunctionCall","src":"15960:5:17"},{"kind":"number","nativeSrc":"15967:4:17","nodeType":"YulLiteral","src":"15967:4:17","type":"","value":"0x05"},{"name":"ptr","nativeSrc":"15973:3:17","nodeType":"YulIdentifier","src":"15973:3:17"},{"kind":"number","nativeSrc":"15978:4:17","nodeType":"YulLiteral","src":"15978:4:17","type":"","value":"0xc0"},{"kind":"number","nativeSrc":"15984:4:17","nodeType":"YulLiteral","src":"15984:4:17","type":"","value":"0x00"},{"kind":"number","nativeSrc":"15990:4:17","nodeType":"YulLiteral","src":"15990:4:17","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nativeSrc":"15949:10:17","nodeType":"YulIdentifier","src":"15949:10:17"},"nativeSrc":"15949:46:17","nodeType":"YulFunctionCall","src":"15949:46:17"},"variableNames":[{"name":"success","nativeSrc":"15938:7:17","nodeType":"YulIdentifier","src":"15938:7:17"}]},{"nativeSrc":"16008:21:17","nodeType":"YulAssignment","src":"16008:21:17","value":{"arguments":[{"kind":"number","nativeSrc":"16024:4:17","nodeType":"YulLiteral","src":"16024:4:17","type":"","value":"0x00"}],"functionName":{"name":"mload","nativeSrc":"16018:5:17","nodeType":"YulIdentifier","src":"16018:5:17"},"nativeSrc":"16018:11:17","nodeType":"YulFunctionCall","src":"16018:11:17"},"variableNames":[{"name":"result","nativeSrc":"16008:6:17","nodeType":"YulIdentifier","src":"16008:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4088,"isOffset":false,"isSlot":false,"src":"15698:1:17","valueSize":1},{"declaration":4090,"isOffset":false,"isSlot":false,"src":"15736:1:17","valueSize":1},{"declaration":4092,"isOffset":false,"isSlot":false,"src":"15774:1:17","valueSize":1},{"declaration":4097,"isOffset":false,"isSlot":false,"src":"16008:6:17","valueSize":1},{"declaration":4095,"isOffset":false,"isSlot":false,"src":"15938:7:17","valueSize":1}],"flags":["memory-safe"],"id":4107,"nodeType":"InlineAssembly","src":"14601:1438:17"}]},"documentation":{"id":4086,"nodeType":"StructuredDocumentation","src":"13704:738:17","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":4109,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"14456:9:17","nodeType":"FunctionDefinition","parameters":{"id":4093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4088,"mutability":"mutable","name":"b","nameLocation":"14474:1:17","nodeType":"VariableDeclaration","scope":4109,"src":"14466:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4087,"name":"uint256","nodeType":"ElementaryTypeName","src":"14466:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4090,"mutability":"mutable","name":"e","nameLocation":"14485:1:17","nodeType":"VariableDeclaration","scope":4109,"src":"14477:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4089,"name":"uint256","nodeType":"ElementaryTypeName","src":"14477:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4092,"mutability":"mutable","name":"m","nameLocation":"14496:1:17","nodeType":"VariableDeclaration","scope":4109,"src":"14488:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4091,"name":"uint256","nodeType":"ElementaryTypeName","src":"14488:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14465:33:17"},"returnParameters":{"id":4098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4095,"mutability":"mutable","name":"success","nameLocation":"14527:7:17","nodeType":"VariableDeclaration","scope":4109,"src":"14522:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4094,"name":"bool","nodeType":"ElementaryTypeName","src":"14522:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4097,"mutability":"mutable","name":"result","nameLocation":"14544:6:17","nodeType":"VariableDeclaration","scope":4109,"src":"14536:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4096,"name":"uint256","nodeType":"ElementaryTypeName","src":"14536:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14521:30:17"},"scope":5064,"src":"14447:1598:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4144,"nodeType":"Block","src":"16242:179:17","statements":[{"assignments":[4122,4124],"declarations":[{"constant":false,"id":4122,"mutability":"mutable","name":"success","nameLocation":"16258:7:17","nodeType":"VariableDeclaration","scope":4144,"src":"16253:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4121,"name":"bool","nodeType":"ElementaryTypeName","src":"16253:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4124,"mutability":"mutable","name":"result","nameLocation":"16280:6:17","nodeType":"VariableDeclaration","scope":4144,"src":"16267:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4123,"name":"bytes","nodeType":"ElementaryTypeName","src":"16267:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4130,"initialValue":{"arguments":[{"id":4126,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4112,"src":"16300:1:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4127,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4114,"src":"16303:1:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4128,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4116,"src":"16306:1:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4125,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4109,4191],"referencedDeclaration":4191,"src":"16290:9:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":4129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16290:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"16252:56:17"},{"condition":{"id":4132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16322:8:17","subExpression":{"id":4131,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4122,"src":"16323:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4141,"nodeType":"IfStatement","src":"16318:74:17","trueBody":{"id":4140,"nodeType":"Block","src":"16332:60:17","statements":[{"expression":{"arguments":[{"expression":{"id":4136,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1268,"src":"16358:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1268_$","typeString":"type(library Panic)"}},"id":4137,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16364:16:17","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1235,"src":"16358:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4133,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1268,"src":"16346:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1268_$","typeString":"type(library Panic)"}},"id":4135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16352:5:17","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1267,"src":"16346:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16346:35:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4139,"nodeType":"ExpressionStatement","src":"16346:35:17"}]}},{"expression":{"id":4142,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4124,"src":"16408:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4120,"id":4143,"nodeType":"Return","src":"16401:13:17"}]},"documentation":{"id":4110,"nodeType":"StructuredDocumentation","src":"16051:85:17","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":4145,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"16150:6:17","nodeType":"FunctionDefinition","parameters":{"id":4117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4112,"mutability":"mutable","name":"b","nameLocation":"16170:1:17","nodeType":"VariableDeclaration","scope":4145,"src":"16157:14:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4111,"name":"bytes","nodeType":"ElementaryTypeName","src":"16157:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4114,"mutability":"mutable","name":"e","nameLocation":"16186:1:17","nodeType":"VariableDeclaration","scope":4145,"src":"16173:14:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4113,"name":"bytes","nodeType":"ElementaryTypeName","src":"16173:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4116,"mutability":"mutable","name":"m","nameLocation":"16202:1:17","nodeType":"VariableDeclaration","scope":4145,"src":"16189:14:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4115,"name":"bytes","nodeType":"ElementaryTypeName","src":"16189:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16156:48:17"},"returnParameters":{"id":4120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4119,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4145,"src":"16228:12:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4118,"name":"bytes","nodeType":"ElementaryTypeName","src":"16228:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16227:14:17"},"scope":5064,"src":"16141:280:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4190,"nodeType":"Block","src":"16675:771:17","statements":[{"condition":{"arguments":[{"id":4160,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4152,"src":"16700:1:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4159,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4224,"src":"16689:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":4161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16689:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4169,"nodeType":"IfStatement","src":"16685:47:17","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16712:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":4165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16729:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4164,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"16719:9:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4163,"name":"bytes","nodeType":"ElementaryTypeName","src":"16723:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":4166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16719:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":4167,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16711:21:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":4158,"id":4168,"nodeType":"Return","src":"16704:28:17"}},{"assignments":[4171],"declarations":[{"constant":false,"id":4171,"mutability":"mutable","name":"mLen","nameLocation":"16751:4:17","nodeType":"VariableDeclaration","scope":4190,"src":"16743:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4170,"name":"uint256","nodeType":"ElementaryTypeName","src":"16743:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4174,"initialValue":{"expression":{"id":4172,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4152,"src":"16758:1:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16760:6:17","memberName":"length","nodeType":"MemberAccess","src":"16758:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16743:23:17"},{"expression":{"id":4187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4175,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4157,"src":"16848:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":4178,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"16874:1:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16876:6:17","memberName":"length","nodeType":"MemberAccess","src":"16874:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4180,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4150,"src":"16884:1:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16886:6:17","memberName":"length","nodeType":"MemberAccess","src":"16884:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4182,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4171,"src":"16894:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4183,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"16900:1:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4184,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4150,"src":"16903:1:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4185,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4152,"src":"16906:1:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4176,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"16857:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4177,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16861:12:17","memberName":"encodePacked","nodeType":"MemberAccess","src":"16857:16:17","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16857:51:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"16848:60:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4188,"nodeType":"ExpressionStatement","src":"16848:60:17"},{"AST":{"nativeSrc":"16944:496:17","nodeType":"YulBlock","src":"16944:496:17","statements":[{"nativeSrc":"16958:32:17","nodeType":"YulVariableDeclaration","src":"16958:32:17","value":{"arguments":[{"name":"result","nativeSrc":"16977:6:17","nodeType":"YulIdentifier","src":"16977:6:17"},{"kind":"number","nativeSrc":"16985:4:17","nodeType":"YulLiteral","src":"16985:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"16973:3:17","nodeType":"YulIdentifier","src":"16973:3:17"},"nativeSrc":"16973:17:17","nodeType":"YulFunctionCall","src":"16973:17:17"},"variables":[{"name":"dataPtr","nativeSrc":"16962:7:17","nodeType":"YulTypedName","src":"16962:7:17","type":""}]},{"nativeSrc":"17080:73:17","nodeType":"YulAssignment","src":"17080:73:17","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"17102:3:17","nodeType":"YulIdentifier","src":"17102:3:17"},"nativeSrc":"17102:5:17","nodeType":"YulFunctionCall","src":"17102:5:17"},{"kind":"number","nativeSrc":"17109:4:17","nodeType":"YulLiteral","src":"17109:4:17","type":"","value":"0x05"},{"name":"dataPtr","nativeSrc":"17115:7:17","nodeType":"YulIdentifier","src":"17115:7:17"},{"arguments":[{"name":"result","nativeSrc":"17130:6:17","nodeType":"YulIdentifier","src":"17130:6:17"}],"functionName":{"name":"mload","nativeSrc":"17124:5:17","nodeType":"YulIdentifier","src":"17124:5:17"},"nativeSrc":"17124:13:17","nodeType":"YulFunctionCall","src":"17124:13:17"},{"name":"dataPtr","nativeSrc":"17139:7:17","nodeType":"YulIdentifier","src":"17139:7:17"},{"name":"mLen","nativeSrc":"17148:4:17","nodeType":"YulIdentifier","src":"17148:4:17"}],"functionName":{"name":"staticcall","nativeSrc":"17091:10:17","nodeType":"YulIdentifier","src":"17091:10:17"},"nativeSrc":"17091:62:17","nodeType":"YulFunctionCall","src":"17091:62:17"},"variableNames":[{"name":"success","nativeSrc":"17080:7:17","nodeType":"YulIdentifier","src":"17080:7:17"}]},{"expression":{"arguments":[{"name":"result","nativeSrc":"17309:6:17","nodeType":"YulIdentifier","src":"17309:6:17"},{"name":"mLen","nativeSrc":"17317:4:17","nodeType":"YulIdentifier","src":"17317:4:17"}],"functionName":{"name":"mstore","nativeSrc":"17302:6:17","nodeType":"YulIdentifier","src":"17302:6:17"},"nativeSrc":"17302:20:17","nodeType":"YulFunctionCall","src":"17302:20:17"},"nativeSrc":"17302:20:17","nodeType":"YulExpressionStatement","src":"17302:20:17"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"17405:4:17","nodeType":"YulLiteral","src":"17405:4:17","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nativeSrc":"17415:7:17","nodeType":"YulIdentifier","src":"17415:7:17"},{"name":"mLen","nativeSrc":"17424:4:17","nodeType":"YulIdentifier","src":"17424:4:17"}],"functionName":{"name":"add","nativeSrc":"17411:3:17","nodeType":"YulIdentifier","src":"17411:3:17"},"nativeSrc":"17411:18:17","nodeType":"YulFunctionCall","src":"17411:18:17"}],"functionName":{"name":"mstore","nativeSrc":"17398:6:17","nodeType":"YulIdentifier","src":"17398:6:17"},"nativeSrc":"17398:32:17","nodeType":"YulFunctionCall","src":"17398:32:17"},"nativeSrc":"17398:32:17","nodeType":"YulExpressionStatement","src":"17398:32:17"}]},"evmVersion":"paris","externalReferences":[{"declaration":4171,"isOffset":false,"isSlot":false,"src":"17148:4:17","valueSize":1},{"declaration":4171,"isOffset":false,"isSlot":false,"src":"17317:4:17","valueSize":1},{"declaration":4171,"isOffset":false,"isSlot":false,"src":"17424:4:17","valueSize":1},{"declaration":4157,"isOffset":false,"isSlot":false,"src":"16977:6:17","valueSize":1},{"declaration":4157,"isOffset":false,"isSlot":false,"src":"17130:6:17","valueSize":1},{"declaration":4157,"isOffset":false,"isSlot":false,"src":"17309:6:17","valueSize":1},{"declaration":4155,"isOffset":false,"isSlot":false,"src":"17080:7:17","valueSize":1}],"flags":["memory-safe"],"id":4189,"nodeType":"InlineAssembly","src":"16919:521:17"}]},"documentation":{"id":4146,"nodeType":"StructuredDocumentation","src":"16427:88:17","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":4191,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16529:9:17","nodeType":"FunctionDefinition","parameters":{"id":4153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4148,"mutability":"mutable","name":"b","nameLocation":"16561:1:17","nodeType":"VariableDeclaration","scope":4191,"src":"16548:14:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4147,"name":"bytes","nodeType":"ElementaryTypeName","src":"16548:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4150,"mutability":"mutable","name":"e","nameLocation":"16585:1:17","nodeType":"VariableDeclaration","scope":4191,"src":"16572:14:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4149,"name":"bytes","nodeType":"ElementaryTypeName","src":"16572:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4152,"mutability":"mutable","name":"m","nameLocation":"16609:1:17","nodeType":"VariableDeclaration","scope":4191,"src":"16596:14:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4151,"name":"bytes","nodeType":"ElementaryTypeName","src":"16596:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16538:78:17"},"returnParameters":{"id":4158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4155,"mutability":"mutable","name":"success","nameLocation":"16645:7:17","nodeType":"VariableDeclaration","scope":4191,"src":"16640:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4154,"name":"bool","nodeType":"ElementaryTypeName","src":"16640:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4157,"mutability":"mutable","name":"result","nameLocation":"16667:6:17","nodeType":"VariableDeclaration","scope":4191,"src":"16654:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4156,"name":"bytes","nodeType":"ElementaryTypeName","src":"16654:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16639:35:17"},"scope":5064,"src":"16520:926:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4223,"nodeType":"Block","src":"17601:176:17","statements":[{"body":{"id":4219,"nodeType":"Block","src":"17658:92:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4210,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4194,"src":"17676:9:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4212,"indexExpression":{"id":4211,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4200,"src":"17686:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17676:12:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17692:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17676:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4218,"nodeType":"IfStatement","src":"17672:68:17","trueBody":{"id":4217,"nodeType":"Block","src":"17695:45:17","statements":[{"expression":{"hexValue":"66616c7365","id":4215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17720:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":4198,"id":4216,"nodeType":"Return","src":"17713:12:17"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4203,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4200,"src":"17631:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4204,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4194,"src":"17635:9:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17645:6:17","memberName":"length","nodeType":"MemberAccess","src":"17635:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17631:20:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4220,"initializationExpression":{"assignments":[4200],"declarations":[{"constant":false,"id":4200,"mutability":"mutable","name":"i","nameLocation":"17624:1:17","nodeType":"VariableDeclaration","scope":4220,"src":"17616:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4199,"name":"uint256","nodeType":"ElementaryTypeName","src":"17616:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4202,"initialValue":{"hexValue":"30","id":4201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17628:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17616:13:17"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17653:3:17","subExpression":{"id":4207,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4200,"src":"17655:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4209,"nodeType":"ExpressionStatement","src":"17653:3:17"},"nodeType":"ForStatement","src":"17611:139:17"},{"expression":{"hexValue":"74727565","id":4221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17766:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4198,"id":4222,"nodeType":"Return","src":"17759:11:17"}]},"documentation":{"id":4192,"nodeType":"StructuredDocumentation","src":"17452:72:17","text":" @dev Returns whether the provided byte array is zero."},"id":4224,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"17538:10:17","nodeType":"FunctionDefinition","parameters":{"id":4195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4194,"mutability":"mutable","name":"byteArray","nameLocation":"17562:9:17","nodeType":"VariableDeclaration","scope":4224,"src":"17549:22:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4193,"name":"bytes","nodeType":"ElementaryTypeName","src":"17549:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"17548:24:17"},"returnParameters":{"id":4198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4197,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4224,"src":"17595:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4196,"name":"bool","nodeType":"ElementaryTypeName","src":"17595:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17594:6:17"},"scope":5064,"src":"17529:248:17","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4442,"nodeType":"Block","src":"18137:5124:17","statements":[{"id":4441,"nodeType":"UncheckedBlock","src":"18147:5108:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4232,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4227,"src":"18241:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":4233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18246:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18241:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4238,"nodeType":"IfStatement","src":"18237:53:17","trueBody":{"id":4237,"nodeType":"Block","src":"18249:41:17","statements":[{"expression":{"id":4235,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4227,"src":"18274:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4231,"id":4236,"nodeType":"Return","src":"18267:8:17"}]}},{"assignments":[4240],"declarations":[{"constant":false,"id":4240,"mutability":"mutable","name":"aa","nameLocation":"19225:2:17","nodeType":"VariableDeclaration","scope":4441,"src":"19217:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4239,"name":"uint256","nodeType":"ElementaryTypeName","src":"19217:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4242,"initialValue":{"id":4241,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4227,"src":"19230:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19217:14:17"},{"assignments":[4244],"declarations":[{"constant":false,"id":4244,"mutability":"mutable","name":"xn","nameLocation":"19253:2:17","nodeType":"VariableDeclaration","scope":4441,"src":"19245:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4243,"name":"uint256","nodeType":"ElementaryTypeName","src":"19245:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4246,"initialValue":{"hexValue":"31","id":4245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19258:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"19245:14:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4247,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4240,"src":"19278:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":4250,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19285:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":4249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19290:3:17","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19285:8:17","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":4251,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19284:10:17","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"19278:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4262,"nodeType":"IfStatement","src":"19274:92:17","trueBody":{"id":4261,"nodeType":"Block","src":"19296:70:17","statements":[{"expression":{"id":4255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4253,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4240,"src":"19314:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":4254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19321:3:17","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19314:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4256,"nodeType":"ExpressionStatement","src":"19314:10:17"},{"expression":{"id":4259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4257,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"19342:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":4258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19349:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19342:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4260,"nodeType":"ExpressionStatement","src":"19342:9:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4263,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4240,"src":"19383:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":4266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19390:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":4265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19395:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19390:7:17","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":4267,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19389:9:17","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"19383:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4278,"nodeType":"IfStatement","src":"19379:90:17","trueBody":{"id":4277,"nodeType":"Block","src":"19400:69:17","statements":[{"expression":{"id":4271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4269,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4240,"src":"19418:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19425:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19418:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4272,"nodeType":"ExpressionStatement","src":"19418:9:17"},{"expression":{"id":4275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4273,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"19445:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":4274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19452:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19445:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4276,"nodeType":"ExpressionStatement","src":"19445:9:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4279,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4240,"src":"19486:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":4282,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19493:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":4281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19498:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19493:7:17","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":4283,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19492:9:17","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"19486:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4294,"nodeType":"IfStatement","src":"19482:90:17","trueBody":{"id":4293,"nodeType":"Block","src":"19503:69:17","statements":[{"expression":{"id":4287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4285,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4240,"src":"19521:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19528:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19521:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4288,"nodeType":"ExpressionStatement","src":"19521:9:17"},{"expression":{"id":4291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4289,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"19548:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":4290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19555:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19548:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4292,"nodeType":"ExpressionStatement","src":"19548:9:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4295,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4240,"src":"19589:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":4298,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19596:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":4297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19601:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19596:7:17","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":4299,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19595:9:17","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"19589:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4310,"nodeType":"IfStatement","src":"19585:89:17","trueBody":{"id":4309,"nodeType":"Block","src":"19606:68:17","statements":[{"expression":{"id":4303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4301,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4240,"src":"19624:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19631:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19624:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4304,"nodeType":"ExpressionStatement","src":"19624:9:17"},{"expression":{"id":4307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4305,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"19651:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":4306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19658:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19651:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4308,"nodeType":"ExpressionStatement","src":"19651:8:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4311,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4240,"src":"19691:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":4314,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19698:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":4313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19703:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19698:6:17","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":4315,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19697:8:17","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"19691:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4326,"nodeType":"IfStatement","src":"19687:87:17","trueBody":{"id":4325,"nodeType":"Block","src":"19707:67:17","statements":[{"expression":{"id":4319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4317,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4240,"src":"19725:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":4318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19732:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19725:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4320,"nodeType":"ExpressionStatement","src":"19725:8:17"},{"expression":{"id":4323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4321,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"19751:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":4322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19758:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19751:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4324,"nodeType":"ExpressionStatement","src":"19751:8:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4327,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4240,"src":"19791:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":4330,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19798:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19803:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19798:6:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":4331,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19797:8:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"19791:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4342,"nodeType":"IfStatement","src":"19787:87:17","trueBody":{"id":4341,"nodeType":"Block","src":"19807:67:17","statements":[{"expression":{"id":4335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4333,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4240,"src":"19825:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19832:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19825:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4336,"nodeType":"ExpressionStatement","src":"19825:8:17"},{"expression":{"id":4339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4337,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"19851:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":4338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19858:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19851:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4340,"nodeType":"ExpressionStatement","src":"19851:8:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4343,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4240,"src":"19891:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":4346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19898:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19903:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19898:6:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":4347,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19897:8:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"19891:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4354,"nodeType":"IfStatement","src":"19887:61:17","trueBody":{"id":4353,"nodeType":"Block","src":"19907:41:17","statements":[{"expression":{"id":4351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4349,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"19925:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":4350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19932:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"19925:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4352,"nodeType":"ExpressionStatement","src":"19925:8:17"}]}},{"expression":{"id":4362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4355,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"20368:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20374:1:17","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4357,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"20378:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20374:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4359,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20373:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20385:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20373:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20368:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4363,"nodeType":"ExpressionStatement","src":"20368:18:17"},{"expression":{"id":4373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4364,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"22273:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4365,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"22279:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4366,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4227,"src":"22284:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4367,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"22288:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22284:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22279:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4370,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22278:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22295:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22278:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22273:23:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4374,"nodeType":"ExpressionStatement","src":"22273:23:17"},{"expression":{"id":4384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4375,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"22382:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4376,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"22388:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4377,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4227,"src":"22393:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4378,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"22397:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22393:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22388:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4381,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22387:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22404:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22387:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22382:23:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4385,"nodeType":"ExpressionStatement","src":"22382:23:17"},{"expression":{"id":4395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4386,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"22493:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4387,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"22499:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4388,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4227,"src":"22504:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4389,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"22508:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22504:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22499:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4392,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22498:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22515:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22498:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22493:23:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4396,"nodeType":"ExpressionStatement","src":"22493:23:17"},{"expression":{"id":4406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4397,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"22602:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4398,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"22608:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4399,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4227,"src":"22613:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4400,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"22617:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22613:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22608:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4403,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22607:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22624:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22607:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22602:23:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4407,"nodeType":"ExpressionStatement","src":"22602:23:17"},{"expression":{"id":4417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4408,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"22712:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4409,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"22718:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4410,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4227,"src":"22723:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4411,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"22727:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22723:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22718:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4414,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22717:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22734:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22717:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22712:23:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4418,"nodeType":"ExpressionStatement","src":"22712:23:17"},{"expression":{"id":4428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4419,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"22822:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4420,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"22828:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4421,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4227,"src":"22833:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4422,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"22837:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22833:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22828:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4425,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22827:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22844:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22827:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22822:23:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4429,"nodeType":"ExpressionStatement","src":"22822:23:17"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4430,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"23211:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4433,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"23232:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4434,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4227,"src":"23237:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4435,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"23241:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23237:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23232:11:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4431,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"23216:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6829_$","typeString":"type(library SafeCast)"}},"id":4432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23225:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6828,"src":"23216:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23216:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23211:33:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4231,"id":4440,"nodeType":"Return","src":"23204:40:17"}]}]},"documentation":{"id":4225,"nodeType":"StructuredDocumentation","src":"17783:292:17","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":4443,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"18089:4:17","nodeType":"FunctionDefinition","parameters":{"id":4228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4227,"mutability":"mutable","name":"a","nameLocation":"18102:1:17","nodeType":"VariableDeclaration","scope":4443,"src":"18094:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4226,"name":"uint256","nodeType":"ElementaryTypeName","src":"18094:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18093:11:17"},"returnParameters":{"id":4231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4230,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4443,"src":"18128:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4229,"name":"uint256","nodeType":"ElementaryTypeName","src":"18128:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18127:9:17"},"scope":5064,"src":"18080:5181:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4476,"nodeType":"Block","src":"23434:171:17","statements":[{"id":4475,"nodeType":"UncheckedBlock","src":"23444:155:17","statements":[{"assignments":[4455],"declarations":[{"constant":false,"id":4455,"mutability":"mutable","name":"result","nameLocation":"23476:6:17","nodeType":"VariableDeclaration","scope":4475,"src":"23468:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4454,"name":"uint256","nodeType":"ElementaryTypeName","src":"23468:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4459,"initialValue":{"arguments":[{"id":4457,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4446,"src":"23490:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4456,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[4443,4477],"referencedDeclaration":4443,"src":"23485:4:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23485:7:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23468:24:17"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4460,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4455,"src":"23513:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4464,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4449,"src":"23555:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3470","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3470","typeString":"enum Math.Rounding"}],"id":4463,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5063,"src":"23538:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3470_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23538:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4466,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4455,"src":"23568:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4467,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4455,"src":"23577:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4469,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4446,"src":"23586:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"23538:49:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4461,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"23522:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6829_$","typeString":"type(library SafeCast)"}},"id":4462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23531:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6828,"src":"23522:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23522:66:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23513:75:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4453,"id":4474,"nodeType":"Return","src":"23506:82:17"}]}]},"documentation":{"id":4444,"nodeType":"StructuredDocumentation","src":"23267:86:17","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":4477,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"23367:4:17","nodeType":"FunctionDefinition","parameters":{"id":4450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4446,"mutability":"mutable","name":"a","nameLocation":"23380:1:17","nodeType":"VariableDeclaration","scope":4477,"src":"23372:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4445,"name":"uint256","nodeType":"ElementaryTypeName","src":"23372:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4449,"mutability":"mutable","name":"rounding","nameLocation":"23392:8:17","nodeType":"VariableDeclaration","scope":4477,"src":"23383:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3470","typeString":"enum Math.Rounding"},"typeName":{"id":4448,"nodeType":"UserDefinedTypeName","pathNode":{"id":4447,"name":"Rounding","nameLocations":["23383:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":3470,"src":"23383:8:17"},"referencedDeclaration":3470,"src":"23383:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3470","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"23371:30:17"},"returnParameters":{"id":4453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4452,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4477,"src":"23425:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4451,"name":"uint256","nodeType":"ElementaryTypeName","src":"23425:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23424:9:17"},"scope":5064,"src":"23358:247:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4672,"nodeType":"Block","src":"23796:981:17","statements":[{"assignments":[4486],"declarations":[{"constant":false,"id":4486,"mutability":"mutable","name":"result","nameLocation":"23814:6:17","nodeType":"VariableDeclaration","scope":4672,"src":"23806:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4485,"name":"uint256","nodeType":"ElementaryTypeName","src":"23806:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4488,"initialValue":{"hexValue":"30","id":4487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23823:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23806:18:17"},{"assignments":[4490],"declarations":[{"constant":false,"id":4490,"mutability":"mutable","name":"exp","nameLocation":"23842:3:17","nodeType":"VariableDeclaration","scope":4672,"src":"23834:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4489,"name":"uint256","nodeType":"ElementaryTypeName","src":"23834:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4491,"nodeType":"VariableDeclarationStatement","src":"23834:11:17"},{"id":4669,"nodeType":"UncheckedBlock","src":"23855:893:17","statements":[{"expression":{"id":4506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4492,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"23879:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"313238","id":4493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23885:3:17","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4496,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4480,"src":"23907:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":4502,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":4499,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23916:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":4498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23921:3:17","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"23916:8:17","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":4500,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"23915:10:17","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23928:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"23915:14:17","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"23907:22:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4494,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"23891:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6829_$","typeString":"type(library SafeCast)"}},"id":4495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23900:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6828,"src":"23891:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23891:39:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23885:45:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23879:51:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4507,"nodeType":"ExpressionStatement","src":"23879:51:17"},{"expression":{"id":4510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4508,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4480,"src":"23944:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4509,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"23954:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23944:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4511,"nodeType":"ExpressionStatement","src":"23944:13:17"},{"expression":{"id":4514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4512,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4486,"src":"23971:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4513,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"23981:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23971:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4515,"nodeType":"ExpressionStatement","src":"23971:13:17"},{"expression":{"id":4530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4516,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"23999:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3634","id":4517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24005:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4520,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4480,"src":"24026:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":4526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":4523,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24035:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":4522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24040:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"24035:7:17","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":4524,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24034:9:17","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24046:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24034:13:17","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"24026:21:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4518,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"24010:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6829_$","typeString":"type(library SafeCast)"}},"id":4519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24019:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6828,"src":"24010:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24010:38:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24005:43:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23999:49:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4531,"nodeType":"ExpressionStatement","src":"23999:49:17"},{"expression":{"id":4534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4532,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4480,"src":"24062:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4533,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"24072:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24062:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4535,"nodeType":"ExpressionStatement","src":"24062:13:17"},{"expression":{"id":4538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4536,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4486,"src":"24089:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4537,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"24099:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24089:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4539,"nodeType":"ExpressionStatement","src":"24089:13:17"},{"expression":{"id":4554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4540,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"24117:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":4541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24123:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4544,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4480,"src":"24144:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":4550,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":4547,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24153:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":4546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24158:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"24153:7:17","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":4548,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24152:9:17","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24164:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24152:13:17","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"24144:21:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4542,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"24128:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6829_$","typeString":"type(library SafeCast)"}},"id":4543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24137:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6828,"src":"24128:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24128:38:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24123:43:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24117:49:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4555,"nodeType":"ExpressionStatement","src":"24117:49:17"},{"expression":{"id":4558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4556,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4480,"src":"24180:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4557,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"24190:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24180:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4559,"nodeType":"ExpressionStatement","src":"24180:13:17"},{"expression":{"id":4562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4560,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4486,"src":"24207:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4561,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"24217:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24207:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4563,"nodeType":"ExpressionStatement","src":"24207:13:17"},{"expression":{"id":4578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4564,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"24235:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3136","id":4565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24241:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4568,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4480,"src":"24262:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":4574,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":4571,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24271:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":4570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24276:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"24271:7:17","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":4572,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24270:9:17","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24282:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24270:13:17","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"24262:21:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4566,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"24246:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6829_$","typeString":"type(library SafeCast)"}},"id":4567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24255:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6828,"src":"24246:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24246:38:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24241:43:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24235:49:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4579,"nodeType":"ExpressionStatement","src":"24235:49:17"},{"expression":{"id":4582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4580,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4480,"src":"24298:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4581,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"24308:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24298:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4583,"nodeType":"ExpressionStatement","src":"24298:13:17"},{"expression":{"id":4586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4584,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4486,"src":"24325:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4585,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"24335:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24325:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4587,"nodeType":"ExpressionStatement","src":"24325:13:17"},{"expression":{"id":4602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4588,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"24353:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"38","id":4589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24359:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4592,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4480,"src":"24379:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":4598,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":4595,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24388:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":4594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24393:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"24388:6:17","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":4596,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24387:8:17","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24398:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24387:12:17","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"24379:20:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4590,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"24363:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6829_$","typeString":"type(library SafeCast)"}},"id":4591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24372:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6828,"src":"24363:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24363:37:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24359:41:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24353:47:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4603,"nodeType":"ExpressionStatement","src":"24353:47:17"},{"expression":{"id":4606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4604,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4480,"src":"24414:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4605,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"24424:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24414:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4607,"nodeType":"ExpressionStatement","src":"24414:13:17"},{"expression":{"id":4610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4608,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4486,"src":"24441:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4609,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"24451:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24441:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4611,"nodeType":"ExpressionStatement","src":"24441:13:17"},{"expression":{"id":4626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4612,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"24469:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"34","id":4613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24475:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4616,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4480,"src":"24495:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"id":4622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":4619,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24504:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24509:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"24504:6:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":4620,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24503:8:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24514:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24503:12:17","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"}},"src":"24495:20:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4614,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"24479:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6829_$","typeString":"type(library SafeCast)"}},"id":4615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24488:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6828,"src":"24479:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24479:37:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24475:41:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24469:47:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4627,"nodeType":"ExpressionStatement","src":"24469:47:17"},{"expression":{"id":4630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4628,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4480,"src":"24530:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4629,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"24540:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24530:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4631,"nodeType":"ExpressionStatement","src":"24530:13:17"},{"expression":{"id":4634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4632,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4486,"src":"24557:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4633,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"24567:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24557:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4635,"nodeType":"ExpressionStatement","src":"24557:13:17"},{"expression":{"id":4650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4636,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"24585:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24591:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4640,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4480,"src":"24611:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"id":4646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":4643,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24620:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24625:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"24620:6:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":4644,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24619:8:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24630:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24619:12:17","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"}},"src":"24611:20:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4638,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"24595:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6829_$","typeString":"type(library SafeCast)"}},"id":4639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24604:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6828,"src":"24595:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24595:37:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24591:41:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24585:47:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4651,"nodeType":"ExpressionStatement","src":"24585:47:17"},{"expression":{"id":4654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4652,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4480,"src":"24646:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4653,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"24656:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24646:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4655,"nodeType":"ExpressionStatement","src":"24646:13:17"},{"expression":{"id":4658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4656,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4486,"src":"24673:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4657,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"24683:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24673:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4659,"nodeType":"ExpressionStatement","src":"24673:13:17"},{"expression":{"id":4667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4660,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4486,"src":"24701:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4663,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4480,"src":"24727:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":4664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24735:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24727:9:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4661,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"24711:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6829_$","typeString":"type(library SafeCast)"}},"id":4662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24720:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6828,"src":"24711:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24711:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24701:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4668,"nodeType":"ExpressionStatement","src":"24701:36:17"}]},{"expression":{"id":4670,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4486,"src":"24764:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4484,"id":4671,"nodeType":"Return","src":"24757:13:17"}]},"documentation":{"id":4478,"nodeType":"StructuredDocumentation","src":"23611:119:17","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4673,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"23744:4:17","nodeType":"FunctionDefinition","parameters":{"id":4481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4480,"mutability":"mutable","name":"value","nameLocation":"23757:5:17","nodeType":"VariableDeclaration","scope":4673,"src":"23749:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4479,"name":"uint256","nodeType":"ElementaryTypeName","src":"23749:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23748:15:17"},"returnParameters":{"id":4484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4483,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4673,"src":"23787:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4482,"name":"uint256","nodeType":"ElementaryTypeName","src":"23787:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23786:9:17"},"scope":5064,"src":"23735:1042:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4706,"nodeType":"Block","src":"25010:175:17","statements":[{"id":4705,"nodeType":"UncheckedBlock","src":"25020:159:17","statements":[{"assignments":[4685],"declarations":[{"constant":false,"id":4685,"mutability":"mutable","name":"result","nameLocation":"25052:6:17","nodeType":"VariableDeclaration","scope":4705,"src":"25044:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4684,"name":"uint256","nodeType":"ElementaryTypeName","src":"25044:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4689,"initialValue":{"arguments":[{"id":4687,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4676,"src":"25066:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4686,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4673,4707],"referencedDeclaration":4673,"src":"25061:4:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25061:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25044:28:17"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4690,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4685,"src":"25093:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4694,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4679,"src":"25135:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3470","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3470","typeString":"enum Math.Rounding"}],"id":4693,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5063,"src":"25118:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3470_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25118:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25148:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4697,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4685,"src":"25153:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4699,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4676,"src":"25162:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"25118:49:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4691,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"25102:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6829_$","typeString":"type(library SafeCast)"}},"id":4692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25111:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6828,"src":"25102:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25102:66:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25093:75:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4683,"id":4704,"nodeType":"Return","src":"25086:82:17"}]}]},"documentation":{"id":4674,"nodeType":"StructuredDocumentation","src":"24783:142:17","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4707,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"24939:4:17","nodeType":"FunctionDefinition","parameters":{"id":4680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4676,"mutability":"mutable","name":"value","nameLocation":"24952:5:17","nodeType":"VariableDeclaration","scope":4707,"src":"24944:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4675,"name":"uint256","nodeType":"ElementaryTypeName","src":"24944:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4679,"mutability":"mutable","name":"rounding","nameLocation":"24968:8:17","nodeType":"VariableDeclaration","scope":4707,"src":"24959:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3470","typeString":"enum Math.Rounding"},"typeName":{"id":4678,"nodeType":"UserDefinedTypeName","pathNode":{"id":4677,"name":"Rounding","nameLocations":["24959:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":3470,"src":"24959:8:17"},"referencedDeclaration":3470,"src":"24959:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3470","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"24943:34:17"},"returnParameters":{"id":4683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4682,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4707,"src":"25001:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4681,"name":"uint256","nodeType":"ElementaryTypeName","src":"25001:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25000:9:17"},"scope":5064,"src":"24930:255:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4835,"nodeType":"Block","src":"25378:854:17","statements":[{"assignments":[4716],"declarations":[{"constant":false,"id":4716,"mutability":"mutable","name":"result","nameLocation":"25396:6:17","nodeType":"VariableDeclaration","scope":4835,"src":"25388:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4715,"name":"uint256","nodeType":"ElementaryTypeName","src":"25388:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4718,"initialValue":{"hexValue":"30","id":4717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25405:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"25388:18:17"},{"id":4832,"nodeType":"UncheckedBlock","src":"25416:787:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4719,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4710,"src":"25444:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4722,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25453:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25459:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25453:8:17","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25444:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4735,"nodeType":"IfStatement","src":"25440:103:17","trueBody":{"id":4734,"nodeType":"Block","src":"25463:80:17","statements":[{"expression":{"id":4728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4724,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4710,"src":"25481:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4727,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25490:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25496:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25490:8:17","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25481:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4729,"nodeType":"ExpressionStatement","src":"25481:17:17"},{"expression":{"id":4732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4730,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4716,"src":"25516:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25526:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25516:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4733,"nodeType":"ExpressionStatement","src":"25516:12:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4736,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4710,"src":"25560:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4739,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25569:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25575:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25569:8:17","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25560:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4752,"nodeType":"IfStatement","src":"25556:103:17","trueBody":{"id":4751,"nodeType":"Block","src":"25579:80:17","statements":[{"expression":{"id":4745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4741,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4710,"src":"25597:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4744,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25606:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25612:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25606:8:17","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25597:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4746,"nodeType":"ExpressionStatement","src":"25597:17:17"},{"expression":{"id":4749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4747,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4716,"src":"25632:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25642:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25632:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4750,"nodeType":"ExpressionStatement","src":"25632:12:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4753,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4710,"src":"25676:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4756,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25685:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25691:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25685:8:17","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25676:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4769,"nodeType":"IfStatement","src":"25672:103:17","trueBody":{"id":4768,"nodeType":"Block","src":"25695:80:17","statements":[{"expression":{"id":4762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4758,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4710,"src":"25713:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4761,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25722:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25728:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25722:8:17","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25713:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4763,"nodeType":"ExpressionStatement","src":"25713:17:17"},{"expression":{"id":4766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4764,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4716,"src":"25748:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25758:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25748:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4767,"nodeType":"ExpressionStatement","src":"25748:12:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4770,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4710,"src":"25792:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4773,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25801:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25807:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25801:7:17","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25792:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4786,"nodeType":"IfStatement","src":"25788:100:17","trueBody":{"id":4785,"nodeType":"Block","src":"25810:78:17","statements":[{"expression":{"id":4779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4775,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4710,"src":"25828:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4778,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25837:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25843:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25837:7:17","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25828:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4780,"nodeType":"ExpressionStatement","src":"25828:16:17"},{"expression":{"id":4783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4781,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4716,"src":"25862:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25872:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25862:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4784,"nodeType":"ExpressionStatement","src":"25862:11:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4787,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4710,"src":"25905:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4790,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25914:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25920:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25914:7:17","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25905:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4803,"nodeType":"IfStatement","src":"25901:100:17","trueBody":{"id":4802,"nodeType":"Block","src":"25923:78:17","statements":[{"expression":{"id":4796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4792,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4710,"src":"25941:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4795,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25950:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25956:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25950:7:17","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25941:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4797,"nodeType":"ExpressionStatement","src":"25941:16:17"},{"expression":{"id":4800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4798,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4716,"src":"25975:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25985:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25975:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4801,"nodeType":"ExpressionStatement","src":"25975:11:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4804,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4710,"src":"26018:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4807,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26027:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26033:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26027:7:17","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26018:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4820,"nodeType":"IfStatement","src":"26014:100:17","trueBody":{"id":4819,"nodeType":"Block","src":"26036:78:17","statements":[{"expression":{"id":4813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4809,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4710,"src":"26054:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4812,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26063:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26069:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26063:7:17","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26054:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4814,"nodeType":"ExpressionStatement","src":"26054:16:17"},{"expression":{"id":4817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4815,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4716,"src":"26088:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26098:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26088:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4818,"nodeType":"ExpressionStatement","src":"26088:11:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4821,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4710,"src":"26131:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":4824,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26140:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":4823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26146:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26140:7:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"26131:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4831,"nodeType":"IfStatement","src":"26127:66:17","trueBody":{"id":4830,"nodeType":"Block","src":"26149:44:17","statements":[{"expression":{"id":4828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4826,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4716,"src":"26167:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26177:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26167:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4829,"nodeType":"ExpressionStatement","src":"26167:11:17"}]}}]},{"expression":{"id":4833,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4716,"src":"26219:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4714,"id":4834,"nodeType":"Return","src":"26212:13:17"}]},"documentation":{"id":4708,"nodeType":"StructuredDocumentation","src":"25191:120:17","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4836,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"25325:5:17","nodeType":"FunctionDefinition","parameters":{"id":4711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4710,"mutability":"mutable","name":"value","nameLocation":"25339:5:17","nodeType":"VariableDeclaration","scope":4836,"src":"25331:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4709,"name":"uint256","nodeType":"ElementaryTypeName","src":"25331:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25330:15:17"},"returnParameters":{"id":4714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4713,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4836,"src":"25369:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4712,"name":"uint256","nodeType":"ElementaryTypeName","src":"25369:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25368:9:17"},"scope":5064,"src":"25316:916:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4869,"nodeType":"Block","src":"26467:177:17","statements":[{"id":4868,"nodeType":"UncheckedBlock","src":"26477:161:17","statements":[{"assignments":[4848],"declarations":[{"constant":false,"id":4848,"mutability":"mutable","name":"result","nameLocation":"26509:6:17","nodeType":"VariableDeclaration","scope":4868,"src":"26501:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4847,"name":"uint256","nodeType":"ElementaryTypeName","src":"26501:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4852,"initialValue":{"arguments":[{"id":4850,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4839,"src":"26524:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4849,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[4836,4870],"referencedDeclaration":4836,"src":"26518:5:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26518:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"26501:29:17"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4853,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4848,"src":"26551:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4857,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4842,"src":"26593:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3470","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3470","typeString":"enum Math.Rounding"}],"id":4856,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5063,"src":"26576:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3470_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26576:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26606:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":4860,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4848,"src":"26612:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4862,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4839,"src":"26621:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:20:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26576:50:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4854,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"26560:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6829_$","typeString":"type(library SafeCast)"}},"id":4855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26569:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6828,"src":"26560:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26560:67:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26551:76:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4846,"id":4867,"nodeType":"Return","src":"26544:83:17"}]}]},"documentation":{"id":4837,"nodeType":"StructuredDocumentation","src":"26238:143:17","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4870,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"26395:5:17","nodeType":"FunctionDefinition","parameters":{"id":4843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4839,"mutability":"mutable","name":"value","nameLocation":"26409:5:17","nodeType":"VariableDeclaration","scope":4870,"src":"26401:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4838,"name":"uint256","nodeType":"ElementaryTypeName","src":"26401:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4842,"mutability":"mutable","name":"rounding","nameLocation":"26425:8:17","nodeType":"VariableDeclaration","scope":4870,"src":"26416:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3470","typeString":"enum Math.Rounding"},"typeName":{"id":4841,"nodeType":"UserDefinedTypeName","pathNode":{"id":4840,"name":"Rounding","nameLocations":["26416:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":3470,"src":"26416:8:17"},"referencedDeclaration":3470,"src":"26416:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3470","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"26400:34:17"},"returnParameters":{"id":4846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4845,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4870,"src":"26458:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4844,"name":"uint256","nodeType":"ElementaryTypeName","src":"26458:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26457:9:17"},"scope":5064,"src":"26386:258:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5006,"nodeType":"Block","src":"26964:674:17","statements":[{"assignments":[4879],"declarations":[{"constant":false,"id":4879,"mutability":"mutable","name":"result","nameLocation":"26982:6:17","nodeType":"VariableDeclaration","scope":5006,"src":"26974:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4878,"name":"uint256","nodeType":"ElementaryTypeName","src":"26974:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4881,"initialValue":{"hexValue":"30","id":4880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26991:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"26974:18:17"},{"assignments":[4883],"declarations":[{"constant":false,"id":4883,"mutability":"mutable","name":"isGt","nameLocation":"27010:4:17","nodeType":"VariableDeclaration","scope":5006,"src":"27002:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4882,"name":"uint256","nodeType":"ElementaryTypeName","src":"27002:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4884,"nodeType":"VariableDeclarationStatement","src":"27002:12:17"},{"id":5003,"nodeType":"UncheckedBlock","src":"27024:585:17","statements":[{"expression":{"id":4897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4885,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4883,"src":"27048:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4888,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4873,"src":"27071:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":4894,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":4891,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27080:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":4890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27085:3:17","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27080:8:17","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":4892,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27079:10:17","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27092:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27079:14:17","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"27071:22:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4886,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"27055:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6829_$","typeString":"type(library SafeCast)"}},"id":4887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27064:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6828,"src":"27055:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27055:39:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27048:46:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4898,"nodeType":"ExpressionStatement","src":"27048:46:17"},{"expression":{"id":4903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4899,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4873,"src":"27108:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4900,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4883,"src":"27118:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"313238","id":4901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27125:3:17","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27118:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27108:20:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4904,"nodeType":"ExpressionStatement","src":"27108:20:17"},{"expression":{"id":4909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4905,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4879,"src":"27142:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4906,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4883,"src":"27152:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":4907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27159:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27152:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27142:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4910,"nodeType":"ExpressionStatement","src":"27142:19:17"},{"expression":{"id":4923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4911,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4883,"src":"27176:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4914,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4873,"src":"27199:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":4920,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":4917,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27208:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":4916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27213:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27208:7:17","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":4918,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27207:9:17","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27219:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27207:13:17","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"27199:21:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4912,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"27183:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6829_$","typeString":"type(library SafeCast)"}},"id":4913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27192:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6828,"src":"27183:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27183:38:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27176:45:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4924,"nodeType":"ExpressionStatement","src":"27176:45:17"},{"expression":{"id":4929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4925,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4873,"src":"27235:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4926,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4883,"src":"27245:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3634","id":4927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27252:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27245:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27235:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4930,"nodeType":"ExpressionStatement","src":"27235:19:17"},{"expression":{"id":4935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4931,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4879,"src":"27268:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4932,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4883,"src":"27278:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":4933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27285:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27278:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27268:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4936,"nodeType":"ExpressionStatement","src":"27268:18:17"},{"expression":{"id":4949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4937,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4883,"src":"27301:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4940,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4873,"src":"27324:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":4946,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":4943,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27333:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":4942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27338:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27333:7:17","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":4944,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27332:9:17","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27344:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27332:13:17","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"27324:21:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4938,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"27308:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6829_$","typeString":"type(library SafeCast)"}},"id":4939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27317:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6828,"src":"27308:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27308:38:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27301:45:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4950,"nodeType":"ExpressionStatement","src":"27301:45:17"},{"expression":{"id":4955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4951,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4873,"src":"27360:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4952,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4883,"src":"27370:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3332","id":4953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27377:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27370:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27360:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4956,"nodeType":"ExpressionStatement","src":"27360:19:17"},{"expression":{"id":4961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4957,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4879,"src":"27393:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4958,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4883,"src":"27403:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"34","id":4959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27410:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"27403:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27393:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4962,"nodeType":"ExpressionStatement","src":"27393:18:17"},{"expression":{"id":4975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4963,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4883,"src":"27426:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4966,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4873,"src":"27449:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":4972,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":4969,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27458:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":4968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27463:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27458:7:17","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":4970,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27457:9:17","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27469:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27457:13:17","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"27449:21:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4964,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"27433:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6829_$","typeString":"type(library SafeCast)"}},"id":4965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27442:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6828,"src":"27433:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27433:38:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27426:45:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4976,"nodeType":"ExpressionStatement","src":"27426:45:17"},{"expression":{"id":4981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4977,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4873,"src":"27485:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4978,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4883,"src":"27495:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":4979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27502:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27495:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27485:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4982,"nodeType":"ExpressionStatement","src":"27485:19:17"},{"expression":{"id":4987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4983,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4879,"src":"27518:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4984,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4883,"src":"27528:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":4985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27535:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"27528:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27518:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4988,"nodeType":"ExpressionStatement","src":"27518:18:17"},{"expression":{"id":5001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4989,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4879,"src":"27551:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4992,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4873,"src":"27577:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":4998,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":4995,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27586:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":4994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27591:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27586:6:17","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":4996,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27585:8:17","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27596:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27585:12:17","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"27577:20:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4990,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"27561:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6829_$","typeString":"type(library SafeCast)"}},"id":4991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27570:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6828,"src":"27561:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27561:37:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27551:47:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5002,"nodeType":"ExpressionStatement","src":"27551:47:17"}]},{"expression":{"id":5004,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4879,"src":"27625:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4877,"id":5005,"nodeType":"Return","src":"27618:13:17"}]},"documentation":{"id":4871,"nodeType":"StructuredDocumentation","src":"26650:246:17","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":5007,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"26910:6:17","nodeType":"FunctionDefinition","parameters":{"id":4874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4873,"mutability":"mutable","name":"value","nameLocation":"26925:5:17","nodeType":"VariableDeclaration","scope":5007,"src":"26917:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4872,"name":"uint256","nodeType":"ElementaryTypeName","src":"26917:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26916:15:17"},"returnParameters":{"id":4877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4876,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5007,"src":"26955:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4875,"name":"uint256","nodeType":"ElementaryTypeName","src":"26955:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26954:9:17"},"scope":5064,"src":"26901:737:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5043,"nodeType":"Block","src":"27875:184:17","statements":[{"id":5042,"nodeType":"UncheckedBlock","src":"27885:168:17","statements":[{"assignments":[5019],"declarations":[{"constant":false,"id":5019,"mutability":"mutable","name":"result","nameLocation":"27917:6:17","nodeType":"VariableDeclaration","scope":5042,"src":"27909:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5018,"name":"uint256","nodeType":"ElementaryTypeName","src":"27909:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5023,"initialValue":{"arguments":[{"id":5021,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5010,"src":"27933:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5020,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[5007,5044],"referencedDeclaration":5007,"src":"27926:6:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27926:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"27909:30:17"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5024,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5019,"src":"27960:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5028,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5013,"src":"28002:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3470","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3470","typeString":"enum Math.Rounding"}],"id":5027,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5063,"src":"27985:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3470_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27985:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28015:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5031,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5019,"src":"28021:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":5032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28031:1:17","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"28021:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5034,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"28020:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5036,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5010,"src":"28036:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"27985:56:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5025,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"27969:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6829_$","typeString":"type(library SafeCast)"}},"id":5026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27978:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6828,"src":"27969:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27969:73:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27960:82:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5017,"id":5041,"nodeType":"Return","src":"27953:89:17"}]}]},"documentation":{"id":5008,"nodeType":"StructuredDocumentation","src":"27644:144:17","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5044,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"27802:6:17","nodeType":"FunctionDefinition","parameters":{"id":5014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5010,"mutability":"mutable","name":"value","nameLocation":"27817:5:17","nodeType":"VariableDeclaration","scope":5044,"src":"27809:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5009,"name":"uint256","nodeType":"ElementaryTypeName","src":"27809:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5013,"mutability":"mutable","name":"rounding","nameLocation":"27833:8:17","nodeType":"VariableDeclaration","scope":5044,"src":"27824:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3470","typeString":"enum Math.Rounding"},"typeName":{"id":5012,"nodeType":"UserDefinedTypeName","pathNode":{"id":5011,"name":"Rounding","nameLocations":["27824:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":3470,"src":"27824:8:17"},"referencedDeclaration":3470,"src":"27824:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3470","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"27808:34:17"},"returnParameters":{"id":5017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5016,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5044,"src":"27866:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5015,"name":"uint256","nodeType":"ElementaryTypeName","src":"27866:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27865:9:17"},"scope":5064,"src":"27793:266:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5062,"nodeType":"Block","src":"28257:48:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5055,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5048,"src":"28280:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3470","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3470","typeString":"enum Math.Rounding"}],"id":5054,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28274:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5053,"name":"uint8","nodeType":"ElementaryTypeName","src":"28274:5:17","typeDescriptions":{}}},"id":5056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28274:15:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":5057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28292:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"28274:19:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":5059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28297:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"28274:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5052,"id":5061,"nodeType":"Return","src":"28267:31:17"}]},"documentation":{"id":5045,"nodeType":"StructuredDocumentation","src":"28065:113:17","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":5063,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"28192:16:17","nodeType":"FunctionDefinition","parameters":{"id":5049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5048,"mutability":"mutable","name":"rounding","nameLocation":"28218:8:17","nodeType":"VariableDeclaration","scope":5063,"src":"28209:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3470","typeString":"enum Math.Rounding"},"typeName":{"id":5047,"nodeType":"UserDefinedTypeName","pathNode":{"id":5046,"name":"Rounding","nameLocations":["28209:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":3470,"src":"28209:8:17"},"referencedDeclaration":3470,"src":"28209:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3470","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28208:19:17"},"returnParameters":{"id":5052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5051,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5063,"src":"28251:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5050,"name":"bool","nodeType":"ElementaryTypeName","src":"28251:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"28250:6:17"},"scope":5064,"src":"28183:122:17","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5065,"src":"281:28026:17","usedErrors":[],"usedEvents":[]}],"src":"103:28205:17"},"id":17},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[6829]},"id":6830,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5066,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:18"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":5067,"nodeType":"StructuredDocumentation","src":"218:550:18","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":6829,"linearizedBaseContracts":[6829],"name":"SafeCast","nameLocation":"777:8:18","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5068,"nodeType":"StructuredDocumentation","src":"792:68:18","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":5074,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:18","nodeType":"ErrorDefinition","parameters":{"id":5073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5070,"mutability":"mutable","name":"bits","nameLocation":"908:4:18","nodeType":"VariableDeclaration","scope":5074,"src":"902:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5069,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5072,"mutability":"mutable","name":"value","nameLocation":"922:5:18","nodeType":"VariableDeclaration","scope":5074,"src":"914:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5071,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:18"},"src":"865:64:18"},{"documentation":{"id":5075,"nodeType":"StructuredDocumentation","src":"935:75:18","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":5079,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:18","nodeType":"ErrorDefinition","parameters":{"id":5078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5077,"mutability":"mutable","name":"value","nameLocation":"1056:5:18","nodeType":"VariableDeclaration","scope":5079,"src":"1049:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5076,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:18"},"src":"1015:48:18"},{"documentation":{"id":5080,"nodeType":"StructuredDocumentation","src":"1069:67:18","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":5086,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:18","nodeType":"ErrorDefinition","parameters":{"id":5085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5082,"mutability":"mutable","name":"bits","nameLocation":"1183:4:18","nodeType":"VariableDeclaration","scope":5086,"src":"1177:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5081,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5084,"mutability":"mutable","name":"value","nameLocation":"1196:5:18","nodeType":"VariableDeclaration","scope":5086,"src":"1189:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5083,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:18"},"src":"1141:62:18"},{"documentation":{"id":5087,"nodeType":"StructuredDocumentation","src":"1209:75:18","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":5091,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:18","nodeType":"ErrorDefinition","parameters":{"id":5090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5089,"mutability":"mutable","name":"value","nameLocation":"1331:5:18","nodeType":"VariableDeclaration","scope":5091,"src":"1323:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5088,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:18"},"src":"1289:49:18"},{"body":{"id":5118,"nodeType":"Block","src":"1695:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5099,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"1709:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5102,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5101,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":5100,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":5104,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:18","memberName":"max","nodeType":"MemberAccess","src":"1717:17:18","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5112,"nodeType":"IfStatement","src":"1705:105:18","trueBody":{"id":5111,"nodeType":"Block","src":"1736:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:18","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5108,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"1793:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5106,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"1757:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5110,"nodeType":"RevertStatement","src":"1750:49:18"}]}},{"expression":{"arguments":[{"id":5115,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"1834:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5113,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:18","typeDescriptions":{}}},"id":5116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":5098,"id":5117,"nodeType":"Return","src":"1819:21:18"}]},"documentation":{"id":5092,"nodeType":"StructuredDocumentation","src":"1344:280:18","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5119,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:18","nodeType":"FunctionDefinition","parameters":{"id":5095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5094,"mutability":"mutable","name":"value","nameLocation":"1656:5:18","nodeType":"VariableDeclaration","scope":5119,"src":"1648:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5093,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:18"},"returnParameters":{"id":5098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5097,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5119,"src":"1686:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":5096,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:18","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:18"},"scope":6829,"src":"1629:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5146,"nodeType":"Block","src":"2204:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5127,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5122,"src":"2218:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5129,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":5128,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":5132,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:18","memberName":"max","nodeType":"MemberAccess","src":"2226:17:18","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5140,"nodeType":"IfStatement","src":"2214:105:18","trueBody":{"id":5139,"nodeType":"Block","src":"2245:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:18","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5136,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5122,"src":"2302:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5134,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"2266:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5138,"nodeType":"RevertStatement","src":"2259:49:18"}]}},{"expression":{"arguments":[{"id":5143,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5122,"src":"2343:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5142,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5141,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:18","typeDescriptions":{}}},"id":5144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":5126,"id":5145,"nodeType":"Return","src":"2328:21:18"}]},"documentation":{"id":5120,"nodeType":"StructuredDocumentation","src":"1853:280:18","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":5147,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:18","nodeType":"FunctionDefinition","parameters":{"id":5123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5122,"mutability":"mutable","name":"value","nameLocation":"2165:5:18","nodeType":"VariableDeclaration","scope":5147,"src":"2157:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5121,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:18"},"returnParameters":{"id":5126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5125,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5147,"src":"2195:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":5124,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:18","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:18"},"scope":6829,"src":"2138:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5174,"nodeType":"Block","src":"2713:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5155,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5150,"src":"2727:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5157,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":5156,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":5160,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:18","memberName":"max","nodeType":"MemberAccess","src":"2735:17:18","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5168,"nodeType":"IfStatement","src":"2723:105:18","trueBody":{"id":5167,"nodeType":"Block","src":"2754:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:18","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5164,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5150,"src":"2811:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5162,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"2775:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5166,"nodeType":"RevertStatement","src":"2768:49:18"}]}},{"expression":{"arguments":[{"id":5171,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5150,"src":"2852:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5170,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5169,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:18","typeDescriptions":{}}},"id":5172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":5154,"id":5173,"nodeType":"Return","src":"2837:21:18"}]},"documentation":{"id":5148,"nodeType":"StructuredDocumentation","src":"2362:280:18","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":5175,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:18","nodeType":"FunctionDefinition","parameters":{"id":5151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5150,"mutability":"mutable","name":"value","nameLocation":"2674:5:18","nodeType":"VariableDeclaration","scope":5175,"src":"2666:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5149,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:18"},"returnParameters":{"id":5154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5153,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5175,"src":"2704:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":5152,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:18","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:18"},"scope":6829,"src":"2647:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5202,"nodeType":"Block","src":"3222:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5183,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5178,"src":"3236:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5185,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":5184,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":5188,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:18","memberName":"max","nodeType":"MemberAccess","src":"3244:17:18","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5196,"nodeType":"IfStatement","src":"3232:105:18","trueBody":{"id":5195,"nodeType":"Block","src":"3263:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":5191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:18","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":5192,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5178,"src":"3320:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5190,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"3284:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5194,"nodeType":"RevertStatement","src":"3277:49:18"}]}},{"expression":{"arguments":[{"id":5199,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5178,"src":"3361:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5198,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5197,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:18","typeDescriptions":{}}},"id":5200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":5182,"id":5201,"nodeType":"Return","src":"3346:21:18"}]},"documentation":{"id":5176,"nodeType":"StructuredDocumentation","src":"2871:280:18","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":5203,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:18","nodeType":"FunctionDefinition","parameters":{"id":5179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5178,"mutability":"mutable","name":"value","nameLocation":"3183:5:18","nodeType":"VariableDeclaration","scope":5203,"src":"3175:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5177,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:18"},"returnParameters":{"id":5182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5181,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5203,"src":"3213:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":5180,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:18","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:18"},"scope":6829,"src":"3156:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5230,"nodeType":"Block","src":"3731:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5211,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5206,"src":"3745:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5214,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5213,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":5212,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":5216,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:18","memberName":"max","nodeType":"MemberAccess","src":"3753:17:18","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5224,"nodeType":"IfStatement","src":"3741:105:18","trueBody":{"id":5223,"nodeType":"Block","src":"3772:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":5219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:18","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":5220,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5206,"src":"3829:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5218,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"3793:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5222,"nodeType":"RevertStatement","src":"3786:49:18"}]}},{"expression":{"arguments":[{"id":5227,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5206,"src":"3870:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5226,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5225,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:18","typeDescriptions":{}}},"id":5228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":5210,"id":5229,"nodeType":"Return","src":"3855:21:18"}]},"documentation":{"id":5204,"nodeType":"StructuredDocumentation","src":"3380:280:18","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":5231,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:18","nodeType":"FunctionDefinition","parameters":{"id":5207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5206,"mutability":"mutable","name":"value","nameLocation":"3692:5:18","nodeType":"VariableDeclaration","scope":5231,"src":"3684:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5205,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:18"},"returnParameters":{"id":5210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5209,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5231,"src":"3722:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":5208,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:18","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:18"},"scope":6829,"src":"3665:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5258,"nodeType":"Block","src":"4240:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5239,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5234,"src":"4254:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5242,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5241,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":5240,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":5244,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:18","memberName":"max","nodeType":"MemberAccess","src":"4262:17:18","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5252,"nodeType":"IfStatement","src":"4250:105:18","trueBody":{"id":5251,"nodeType":"Block","src":"4281:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":5247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:18","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":5248,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5234,"src":"4338:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5246,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"4302:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5250,"nodeType":"RevertStatement","src":"4295:49:18"}]}},{"expression":{"arguments":[{"id":5255,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5234,"src":"4379:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5254,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5253,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:18","typeDescriptions":{}}},"id":5256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":5238,"id":5257,"nodeType":"Return","src":"4364:21:18"}]},"documentation":{"id":5232,"nodeType":"StructuredDocumentation","src":"3889:280:18","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":5259,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:18","nodeType":"FunctionDefinition","parameters":{"id":5235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5234,"mutability":"mutable","name":"value","nameLocation":"4201:5:18","nodeType":"VariableDeclaration","scope":5259,"src":"4193:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5233,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:18"},"returnParameters":{"id":5238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5237,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5259,"src":"4231:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":5236,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:18","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:18"},"scope":6829,"src":"4174:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5286,"nodeType":"Block","src":"4749:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5267,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5262,"src":"4763:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5270,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5269,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":5268,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":5272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:18","memberName":"max","nodeType":"MemberAccess","src":"4771:17:18","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5280,"nodeType":"IfStatement","src":"4759:105:18","trueBody":{"id":5279,"nodeType":"Block","src":"4790:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":5275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:18","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":5276,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5262,"src":"4847:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5274,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"4811:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5278,"nodeType":"RevertStatement","src":"4804:49:18"}]}},{"expression":{"arguments":[{"id":5283,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5262,"src":"4888:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5282,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5281,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:18","typeDescriptions":{}}},"id":5284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":5266,"id":5285,"nodeType":"Return","src":"4873:21:18"}]},"documentation":{"id":5260,"nodeType":"StructuredDocumentation","src":"4398:280:18","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":5287,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:18","nodeType":"FunctionDefinition","parameters":{"id":5263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5262,"mutability":"mutable","name":"value","nameLocation":"4710:5:18","nodeType":"VariableDeclaration","scope":5287,"src":"4702:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5261,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:18"},"returnParameters":{"id":5266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5265,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5287,"src":"4740:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":5264,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:18","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:18"},"scope":6829,"src":"4683:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5314,"nodeType":"Block","src":"5258:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5295,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5290,"src":"5272:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5298,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5297,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":5296,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":5300,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:18","memberName":"max","nodeType":"MemberAccess","src":"5280:17:18","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5308,"nodeType":"IfStatement","src":"5268:105:18","trueBody":{"id":5307,"nodeType":"Block","src":"5299:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":5303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:18","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":5304,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5290,"src":"5356:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5302,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"5320:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5306,"nodeType":"RevertStatement","src":"5313:49:18"}]}},{"expression":{"arguments":[{"id":5311,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5290,"src":"5397:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5310,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5309,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:18","typeDescriptions":{}}},"id":5312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":5294,"id":5313,"nodeType":"Return","src":"5382:21:18"}]},"documentation":{"id":5288,"nodeType":"StructuredDocumentation","src":"4907:280:18","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":5315,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:18","nodeType":"FunctionDefinition","parameters":{"id":5291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5290,"mutability":"mutable","name":"value","nameLocation":"5219:5:18","nodeType":"VariableDeclaration","scope":5315,"src":"5211:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5289,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:18"},"returnParameters":{"id":5294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5293,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5315,"src":"5249:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":5292,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:18","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:18"},"scope":6829,"src":"5192:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5342,"nodeType":"Block","src":"5767:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5323,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5318,"src":"5781:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5326,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5325,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":5324,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":5328,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:18","memberName":"max","nodeType":"MemberAccess","src":"5789:17:18","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5336,"nodeType":"IfStatement","src":"5777:105:18","trueBody":{"id":5335,"nodeType":"Block","src":"5808:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":5331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:18","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":5332,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5318,"src":"5865:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5330,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"5829:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5334,"nodeType":"RevertStatement","src":"5822:49:18"}]}},{"expression":{"arguments":[{"id":5339,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5318,"src":"5906:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5338,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5337,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:18","typeDescriptions":{}}},"id":5340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":5322,"id":5341,"nodeType":"Return","src":"5891:21:18"}]},"documentation":{"id":5316,"nodeType":"StructuredDocumentation","src":"5416:280:18","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":5343,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:18","nodeType":"FunctionDefinition","parameters":{"id":5319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5318,"mutability":"mutable","name":"value","nameLocation":"5728:5:18","nodeType":"VariableDeclaration","scope":5343,"src":"5720:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5317,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:18"},"returnParameters":{"id":5322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5321,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5343,"src":"5758:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":5320,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:18","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:18"},"scope":6829,"src":"5701:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5370,"nodeType":"Block","src":"6276:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5351,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5346,"src":"6290:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5354,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5353,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":5352,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":5356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:18","memberName":"max","nodeType":"MemberAccess","src":"6298:17:18","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5364,"nodeType":"IfStatement","src":"6286:105:18","trueBody":{"id":5363,"nodeType":"Block","src":"6317:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":5359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:18","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":5360,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5346,"src":"6374:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5358,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"6338:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5362,"nodeType":"RevertStatement","src":"6331:49:18"}]}},{"expression":{"arguments":[{"id":5367,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5346,"src":"6415:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5365,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:18","typeDescriptions":{}}},"id":5368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":5350,"id":5369,"nodeType":"Return","src":"6400:21:18"}]},"documentation":{"id":5344,"nodeType":"StructuredDocumentation","src":"5925:280:18","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":5371,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:18","nodeType":"FunctionDefinition","parameters":{"id":5347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5346,"mutability":"mutable","name":"value","nameLocation":"6237:5:18","nodeType":"VariableDeclaration","scope":5371,"src":"6229:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5345,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:18"},"returnParameters":{"id":5350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5349,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5371,"src":"6267:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":5348,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:18","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:18"},"scope":6829,"src":"6210:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5398,"nodeType":"Block","src":"6785:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5379,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5374,"src":"6799:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5382,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5381,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":5380,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":5384,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:18","memberName":"max","nodeType":"MemberAccess","src":"6807:17:18","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5392,"nodeType":"IfStatement","src":"6795:105:18","trueBody":{"id":5391,"nodeType":"Block","src":"6826:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":5387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:18","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":5388,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5374,"src":"6883:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5386,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"6847:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5390,"nodeType":"RevertStatement","src":"6840:49:18"}]}},{"expression":{"arguments":[{"id":5395,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5374,"src":"6924:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5393,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:18","typeDescriptions":{}}},"id":5396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":5378,"id":5397,"nodeType":"Return","src":"6909:21:18"}]},"documentation":{"id":5372,"nodeType":"StructuredDocumentation","src":"6434:280:18","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":5399,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:18","nodeType":"FunctionDefinition","parameters":{"id":5375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5374,"mutability":"mutable","name":"value","nameLocation":"6746:5:18","nodeType":"VariableDeclaration","scope":5399,"src":"6738:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5373,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:18"},"returnParameters":{"id":5378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5377,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5399,"src":"6776:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":5376,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:18","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:18"},"scope":6829,"src":"6719:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5426,"nodeType":"Block","src":"7294:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5407,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5402,"src":"7308:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5409,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":5408,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":5412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:18","memberName":"max","nodeType":"MemberAccess","src":"7316:17:18","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5420,"nodeType":"IfStatement","src":"7304:105:18","trueBody":{"id":5419,"nodeType":"Block","src":"7335:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":5415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:18","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":5416,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5402,"src":"7392:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5414,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"7356:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5418,"nodeType":"RevertStatement","src":"7349:49:18"}]}},{"expression":{"arguments":[{"id":5423,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5402,"src":"7433:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5422,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5421,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:18","typeDescriptions":{}}},"id":5424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":5406,"id":5425,"nodeType":"Return","src":"7418:21:18"}]},"documentation":{"id":5400,"nodeType":"StructuredDocumentation","src":"6943:280:18","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":5427,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:18","nodeType":"FunctionDefinition","parameters":{"id":5403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5402,"mutability":"mutable","name":"value","nameLocation":"7255:5:18","nodeType":"VariableDeclaration","scope":5427,"src":"7247:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5401,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:18"},"returnParameters":{"id":5406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5405,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5427,"src":"7285:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5404,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:18","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:18"},"scope":6829,"src":"7228:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5454,"nodeType":"Block","src":"7803:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5435,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5430,"src":"7817:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5438,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5437,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":5436,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":5440,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:18","memberName":"max","nodeType":"MemberAccess","src":"7825:17:18","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5448,"nodeType":"IfStatement","src":"7813:105:18","trueBody":{"id":5447,"nodeType":"Block","src":"7844:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":5443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:18","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":5444,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5430,"src":"7901:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5442,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"7865:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5446,"nodeType":"RevertStatement","src":"7858:49:18"}]}},{"expression":{"arguments":[{"id":5451,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5430,"src":"7942:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5450,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5449,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:18","typeDescriptions":{}}},"id":5452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":5434,"id":5453,"nodeType":"Return","src":"7927:21:18"}]},"documentation":{"id":5428,"nodeType":"StructuredDocumentation","src":"7452:280:18","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":5455,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:18","nodeType":"FunctionDefinition","parameters":{"id":5431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5430,"mutability":"mutable","name":"value","nameLocation":"7764:5:18","nodeType":"VariableDeclaration","scope":5455,"src":"7756:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5429,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:18"},"returnParameters":{"id":5434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5433,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5455,"src":"7794:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":5432,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:18","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:18"},"scope":6829,"src":"7737:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5482,"nodeType":"Block","src":"8312:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5463,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"8326:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5466,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5465,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":5464,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":5468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:18","memberName":"max","nodeType":"MemberAccess","src":"8334:17:18","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5476,"nodeType":"IfStatement","src":"8322:105:18","trueBody":{"id":5475,"nodeType":"Block","src":"8353:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":5471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:18","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":5472,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"8410:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5470,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"8374:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5474,"nodeType":"RevertStatement","src":"8367:49:18"}]}},{"expression":{"arguments":[{"id":5479,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"8451:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5478,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5477,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:18","typeDescriptions":{}}},"id":5480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":5462,"id":5481,"nodeType":"Return","src":"8436:21:18"}]},"documentation":{"id":5456,"nodeType":"StructuredDocumentation","src":"7961:280:18","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":5483,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:18","nodeType":"FunctionDefinition","parameters":{"id":5459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5458,"mutability":"mutable","name":"value","nameLocation":"8273:5:18","nodeType":"VariableDeclaration","scope":5483,"src":"8265:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5457,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:18"},"returnParameters":{"id":5462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5461,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5483,"src":"8303:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":5460,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:18","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:18"},"scope":6829,"src":"8246:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5510,"nodeType":"Block","src":"8821:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5491,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5486,"src":"8835:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5493,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":5492,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":5496,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:18","memberName":"max","nodeType":"MemberAccess","src":"8843:17:18","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5504,"nodeType":"IfStatement","src":"8831:105:18","trueBody":{"id":5503,"nodeType":"Block","src":"8862:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":5499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:18","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":5500,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5486,"src":"8919:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5498,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"8883:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5502,"nodeType":"RevertStatement","src":"8876:49:18"}]}},{"expression":{"arguments":[{"id":5507,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5486,"src":"8960:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5506,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5505,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:18","typeDescriptions":{}}},"id":5508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":5490,"id":5509,"nodeType":"Return","src":"8945:21:18"}]},"documentation":{"id":5484,"nodeType":"StructuredDocumentation","src":"8470:280:18","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":5511,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:18","nodeType":"FunctionDefinition","parameters":{"id":5487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5486,"mutability":"mutable","name":"value","nameLocation":"8782:5:18","nodeType":"VariableDeclaration","scope":5511,"src":"8774:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5485,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:18"},"returnParameters":{"id":5490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5489,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5511,"src":"8812:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":5488,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:18","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:18"},"scope":6829,"src":"8755:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5538,"nodeType":"Block","src":"9330:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5519,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5514,"src":"9344:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5522,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5521,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":5520,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":5524,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:18","memberName":"max","nodeType":"MemberAccess","src":"9352:17:18","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5532,"nodeType":"IfStatement","src":"9340:105:18","trueBody":{"id":5531,"nodeType":"Block","src":"9371:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":5527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:18","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":5528,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5514,"src":"9428:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5526,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"9392:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5530,"nodeType":"RevertStatement","src":"9385:49:18"}]}},{"expression":{"arguments":[{"id":5535,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5514,"src":"9469:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5534,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5533,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:18","typeDescriptions":{}}},"id":5536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":5518,"id":5537,"nodeType":"Return","src":"9454:21:18"}]},"documentation":{"id":5512,"nodeType":"StructuredDocumentation","src":"8979:280:18","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":5539,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:18","nodeType":"FunctionDefinition","parameters":{"id":5515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5514,"mutability":"mutable","name":"value","nameLocation":"9291:5:18","nodeType":"VariableDeclaration","scope":5539,"src":"9283:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5513,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:18"},"returnParameters":{"id":5518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5517,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5539,"src":"9321:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":5516,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:18","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:18"},"scope":6829,"src":"9264:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5566,"nodeType":"Block","src":"9839:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5547,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5542,"src":"9853:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5550,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5549,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":5548,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":5552,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:18","memberName":"max","nodeType":"MemberAccess","src":"9861:17:18","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5560,"nodeType":"IfStatement","src":"9849:105:18","trueBody":{"id":5559,"nodeType":"Block","src":"9880:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":5555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:18","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":5556,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5542,"src":"9937:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5554,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"9901:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5558,"nodeType":"RevertStatement","src":"9894:49:18"}]}},{"expression":{"arguments":[{"id":5563,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5542,"src":"9978:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5561,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:18","typeDescriptions":{}}},"id":5564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":5546,"id":5565,"nodeType":"Return","src":"9963:21:18"}]},"documentation":{"id":5540,"nodeType":"StructuredDocumentation","src":"9488:280:18","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":5567,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:18","nodeType":"FunctionDefinition","parameters":{"id":5543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5542,"mutability":"mutable","name":"value","nameLocation":"9800:5:18","nodeType":"VariableDeclaration","scope":5567,"src":"9792:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5541,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:18"},"returnParameters":{"id":5546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5545,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5567,"src":"9830:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":5544,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:18","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:18"},"scope":6829,"src":"9773:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5594,"nodeType":"Block","src":"10348:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5575,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5570,"src":"10362:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5577,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":5576,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":5580,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:18","memberName":"max","nodeType":"MemberAccess","src":"10370:17:18","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5588,"nodeType":"IfStatement","src":"10358:105:18","trueBody":{"id":5587,"nodeType":"Block","src":"10389:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":5583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:18","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":5584,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5570,"src":"10446:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5582,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"10410:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5586,"nodeType":"RevertStatement","src":"10403:49:18"}]}},{"expression":{"arguments":[{"id":5591,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5570,"src":"10487:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5590,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5589,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:18","typeDescriptions":{}}},"id":5592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":5574,"id":5593,"nodeType":"Return","src":"10472:21:18"}]},"documentation":{"id":5568,"nodeType":"StructuredDocumentation","src":"9997:280:18","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":5595,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:18","nodeType":"FunctionDefinition","parameters":{"id":5571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5570,"mutability":"mutable","name":"value","nameLocation":"10309:5:18","nodeType":"VariableDeclaration","scope":5595,"src":"10301:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5569,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:18"},"returnParameters":{"id":5574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5573,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5595,"src":"10339:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":5572,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:18","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:18"},"scope":6829,"src":"10282:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5622,"nodeType":"Block","src":"10857:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5603,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5598,"src":"10871:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5606,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5605,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":5604,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":5608,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:18","memberName":"max","nodeType":"MemberAccess","src":"10879:17:18","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5616,"nodeType":"IfStatement","src":"10867:105:18","trueBody":{"id":5615,"nodeType":"Block","src":"10898:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":5611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:18","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":5612,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5598,"src":"10955:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5610,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"10919:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5614,"nodeType":"RevertStatement","src":"10912:49:18"}]}},{"expression":{"arguments":[{"id":5619,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5598,"src":"10996:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5618,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5617,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:18","typeDescriptions":{}}},"id":5620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":5602,"id":5621,"nodeType":"Return","src":"10981:21:18"}]},"documentation":{"id":5596,"nodeType":"StructuredDocumentation","src":"10506:280:18","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":5623,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:18","nodeType":"FunctionDefinition","parameters":{"id":5599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5598,"mutability":"mutable","name":"value","nameLocation":"10818:5:18","nodeType":"VariableDeclaration","scope":5623,"src":"10810:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5597,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:18"},"returnParameters":{"id":5602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5601,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5623,"src":"10848:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":5600,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:18","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:18"},"scope":6829,"src":"10791:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5650,"nodeType":"Block","src":"11360:149:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5631,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5626,"src":"11374:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5634,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5633,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":5632,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":5636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:18","memberName":"max","nodeType":"MemberAccess","src":"11382:16:18","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5644,"nodeType":"IfStatement","src":"11370:103:18","trueBody":{"id":5643,"nodeType":"Block","src":"11400:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":5639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:18","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":5640,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5626,"src":"11456:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5638,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"11421:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5642,"nodeType":"RevertStatement","src":"11414:48:18"}]}},{"expression":{"arguments":[{"id":5647,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5626,"src":"11496:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5645,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:18","typeDescriptions":{}}},"id":5648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":5630,"id":5649,"nodeType":"Return","src":"11482:20:18"}]},"documentation":{"id":5624,"nodeType":"StructuredDocumentation","src":"11015:276:18","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":5651,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:18","nodeType":"FunctionDefinition","parameters":{"id":5627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5626,"mutability":"mutable","name":"value","nameLocation":"11322:5:18","nodeType":"VariableDeclaration","scope":5651,"src":"11314:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5625,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:18"},"returnParameters":{"id":5630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5629,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5651,"src":"11352:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":5628,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:18","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:18"},"scope":6829,"src":"11296:213:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5678,"nodeType":"Block","src":"11860:149:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5659,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5654,"src":"11874:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5662,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5661,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":5660,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":5664,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:18","memberName":"max","nodeType":"MemberAccess","src":"11882:16:18","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5672,"nodeType":"IfStatement","src":"11870:103:18","trueBody":{"id":5671,"nodeType":"Block","src":"11900:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":5667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:18","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":5668,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5654,"src":"11956:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5666,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"11921:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5670,"nodeType":"RevertStatement","src":"11914:48:18"}]}},{"expression":{"arguments":[{"id":5675,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5654,"src":"11996:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5673,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:18","typeDescriptions":{}}},"id":5676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":5658,"id":5677,"nodeType":"Return","src":"11982:20:18"}]},"documentation":{"id":5652,"nodeType":"StructuredDocumentation","src":"11515:276:18","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":5679,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:18","nodeType":"FunctionDefinition","parameters":{"id":5655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5654,"mutability":"mutable","name":"value","nameLocation":"11822:5:18","nodeType":"VariableDeclaration","scope":5679,"src":"11814:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5653,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:18"},"returnParameters":{"id":5658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5657,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5679,"src":"11852:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":5656,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:18","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:18"},"scope":6829,"src":"11796:213:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5706,"nodeType":"Block","src":"12360:149:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5687,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5682,"src":"12374:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5689,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":5688,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":5692,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:18","memberName":"max","nodeType":"MemberAccess","src":"12382:16:18","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5700,"nodeType":"IfStatement","src":"12370:103:18","trueBody":{"id":5699,"nodeType":"Block","src":"12400:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":5695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:18","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":5696,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5682,"src":"12456:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5694,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"12421:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5698,"nodeType":"RevertStatement","src":"12414:48:18"}]}},{"expression":{"arguments":[{"id":5703,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5682,"src":"12496:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5702,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5701,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:18","typeDescriptions":{}}},"id":5704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":5686,"id":5705,"nodeType":"Return","src":"12482:20:18"}]},"documentation":{"id":5680,"nodeType":"StructuredDocumentation","src":"12015:276:18","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":5707,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:18","nodeType":"FunctionDefinition","parameters":{"id":5683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5682,"mutability":"mutable","name":"value","nameLocation":"12322:5:18","nodeType":"VariableDeclaration","scope":5707,"src":"12314:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5681,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:18"},"returnParameters":{"id":5686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5685,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5707,"src":"12352:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":5684,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:18","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:18"},"scope":6829,"src":"12296:213:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5734,"nodeType":"Block","src":"12860:149:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5715,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5710,"src":"12874:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5718,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5717,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":5716,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":5720,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:18","memberName":"max","nodeType":"MemberAccess","src":"12882:16:18","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5728,"nodeType":"IfStatement","src":"12870:103:18","trueBody":{"id":5727,"nodeType":"Block","src":"12900:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":5723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:18","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":5724,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5710,"src":"12956:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5722,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"12921:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5726,"nodeType":"RevertStatement","src":"12914:48:18"}]}},{"expression":{"arguments":[{"id":5731,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5710,"src":"12996:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5730,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5729,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:18","typeDescriptions":{}}},"id":5732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":5714,"id":5733,"nodeType":"Return","src":"12982:20:18"}]},"documentation":{"id":5708,"nodeType":"StructuredDocumentation","src":"12515:276:18","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":5735,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:18","nodeType":"FunctionDefinition","parameters":{"id":5711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5710,"mutability":"mutable","name":"value","nameLocation":"12822:5:18","nodeType":"VariableDeclaration","scope":5735,"src":"12814:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5709,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:18"},"returnParameters":{"id":5714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5713,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5735,"src":"12852:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":5712,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:18","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:18"},"scope":6829,"src":"12796:213:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5762,"nodeType":"Block","src":"13360:149:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5743,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5738,"src":"13374:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5746,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5745,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":5744,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":5748,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:18","memberName":"max","nodeType":"MemberAccess","src":"13382:16:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5756,"nodeType":"IfStatement","src":"13370:103:18","trueBody":{"id":5755,"nodeType":"Block","src":"13400:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":5751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":5752,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5738,"src":"13456:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5750,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"13421:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5754,"nodeType":"RevertStatement","src":"13414:48:18"}]}},{"expression":{"arguments":[{"id":5759,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5738,"src":"13496:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5758,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5757,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:18","typeDescriptions":{}}},"id":5760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":5742,"id":5761,"nodeType":"Return","src":"13482:20:18"}]},"documentation":{"id":5736,"nodeType":"StructuredDocumentation","src":"13015:276:18","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":5763,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:18","nodeType":"FunctionDefinition","parameters":{"id":5739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5738,"mutability":"mutable","name":"value","nameLocation":"13322:5:18","nodeType":"VariableDeclaration","scope":5763,"src":"13314:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5737,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:18"},"returnParameters":{"id":5742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5741,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5763,"src":"13352:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5740,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:18"},"scope":6829,"src":"13296:213:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5790,"nodeType":"Block","src":"13860:149:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5771,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5766,"src":"13874:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5774,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5773,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":5772,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":5776,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:18","memberName":"max","nodeType":"MemberAccess","src":"13882:16:18","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5784,"nodeType":"IfStatement","src":"13870:103:18","trueBody":{"id":5783,"nodeType":"Block","src":"13900:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":5779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:18","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":5780,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5766,"src":"13956:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5778,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"13921:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5782,"nodeType":"RevertStatement","src":"13914:48:18"}]}},{"expression":{"arguments":[{"id":5787,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5766,"src":"13996:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5786,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5785,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:18","typeDescriptions":{}}},"id":5788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":5770,"id":5789,"nodeType":"Return","src":"13982:20:18"}]},"documentation":{"id":5764,"nodeType":"StructuredDocumentation","src":"13515:276:18","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":5791,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:18","nodeType":"FunctionDefinition","parameters":{"id":5767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5766,"mutability":"mutable","name":"value","nameLocation":"13822:5:18","nodeType":"VariableDeclaration","scope":5791,"src":"13814:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5765,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:18"},"returnParameters":{"id":5770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5769,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5791,"src":"13852:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":5768,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:18","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:18"},"scope":6829,"src":"13796:213:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5818,"nodeType":"Block","src":"14360:149:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5799,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5794,"src":"14374:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5802,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5801,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":5800,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":5804,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:18","memberName":"max","nodeType":"MemberAccess","src":"14382:16:18","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5812,"nodeType":"IfStatement","src":"14370:103:18","trueBody":{"id":5811,"nodeType":"Block","src":"14400:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":5807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:18","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":5808,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5794,"src":"14456:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5806,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"14421:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5810,"nodeType":"RevertStatement","src":"14414:48:18"}]}},{"expression":{"arguments":[{"id":5815,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5794,"src":"14496:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5814,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5813,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:18","typeDescriptions":{}}},"id":5816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":5798,"id":5817,"nodeType":"Return","src":"14482:20:18"}]},"documentation":{"id":5792,"nodeType":"StructuredDocumentation","src":"14015:276:18","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":5819,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:18","nodeType":"FunctionDefinition","parameters":{"id":5795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5794,"mutability":"mutable","name":"value","nameLocation":"14322:5:18","nodeType":"VariableDeclaration","scope":5819,"src":"14314:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5793,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:18"},"returnParameters":{"id":5798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5797,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5819,"src":"14352:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":5796,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:18","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:18"},"scope":6829,"src":"14296:213:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5846,"nodeType":"Block","src":"14860:149:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5827,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5822,"src":"14874:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5830,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5829,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":5828,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":5832,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:18","memberName":"max","nodeType":"MemberAccess","src":"14882:16:18","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5840,"nodeType":"IfStatement","src":"14870:103:18","trueBody":{"id":5839,"nodeType":"Block","src":"14900:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":5835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:18","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":5836,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5822,"src":"14956:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5834,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"14921:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5838,"nodeType":"RevertStatement","src":"14914:48:18"}]}},{"expression":{"arguments":[{"id":5843,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5822,"src":"14996:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5842,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5841,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:18","typeDescriptions":{}}},"id":5844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":5826,"id":5845,"nodeType":"Return","src":"14982:20:18"}]},"documentation":{"id":5820,"nodeType":"StructuredDocumentation","src":"14515:276:18","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":5847,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:18","nodeType":"FunctionDefinition","parameters":{"id":5823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5822,"mutability":"mutable","name":"value","nameLocation":"14822:5:18","nodeType":"VariableDeclaration","scope":5847,"src":"14814:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5821,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:18"},"returnParameters":{"id":5826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5825,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5847,"src":"14852:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":5824,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:18","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:18"},"scope":6829,"src":"14796:213:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5874,"nodeType":"Block","src":"15360:149:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5855,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5850,"src":"15374:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5858,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5857,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":5856,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":5860,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:18","memberName":"max","nodeType":"MemberAccess","src":"15382:16:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5868,"nodeType":"IfStatement","src":"15370:103:18","trueBody":{"id":5867,"nodeType":"Block","src":"15400:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":5863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":5864,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5850,"src":"15456:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5862,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"15421:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5866,"nodeType":"RevertStatement","src":"15414:48:18"}]}},{"expression":{"arguments":[{"id":5871,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5850,"src":"15496:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5870,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5869,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:18","typeDescriptions":{}}},"id":5872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":5854,"id":5873,"nodeType":"Return","src":"15482:20:18"}]},"documentation":{"id":5848,"nodeType":"StructuredDocumentation","src":"15015:276:18","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":5875,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:18","nodeType":"FunctionDefinition","parameters":{"id":5851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5850,"mutability":"mutable","name":"value","nameLocation":"15322:5:18","nodeType":"VariableDeclaration","scope":5875,"src":"15314:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5849,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:18"},"returnParameters":{"id":5854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5853,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5875,"src":"15352:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5852,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:18"},"scope":6829,"src":"15296:213:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5902,"nodeType":"Block","src":"15860:149:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5883,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5878,"src":"15874:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5885,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":5884,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":5888,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:18","memberName":"max","nodeType":"MemberAccess","src":"15882:16:18","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5896,"nodeType":"IfStatement","src":"15870:103:18","trueBody":{"id":5895,"nodeType":"Block","src":"15900:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":5891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:18","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":5892,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5878,"src":"15956:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5890,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"15921:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5894,"nodeType":"RevertStatement","src":"15914:48:18"}]}},{"expression":{"arguments":[{"id":5899,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5878,"src":"15996:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5898,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5897,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:18","typeDescriptions":{}}},"id":5900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":5882,"id":5901,"nodeType":"Return","src":"15982:20:18"}]},"documentation":{"id":5876,"nodeType":"StructuredDocumentation","src":"15515:276:18","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":5903,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:18","nodeType":"FunctionDefinition","parameters":{"id":5879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5878,"mutability":"mutable","name":"value","nameLocation":"15822:5:18","nodeType":"VariableDeclaration","scope":5903,"src":"15814:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5877,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:18"},"returnParameters":{"id":5882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5881,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5903,"src":"15852:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":5880,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:18","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:18"},"scope":6829,"src":"15796:213:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5930,"nodeType":"Block","src":"16360:149:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5911,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5906,"src":"16374:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5913,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":5912,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":5916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:18","memberName":"max","nodeType":"MemberAccess","src":"16382:16:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5924,"nodeType":"IfStatement","src":"16370:103:18","trueBody":{"id":5923,"nodeType":"Block","src":"16400:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":5919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":5920,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5906,"src":"16456:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5918,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"16421:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5922,"nodeType":"RevertStatement","src":"16414:48:18"}]}},{"expression":{"arguments":[{"id":5927,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5906,"src":"16496:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5926,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5925,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:18","typeDescriptions":{}}},"id":5928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":5910,"id":5929,"nodeType":"Return","src":"16482:20:18"}]},"documentation":{"id":5904,"nodeType":"StructuredDocumentation","src":"16015:276:18","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":5931,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:18","nodeType":"FunctionDefinition","parameters":{"id":5907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5906,"mutability":"mutable","name":"value","nameLocation":"16322:5:18","nodeType":"VariableDeclaration","scope":5931,"src":"16314:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5905,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:18"},"returnParameters":{"id":5910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5909,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5931,"src":"16352:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5908,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:18"},"scope":6829,"src":"16296:213:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5958,"nodeType":"Block","src":"16854:146:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5939,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5934,"src":"16868:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5941,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":5940,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":5944,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:18","memberName":"max","nodeType":"MemberAccess","src":"16876:15:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5952,"nodeType":"IfStatement","src":"16864:101:18","trueBody":{"id":5951,"nodeType":"Block","src":"16893:72:18","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":5947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":5948,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5934,"src":"16948:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5946,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"16914:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5950,"nodeType":"RevertStatement","src":"16907:47:18"}]}},{"expression":{"arguments":[{"id":5955,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5934,"src":"16987:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5954,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5953,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:18","typeDescriptions":{}}},"id":5956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":5938,"id":5957,"nodeType":"Return","src":"16974:19:18"}]},"documentation":{"id":5932,"nodeType":"StructuredDocumentation","src":"16515:272:18","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":5959,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:18","nodeType":"FunctionDefinition","parameters":{"id":5935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5934,"mutability":"mutable","name":"value","nameLocation":"16817:5:18","nodeType":"VariableDeclaration","scope":5959,"src":"16809:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5933,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:18"},"returnParameters":{"id":5938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5937,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5959,"src":"16847:5:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5936,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:18"},"scope":6829,"src":"16792:208:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5981,"nodeType":"Block","src":"17236:128:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5967,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5962,"src":"17250:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":5968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5975,"nodeType":"IfStatement","src":"17246:81:18","trueBody":{"id":5974,"nodeType":"Block","src":"17261:66:18","statements":[{"errorCall":{"arguments":[{"id":5971,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5962,"src":"17310:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5970,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5079,"src":"17282:27:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$_t_error_$","typeString":"function (int256) pure returns (error)"}},"id":5972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5973,"nodeType":"RevertStatement","src":"17275:41:18"}]}},{"expression":{"arguments":[{"id":5978,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5962,"src":"17351:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5977,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5976,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:18","typeDescriptions":{}}},"id":5979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5966,"id":5980,"nodeType":"Return","src":"17336:21:18"}]},"documentation":{"id":5960,"nodeType":"StructuredDocumentation","src":"17006:160:18","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":5982,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:18","nodeType":"FunctionDefinition","parameters":{"id":5963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5962,"mutability":"mutable","name":"value","nameLocation":"17197:5:18","nodeType":"VariableDeclaration","scope":5982,"src":"17190:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5961,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:18"},"returnParameters":{"id":5966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5965,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5982,"src":"17227:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5964,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:18"},"scope":6829,"src":"17171:193:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6007,"nodeType":"Block","src":"17761:150:18","statements":[{"expression":{"id":5995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5990,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5988,"src":"17771:10:18","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5993,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5985,"src":"17791:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5992,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":5991,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:18","typeDescriptions":{}}},"id":5994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:18","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":5996,"nodeType":"ExpressionStatement","src":"17771:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5997,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5988,"src":"17811:10:18","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5998,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5985,"src":"17825:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6006,"nodeType":"IfStatement","src":"17807:98:18","trueBody":{"id":6005,"nodeType":"Block","src":"17832:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":6001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:18","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":6002,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5985,"src":"17888:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6000,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"17853:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6004,"nodeType":"RevertStatement","src":"17846:48:18"}]}}]},"documentation":{"id":5983,"nodeType":"StructuredDocumentation","src":"17370:312:18","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":6008,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:18","nodeType":"FunctionDefinition","parameters":{"id":5986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5985,"mutability":"mutable","name":"value","nameLocation":"17712:5:18","nodeType":"VariableDeclaration","scope":6008,"src":"17705:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5984,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:18"},"returnParameters":{"id":5989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5988,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:18","nodeType":"VariableDeclaration","scope":6008,"src":"17742:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":5987,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:18","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:18"},"scope":6829,"src":"17687:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6033,"nodeType":"Block","src":"18308:150:18","statements":[{"expression":{"id":6021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6016,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6014,"src":"18318:10:18","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6019,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6011,"src":"18338:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6018,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":6017,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:18","typeDescriptions":{}}},"id":6020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:18","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":6022,"nodeType":"ExpressionStatement","src":"18318:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6023,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6014,"src":"18358:10:18","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6024,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6011,"src":"18372:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6032,"nodeType":"IfStatement","src":"18354:98:18","trueBody":{"id":6031,"nodeType":"Block","src":"18379:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":6027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:18","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":6028,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6011,"src":"18435:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6026,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"18400:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6030,"nodeType":"RevertStatement","src":"18393:48:18"}]}}]},"documentation":{"id":6009,"nodeType":"StructuredDocumentation","src":"17917:312:18","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":6034,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:18","nodeType":"FunctionDefinition","parameters":{"id":6012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6011,"mutability":"mutable","name":"value","nameLocation":"18259:5:18","nodeType":"VariableDeclaration","scope":6034,"src":"18252:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6010,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:18"},"returnParameters":{"id":6015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6014,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:18","nodeType":"VariableDeclaration","scope":6034,"src":"18289:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":6013,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:18","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:18"},"scope":6829,"src":"18234:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6059,"nodeType":"Block","src":"18855:150:18","statements":[{"expression":{"id":6047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6042,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6040,"src":"18865:10:18","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6045,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6037,"src":"18885:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":6043,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:18","typeDescriptions":{}}},"id":6046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:18","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":6048,"nodeType":"ExpressionStatement","src":"18865:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6049,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6040,"src":"18905:10:18","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6050,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6037,"src":"18919:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6058,"nodeType":"IfStatement","src":"18901:98:18","trueBody":{"id":6057,"nodeType":"Block","src":"18926:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":6053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:18","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":6054,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6037,"src":"18982:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6052,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"18947:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6056,"nodeType":"RevertStatement","src":"18940:48:18"}]}}]},"documentation":{"id":6035,"nodeType":"StructuredDocumentation","src":"18464:312:18","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":6060,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:18","nodeType":"FunctionDefinition","parameters":{"id":6038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6037,"mutability":"mutable","name":"value","nameLocation":"18806:5:18","nodeType":"VariableDeclaration","scope":6060,"src":"18799:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6036,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:18"},"returnParameters":{"id":6041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6040,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:18","nodeType":"VariableDeclaration","scope":6060,"src":"18836:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":6039,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:18","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:18"},"scope":6829,"src":"18781:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6085,"nodeType":"Block","src":"19402:150:18","statements":[{"expression":{"id":6073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6068,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6066,"src":"19412:10:18","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6071,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6063,"src":"19432:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":6069,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:18","typeDescriptions":{}}},"id":6072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:18","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":6074,"nodeType":"ExpressionStatement","src":"19412:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6075,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6066,"src":"19452:10:18","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6076,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6063,"src":"19466:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6084,"nodeType":"IfStatement","src":"19448:98:18","trueBody":{"id":6083,"nodeType":"Block","src":"19473:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":6079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:18","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":6080,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6063,"src":"19529:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6078,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"19494:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6082,"nodeType":"RevertStatement","src":"19487:48:18"}]}}]},"documentation":{"id":6061,"nodeType":"StructuredDocumentation","src":"19011:312:18","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":6086,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:18","nodeType":"FunctionDefinition","parameters":{"id":6064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6063,"mutability":"mutable","name":"value","nameLocation":"19353:5:18","nodeType":"VariableDeclaration","scope":6086,"src":"19346:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6062,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:18"},"returnParameters":{"id":6067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6066,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:18","nodeType":"VariableDeclaration","scope":6086,"src":"19383:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":6065,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:18","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:18"},"scope":6829,"src":"19328:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6111,"nodeType":"Block","src":"19949:150:18","statements":[{"expression":{"id":6099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6094,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6092,"src":"19959:10:18","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6097,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6089,"src":"19979:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6096,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":6095,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:18","typeDescriptions":{}}},"id":6098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:18","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":6100,"nodeType":"ExpressionStatement","src":"19959:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6101,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6092,"src":"19999:10:18","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6102,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6089,"src":"20013:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6110,"nodeType":"IfStatement","src":"19995:98:18","trueBody":{"id":6109,"nodeType":"Block","src":"20020:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":6105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:18","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":6106,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6089,"src":"20076:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6104,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"20041:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6108,"nodeType":"RevertStatement","src":"20034:48:18"}]}}]},"documentation":{"id":6087,"nodeType":"StructuredDocumentation","src":"19558:312:18","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":6112,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:18","nodeType":"FunctionDefinition","parameters":{"id":6090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6089,"mutability":"mutable","name":"value","nameLocation":"19900:5:18","nodeType":"VariableDeclaration","scope":6112,"src":"19893:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6088,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:18"},"returnParameters":{"id":6093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6092,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:18","nodeType":"VariableDeclaration","scope":6112,"src":"19930:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":6091,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:18","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:18"},"scope":6829,"src":"19875:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6137,"nodeType":"Block","src":"20496:150:18","statements":[{"expression":{"id":6125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6120,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6118,"src":"20506:10:18","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6123,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6115,"src":"20526:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6122,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":6121,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:18","typeDescriptions":{}}},"id":6124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:18","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":6126,"nodeType":"ExpressionStatement","src":"20506:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6127,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6118,"src":"20546:10:18","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6128,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6115,"src":"20560:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6136,"nodeType":"IfStatement","src":"20542:98:18","trueBody":{"id":6135,"nodeType":"Block","src":"20567:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":6131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:18","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":6132,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6115,"src":"20623:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6130,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"20588:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6134,"nodeType":"RevertStatement","src":"20581:48:18"}]}}]},"documentation":{"id":6113,"nodeType":"StructuredDocumentation","src":"20105:312:18","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":6138,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:18","nodeType":"FunctionDefinition","parameters":{"id":6116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6115,"mutability":"mutable","name":"value","nameLocation":"20447:5:18","nodeType":"VariableDeclaration","scope":6138,"src":"20440:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6114,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:18"},"returnParameters":{"id":6119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6118,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:18","nodeType":"VariableDeclaration","scope":6138,"src":"20477:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":6117,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:18","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:18"},"scope":6829,"src":"20422:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6163,"nodeType":"Block","src":"21043:150:18","statements":[{"expression":{"id":6151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6146,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6144,"src":"21053:10:18","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6149,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6141,"src":"21073:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6148,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":6147,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:18","typeDescriptions":{}}},"id":6150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:18","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":6152,"nodeType":"ExpressionStatement","src":"21053:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6153,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6144,"src":"21093:10:18","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6154,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6141,"src":"21107:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6162,"nodeType":"IfStatement","src":"21089:98:18","trueBody":{"id":6161,"nodeType":"Block","src":"21114:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":6157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:18","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":6158,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6141,"src":"21170:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6156,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"21135:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6160,"nodeType":"RevertStatement","src":"21128:48:18"}]}}]},"documentation":{"id":6139,"nodeType":"StructuredDocumentation","src":"20652:312:18","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":6164,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:18","nodeType":"FunctionDefinition","parameters":{"id":6142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6141,"mutability":"mutable","name":"value","nameLocation":"20994:5:18","nodeType":"VariableDeclaration","scope":6164,"src":"20987:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6140,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:18"},"returnParameters":{"id":6145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6144,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:18","nodeType":"VariableDeclaration","scope":6164,"src":"21024:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":6143,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:18","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:18"},"scope":6829,"src":"20969:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6189,"nodeType":"Block","src":"21590:150:18","statements":[{"expression":{"id":6177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6172,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"21600:10:18","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6175,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6167,"src":"21620:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6174,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":6173,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:18","typeDescriptions":{}}},"id":6176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:18","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":6178,"nodeType":"ExpressionStatement","src":"21600:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6179,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"21640:10:18","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6180,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6167,"src":"21654:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6188,"nodeType":"IfStatement","src":"21636:98:18","trueBody":{"id":6187,"nodeType":"Block","src":"21661:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":6183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:18","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":6184,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6167,"src":"21717:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6182,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"21682:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6186,"nodeType":"RevertStatement","src":"21675:48:18"}]}}]},"documentation":{"id":6165,"nodeType":"StructuredDocumentation","src":"21199:312:18","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":6190,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:18","nodeType":"FunctionDefinition","parameters":{"id":6168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6167,"mutability":"mutable","name":"value","nameLocation":"21541:5:18","nodeType":"VariableDeclaration","scope":6190,"src":"21534:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6166,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:18"},"returnParameters":{"id":6171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6170,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:18","nodeType":"VariableDeclaration","scope":6190,"src":"21571:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":6169,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:18","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:18"},"scope":6829,"src":"21516:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6215,"nodeType":"Block","src":"22137:150:18","statements":[{"expression":{"id":6203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6198,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6196,"src":"22147:10:18","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6201,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6193,"src":"22167:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6200,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":6199,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:18","typeDescriptions":{}}},"id":6202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:18","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":6204,"nodeType":"ExpressionStatement","src":"22147:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6205,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6196,"src":"22187:10:18","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6206,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6193,"src":"22201:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6214,"nodeType":"IfStatement","src":"22183:98:18","trueBody":{"id":6213,"nodeType":"Block","src":"22208:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":6209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:18","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":6210,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6193,"src":"22264:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6208,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"22229:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6212,"nodeType":"RevertStatement","src":"22222:48:18"}]}}]},"documentation":{"id":6191,"nodeType":"StructuredDocumentation","src":"21746:312:18","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":6216,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:18","nodeType":"FunctionDefinition","parameters":{"id":6194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6193,"mutability":"mutable","name":"value","nameLocation":"22088:5:18","nodeType":"VariableDeclaration","scope":6216,"src":"22081:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6192,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:18"},"returnParameters":{"id":6197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6196,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:18","nodeType":"VariableDeclaration","scope":6216,"src":"22118:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":6195,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:18","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:18"},"scope":6829,"src":"22063:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6241,"nodeType":"Block","src":"22684:150:18","statements":[{"expression":{"id":6229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6224,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6222,"src":"22694:10:18","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6227,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6219,"src":"22714:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6226,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":6225,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:18","typeDescriptions":{}}},"id":6228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:18","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":6230,"nodeType":"ExpressionStatement","src":"22694:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6231,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6222,"src":"22734:10:18","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6232,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6219,"src":"22748:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6240,"nodeType":"IfStatement","src":"22730:98:18","trueBody":{"id":6239,"nodeType":"Block","src":"22755:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":6235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:18","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":6236,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6219,"src":"22811:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6234,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"22776:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6238,"nodeType":"RevertStatement","src":"22769:48:18"}]}}]},"documentation":{"id":6217,"nodeType":"StructuredDocumentation","src":"22293:312:18","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":6242,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:18","nodeType":"FunctionDefinition","parameters":{"id":6220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6219,"mutability":"mutable","name":"value","nameLocation":"22635:5:18","nodeType":"VariableDeclaration","scope":6242,"src":"22628:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6218,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:18"},"returnParameters":{"id":6223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6222,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:18","nodeType":"VariableDeclaration","scope":6242,"src":"22665:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":6221,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:18","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:18"},"scope":6829,"src":"22610:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6267,"nodeType":"Block","src":"23231:150:18","statements":[{"expression":{"id":6255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6250,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6248,"src":"23241:10:18","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6253,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6245,"src":"23261:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6252,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":6251,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:18","typeDescriptions":{}}},"id":6254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:18","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":6256,"nodeType":"ExpressionStatement","src":"23241:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6257,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6248,"src":"23281:10:18","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6258,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6245,"src":"23295:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6266,"nodeType":"IfStatement","src":"23277:98:18","trueBody":{"id":6265,"nodeType":"Block","src":"23302:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":6261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:18","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":6262,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6245,"src":"23358:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6260,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"23323:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6264,"nodeType":"RevertStatement","src":"23316:48:18"}]}}]},"documentation":{"id":6243,"nodeType":"StructuredDocumentation","src":"22840:312:18","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":6268,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:18","nodeType":"FunctionDefinition","parameters":{"id":6246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6245,"mutability":"mutable","name":"value","nameLocation":"23182:5:18","nodeType":"VariableDeclaration","scope":6268,"src":"23175:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6244,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:18"},"returnParameters":{"id":6249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6248,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:18","nodeType":"VariableDeclaration","scope":6268,"src":"23212:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":6247,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:18","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:18"},"scope":6829,"src":"23157:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6293,"nodeType":"Block","src":"23778:150:18","statements":[{"expression":{"id":6281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6276,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6274,"src":"23788:10:18","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6279,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6271,"src":"23808:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6278,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":6277,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:18","typeDescriptions":{}}},"id":6280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:18","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":6282,"nodeType":"ExpressionStatement","src":"23788:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6283,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6274,"src":"23828:10:18","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6284,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6271,"src":"23842:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6292,"nodeType":"IfStatement","src":"23824:98:18","trueBody":{"id":6291,"nodeType":"Block","src":"23849:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":6287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:18","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":6288,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6271,"src":"23905:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6286,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"23870:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6290,"nodeType":"RevertStatement","src":"23863:48:18"}]}}]},"documentation":{"id":6269,"nodeType":"StructuredDocumentation","src":"23387:312:18","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":6294,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:18","nodeType":"FunctionDefinition","parameters":{"id":6272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6271,"mutability":"mutable","name":"value","nameLocation":"23729:5:18","nodeType":"VariableDeclaration","scope":6294,"src":"23722:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6270,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:18"},"returnParameters":{"id":6275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6274,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:18","nodeType":"VariableDeclaration","scope":6294,"src":"23759:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":6273,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:18","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:18"},"scope":6829,"src":"23704:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6319,"nodeType":"Block","src":"24325:150:18","statements":[{"expression":{"id":6307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6302,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6300,"src":"24335:10:18","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6305,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6297,"src":"24355:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6304,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":6303,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:18","typeDescriptions":{}}},"id":6306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:18","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":6308,"nodeType":"ExpressionStatement","src":"24335:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6309,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6300,"src":"24375:10:18","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6310,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6297,"src":"24389:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6318,"nodeType":"IfStatement","src":"24371:98:18","trueBody":{"id":6317,"nodeType":"Block","src":"24396:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":6313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:18","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":6314,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6297,"src":"24452:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6312,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"24417:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6316,"nodeType":"RevertStatement","src":"24410:48:18"}]}}]},"documentation":{"id":6295,"nodeType":"StructuredDocumentation","src":"23934:312:18","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":6320,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:18","nodeType":"FunctionDefinition","parameters":{"id":6298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6297,"mutability":"mutable","name":"value","nameLocation":"24276:5:18","nodeType":"VariableDeclaration","scope":6320,"src":"24269:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6296,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:18"},"returnParameters":{"id":6301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6300,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:18","nodeType":"VariableDeclaration","scope":6320,"src":"24306:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":6299,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:18","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:18"},"scope":6829,"src":"24251:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6345,"nodeType":"Block","src":"24872:150:18","statements":[{"expression":{"id":6333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6328,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6326,"src":"24882:10:18","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6331,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6323,"src":"24902:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6330,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":6329,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:18","typeDescriptions":{}}},"id":6332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:18","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":6334,"nodeType":"ExpressionStatement","src":"24882:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6335,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6326,"src":"24922:10:18","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6336,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6323,"src":"24936:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6344,"nodeType":"IfStatement","src":"24918:98:18","trueBody":{"id":6343,"nodeType":"Block","src":"24943:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":6339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:18","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":6340,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6323,"src":"24999:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6338,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"24964:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6342,"nodeType":"RevertStatement","src":"24957:48:18"}]}}]},"documentation":{"id":6321,"nodeType":"StructuredDocumentation","src":"24481:312:18","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":6346,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:18","nodeType":"FunctionDefinition","parameters":{"id":6324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6323,"mutability":"mutable","name":"value","nameLocation":"24823:5:18","nodeType":"VariableDeclaration","scope":6346,"src":"24816:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6322,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:18"},"returnParameters":{"id":6327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6326,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:18","nodeType":"VariableDeclaration","scope":6346,"src":"24853:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":6325,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:18","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:18"},"scope":6829,"src":"24798:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6371,"nodeType":"Block","src":"25419:150:18","statements":[{"expression":{"id":6359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6354,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6352,"src":"25429:10:18","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6357,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6349,"src":"25449:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":6355,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:18","typeDescriptions":{}}},"id":6358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:18","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":6360,"nodeType":"ExpressionStatement","src":"25429:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6361,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6352,"src":"25469:10:18","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6362,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6349,"src":"25483:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6370,"nodeType":"IfStatement","src":"25465:98:18","trueBody":{"id":6369,"nodeType":"Block","src":"25490:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":6365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:18","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":6366,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6349,"src":"25546:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6364,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"25511:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6368,"nodeType":"RevertStatement","src":"25504:48:18"}]}}]},"documentation":{"id":6347,"nodeType":"StructuredDocumentation","src":"25028:312:18","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":6372,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:18","nodeType":"FunctionDefinition","parameters":{"id":6350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6349,"mutability":"mutable","name":"value","nameLocation":"25370:5:18","nodeType":"VariableDeclaration","scope":6372,"src":"25363:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6348,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:18"},"returnParameters":{"id":6353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6352,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:18","nodeType":"VariableDeclaration","scope":6372,"src":"25400:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":6351,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:18","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:18"},"scope":6829,"src":"25345:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6397,"nodeType":"Block","src":"25966:150:18","statements":[{"expression":{"id":6385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6380,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6378,"src":"25976:10:18","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6383,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6375,"src":"25996:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6382,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":6381,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:18","typeDescriptions":{}}},"id":6384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:18","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":6386,"nodeType":"ExpressionStatement","src":"25976:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6387,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6378,"src":"26016:10:18","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6388,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6375,"src":"26030:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6396,"nodeType":"IfStatement","src":"26012:98:18","trueBody":{"id":6395,"nodeType":"Block","src":"26037:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":6391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:18","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":6392,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6375,"src":"26093:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6390,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"26058:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6394,"nodeType":"RevertStatement","src":"26051:48:18"}]}}]},"documentation":{"id":6373,"nodeType":"StructuredDocumentation","src":"25575:312:18","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":6398,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:18","nodeType":"FunctionDefinition","parameters":{"id":6376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6375,"mutability":"mutable","name":"value","nameLocation":"25917:5:18","nodeType":"VariableDeclaration","scope":6398,"src":"25910:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6374,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:18"},"returnParameters":{"id":6379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6378,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:18","nodeType":"VariableDeclaration","scope":6398,"src":"25947:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":6377,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:18","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:18"},"scope":6829,"src":"25892:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6423,"nodeType":"Block","src":"26513:150:18","statements":[{"expression":{"id":6411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6406,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6404,"src":"26523:10:18","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6409,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6401,"src":"26543:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":6407,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:18","typeDescriptions":{}}},"id":6410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:18","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":6412,"nodeType":"ExpressionStatement","src":"26523:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6413,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6404,"src":"26563:10:18","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6414,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6401,"src":"26577:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6422,"nodeType":"IfStatement","src":"26559:98:18","trueBody":{"id":6421,"nodeType":"Block","src":"26584:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":6417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:18","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":6418,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6401,"src":"26640:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6416,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"26605:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6420,"nodeType":"RevertStatement","src":"26598:48:18"}]}}]},"documentation":{"id":6399,"nodeType":"StructuredDocumentation","src":"26122:312:18","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":6424,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:18","nodeType":"FunctionDefinition","parameters":{"id":6402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6401,"mutability":"mutable","name":"value","nameLocation":"26464:5:18","nodeType":"VariableDeclaration","scope":6424,"src":"26457:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6400,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:18"},"returnParameters":{"id":6405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6404,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:18","nodeType":"VariableDeclaration","scope":6424,"src":"26494:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":6403,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:18","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:18"},"scope":6829,"src":"26439:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6449,"nodeType":"Block","src":"27060:150:18","statements":[{"expression":{"id":6437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6432,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6430,"src":"27070:10:18","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6435,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6427,"src":"27090:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6434,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":6433,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:18","typeDescriptions":{}}},"id":6436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:18","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":6438,"nodeType":"ExpressionStatement","src":"27070:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6439,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6430,"src":"27110:10:18","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6440,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6427,"src":"27124:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6448,"nodeType":"IfStatement","src":"27106:98:18","trueBody":{"id":6447,"nodeType":"Block","src":"27131:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":6443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:18","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":6444,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6427,"src":"27187:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6442,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"27152:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6446,"nodeType":"RevertStatement","src":"27145:48:18"}]}}]},"documentation":{"id":6425,"nodeType":"StructuredDocumentation","src":"26669:312:18","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":6450,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:18","nodeType":"FunctionDefinition","parameters":{"id":6428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6427,"mutability":"mutable","name":"value","nameLocation":"27011:5:18","nodeType":"VariableDeclaration","scope":6450,"src":"27004:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6426,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:18"},"returnParameters":{"id":6431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6430,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:18","nodeType":"VariableDeclaration","scope":6450,"src":"27041:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":6429,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:18","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:18"},"scope":6829,"src":"26986:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6475,"nodeType":"Block","src":"27607:150:18","statements":[{"expression":{"id":6463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6458,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6456,"src":"27617:10:18","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6461,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6453,"src":"27637:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6460,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":6459,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:18","typeDescriptions":{}}},"id":6462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:18","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":6464,"nodeType":"ExpressionStatement","src":"27617:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6465,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6456,"src":"27657:10:18","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6466,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6453,"src":"27671:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6474,"nodeType":"IfStatement","src":"27653:98:18","trueBody":{"id":6473,"nodeType":"Block","src":"27678:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":6469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:18","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":6470,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6453,"src":"27734:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6468,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"27699:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6472,"nodeType":"RevertStatement","src":"27692:48:18"}]}}]},"documentation":{"id":6451,"nodeType":"StructuredDocumentation","src":"27216:312:18","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":6476,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:18","nodeType":"FunctionDefinition","parameters":{"id":6454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6453,"mutability":"mutable","name":"value","nameLocation":"27558:5:18","nodeType":"VariableDeclaration","scope":6476,"src":"27551:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6452,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:18"},"returnParameters":{"id":6457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6456,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:18","nodeType":"VariableDeclaration","scope":6476,"src":"27588:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":6455,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:18","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:18"},"scope":6829,"src":"27533:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6501,"nodeType":"Block","src":"28147:148:18","statements":[{"expression":{"id":6489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6484,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6482,"src":"28157:10:18","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6487,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6479,"src":"28176:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6486,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":6485,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:18","typeDescriptions":{}}},"id":6488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:18","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":6490,"nodeType":"ExpressionStatement","src":"28157:25:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6491,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6482,"src":"28196:10:18","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6492,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6479,"src":"28210:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6500,"nodeType":"IfStatement","src":"28192:97:18","trueBody":{"id":6499,"nodeType":"Block","src":"28217:72:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":6495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:18","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":6496,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6479,"src":"28272:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6494,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"28238:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6498,"nodeType":"RevertStatement","src":"28231:47:18"}]}}]},"documentation":{"id":6477,"nodeType":"StructuredDocumentation","src":"27763:307:18","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":6502,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:18","nodeType":"FunctionDefinition","parameters":{"id":6480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6479,"mutability":"mutable","name":"value","nameLocation":"28099:5:18","nodeType":"VariableDeclaration","scope":6502,"src":"28092:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6478,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:18"},"returnParameters":{"id":6483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6482,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:18","nodeType":"VariableDeclaration","scope":6502,"src":"28129:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":6481,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:18","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:18"},"scope":6829,"src":"28075:220:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6527,"nodeType":"Block","src":"28685:148:18","statements":[{"expression":{"id":6515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6510,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6508,"src":"28695:10:18","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6513,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6505,"src":"28714:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6512,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":6511,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:18","typeDescriptions":{}}},"id":6514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:18","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":6516,"nodeType":"ExpressionStatement","src":"28695:25:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6517,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6508,"src":"28734:10:18","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6518,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6505,"src":"28748:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6526,"nodeType":"IfStatement","src":"28730:97:18","trueBody":{"id":6525,"nodeType":"Block","src":"28755:72:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":6521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:18","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":6522,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6505,"src":"28810:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6520,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"28776:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6524,"nodeType":"RevertStatement","src":"28769:47:18"}]}}]},"documentation":{"id":6503,"nodeType":"StructuredDocumentation","src":"28301:307:18","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":6528,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:18","nodeType":"FunctionDefinition","parameters":{"id":6506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6505,"mutability":"mutable","name":"value","nameLocation":"28637:5:18","nodeType":"VariableDeclaration","scope":6528,"src":"28630:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6504,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:18"},"returnParameters":{"id":6509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6508,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:18","nodeType":"VariableDeclaration","scope":6528,"src":"28667:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":6507,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:18","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:18"},"scope":6829,"src":"28613:220:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6553,"nodeType":"Block","src":"29223:148:18","statements":[{"expression":{"id":6541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6536,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6534,"src":"29233:10:18","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6539,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6531,"src":"29252:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6538,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":6537,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:18","typeDescriptions":{}}},"id":6540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:18","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":6542,"nodeType":"ExpressionStatement","src":"29233:25:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6543,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6534,"src":"29272:10:18","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6544,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6531,"src":"29286:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6552,"nodeType":"IfStatement","src":"29268:97:18","trueBody":{"id":6551,"nodeType":"Block","src":"29293:72:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":6547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:18","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":6548,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6531,"src":"29348:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6546,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"29314:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6550,"nodeType":"RevertStatement","src":"29307:47:18"}]}}]},"documentation":{"id":6529,"nodeType":"StructuredDocumentation","src":"28839:307:18","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":6554,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:18","nodeType":"FunctionDefinition","parameters":{"id":6532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6531,"mutability":"mutable","name":"value","nameLocation":"29175:5:18","nodeType":"VariableDeclaration","scope":6554,"src":"29168:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6530,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:18"},"returnParameters":{"id":6535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6534,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:18","nodeType":"VariableDeclaration","scope":6554,"src":"29205:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":6533,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:18","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:18"},"scope":6829,"src":"29151:220:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6579,"nodeType":"Block","src":"29761:148:18","statements":[{"expression":{"id":6567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6562,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6560,"src":"29771:10:18","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6565,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6557,"src":"29790:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":6563,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:18","typeDescriptions":{}}},"id":6566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:18","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":6568,"nodeType":"ExpressionStatement","src":"29771:25:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6569,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6560,"src":"29810:10:18","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6570,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6557,"src":"29824:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6578,"nodeType":"IfStatement","src":"29806:97:18","trueBody":{"id":6577,"nodeType":"Block","src":"29831:72:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":6573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:18","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":6574,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6557,"src":"29886:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6572,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"29852:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6576,"nodeType":"RevertStatement","src":"29845:47:18"}]}}]},"documentation":{"id":6555,"nodeType":"StructuredDocumentation","src":"29377:307:18","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":6580,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:18","nodeType":"FunctionDefinition","parameters":{"id":6558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6557,"mutability":"mutable","name":"value","nameLocation":"29713:5:18","nodeType":"VariableDeclaration","scope":6580,"src":"29706:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6556,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:18"},"returnParameters":{"id":6561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6560,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:18","nodeType":"VariableDeclaration","scope":6580,"src":"29743:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":6559,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:18","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:18"},"scope":6829,"src":"29689:220:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6605,"nodeType":"Block","src":"30299:148:18","statements":[{"expression":{"id":6593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6588,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6586,"src":"30309:10:18","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6591,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6583,"src":"30328:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6590,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":6589,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:18","typeDescriptions":{}}},"id":6592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:18","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":6594,"nodeType":"ExpressionStatement","src":"30309:25:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6595,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6586,"src":"30348:10:18","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6583,"src":"30362:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6604,"nodeType":"IfStatement","src":"30344:97:18","trueBody":{"id":6603,"nodeType":"Block","src":"30369:72:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":6599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":6600,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6583,"src":"30424:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6598,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"30390:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6602,"nodeType":"RevertStatement","src":"30383:47:18"}]}}]},"documentation":{"id":6581,"nodeType":"StructuredDocumentation","src":"29915:307:18","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":6606,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:18","nodeType":"FunctionDefinition","parameters":{"id":6584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6583,"mutability":"mutable","name":"value","nameLocation":"30251:5:18","nodeType":"VariableDeclaration","scope":6606,"src":"30244:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6582,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:18"},"returnParameters":{"id":6587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6586,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:18","nodeType":"VariableDeclaration","scope":6606,"src":"30281:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":6585,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:18","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:18"},"scope":6829,"src":"30227:220:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6631,"nodeType":"Block","src":"30837:148:18","statements":[{"expression":{"id":6619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6614,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6612,"src":"30847:10:18","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6617,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6609,"src":"30866:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6616,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":6615,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:18","typeDescriptions":{}}},"id":6618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:18","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":6620,"nodeType":"ExpressionStatement","src":"30847:25:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6621,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6612,"src":"30886:10:18","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6622,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6609,"src":"30900:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6630,"nodeType":"IfStatement","src":"30882:97:18","trueBody":{"id":6629,"nodeType":"Block","src":"30907:72:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":6625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:18","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":6626,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6609,"src":"30962:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6624,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"30928:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6628,"nodeType":"RevertStatement","src":"30921:47:18"}]}}]},"documentation":{"id":6607,"nodeType":"StructuredDocumentation","src":"30453:307:18","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":6632,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:18","nodeType":"FunctionDefinition","parameters":{"id":6610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6609,"mutability":"mutable","name":"value","nameLocation":"30789:5:18","nodeType":"VariableDeclaration","scope":6632,"src":"30782:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6608,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:18"},"returnParameters":{"id":6613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6612,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:18","nodeType":"VariableDeclaration","scope":6632,"src":"30819:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":6611,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:18","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:18"},"scope":6829,"src":"30765:220:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6657,"nodeType":"Block","src":"31375:148:18","statements":[{"expression":{"id":6645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6640,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6638,"src":"31385:10:18","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6643,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6635,"src":"31404:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6642,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":6641,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:18","typeDescriptions":{}}},"id":6644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:18","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":6646,"nodeType":"ExpressionStatement","src":"31385:25:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6647,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6638,"src":"31424:10:18","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6648,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6635,"src":"31438:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6656,"nodeType":"IfStatement","src":"31420:97:18","trueBody":{"id":6655,"nodeType":"Block","src":"31445:72:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":6651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:18","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":6652,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6635,"src":"31500:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6650,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"31466:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6654,"nodeType":"RevertStatement","src":"31459:47:18"}]}}]},"documentation":{"id":6633,"nodeType":"StructuredDocumentation","src":"30991:307:18","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":6658,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:18","nodeType":"FunctionDefinition","parameters":{"id":6636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6635,"mutability":"mutable","name":"value","nameLocation":"31327:5:18","nodeType":"VariableDeclaration","scope":6658,"src":"31320:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6634,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:18"},"returnParameters":{"id":6639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6638,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:18","nodeType":"VariableDeclaration","scope":6658,"src":"31357:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":6637,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:18","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:18"},"scope":6829,"src":"31303:220:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6683,"nodeType":"Block","src":"31913:148:18","statements":[{"expression":{"id":6671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6666,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6664,"src":"31923:10:18","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6669,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6661,"src":"31942:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6668,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":6667,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:18","typeDescriptions":{}}},"id":6670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:18","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":6672,"nodeType":"ExpressionStatement","src":"31923:25:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6673,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6664,"src":"31962:10:18","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6674,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6661,"src":"31976:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6682,"nodeType":"IfStatement","src":"31958:97:18","trueBody":{"id":6681,"nodeType":"Block","src":"31983:72:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:18","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6678,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6661,"src":"32038:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6676,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"32004:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6680,"nodeType":"RevertStatement","src":"31997:47:18"}]}}]},"documentation":{"id":6659,"nodeType":"StructuredDocumentation","src":"31529:307:18","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6684,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:18","nodeType":"FunctionDefinition","parameters":{"id":6662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6661,"mutability":"mutable","name":"value","nameLocation":"31865:5:18","nodeType":"VariableDeclaration","scope":6684,"src":"31858:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6660,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:18"},"returnParameters":{"id":6665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6664,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:18","nodeType":"VariableDeclaration","scope":6684,"src":"31895:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":6663,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:18","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:18"},"scope":6829,"src":"31841:220:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6709,"nodeType":"Block","src":"32451:148:18","statements":[{"expression":{"id":6697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6692,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6690,"src":"32461:10:18","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6695,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6687,"src":"32480:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6694,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":6693,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:18","typeDescriptions":{}}},"id":6696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:18","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":6698,"nodeType":"ExpressionStatement","src":"32461:25:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6699,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6690,"src":"32500:10:18","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6700,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6687,"src":"32514:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6708,"nodeType":"IfStatement","src":"32496:97:18","trueBody":{"id":6707,"nodeType":"Block","src":"32521:72:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6704,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6687,"src":"32576:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6702,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"32542:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6706,"nodeType":"RevertStatement","src":"32535:47:18"}]}}]},"documentation":{"id":6685,"nodeType":"StructuredDocumentation","src":"32067:307:18","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6710,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:18","nodeType":"FunctionDefinition","parameters":{"id":6688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6687,"mutability":"mutable","name":"value","nameLocation":"32403:5:18","nodeType":"VariableDeclaration","scope":6710,"src":"32396:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6686,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:18"},"returnParameters":{"id":6691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6690,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:18","nodeType":"VariableDeclaration","scope":6710,"src":"32433:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":6689,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:18","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:18"},"scope":6829,"src":"32379:220:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6735,"nodeType":"Block","src":"32989:148:18","statements":[{"expression":{"id":6723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6718,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6716,"src":"32999:10:18","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6721,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6713,"src":"33018:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6720,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":6719,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:18","typeDescriptions":{}}},"id":6722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:18","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":6724,"nodeType":"ExpressionStatement","src":"32999:25:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6725,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6716,"src":"33038:10:18","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6726,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6713,"src":"33052:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6734,"nodeType":"IfStatement","src":"33034:97:18","trueBody":{"id":6733,"nodeType":"Block","src":"33059:72:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:18","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6730,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6713,"src":"33114:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6728,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"33080:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6732,"nodeType":"RevertStatement","src":"33073:47:18"}]}}]},"documentation":{"id":6711,"nodeType":"StructuredDocumentation","src":"32605:307:18","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6736,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:18","nodeType":"FunctionDefinition","parameters":{"id":6714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6713,"mutability":"mutable","name":"value","nameLocation":"32941:5:18","nodeType":"VariableDeclaration","scope":6736,"src":"32934:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6712,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:18"},"returnParameters":{"id":6717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6716,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:18","nodeType":"VariableDeclaration","scope":6736,"src":"32971:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6715,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:18","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:18"},"scope":6829,"src":"32917:220:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6761,"nodeType":"Block","src":"33527:148:18","statements":[{"expression":{"id":6749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6744,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6742,"src":"33537:10:18","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6747,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6739,"src":"33556:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6746,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":6745,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:18","typeDescriptions":{}}},"id":6748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:18","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":6750,"nodeType":"ExpressionStatement","src":"33537:25:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6751,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6742,"src":"33576:10:18","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6752,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6739,"src":"33590:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6760,"nodeType":"IfStatement","src":"33572:97:18","trueBody":{"id":6759,"nodeType":"Block","src":"33597:72:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6756,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6739,"src":"33652:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6754,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"33618:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6758,"nodeType":"RevertStatement","src":"33611:47:18"}]}}]},"documentation":{"id":6737,"nodeType":"StructuredDocumentation","src":"33143:307:18","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6762,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:18","nodeType":"FunctionDefinition","parameters":{"id":6740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6739,"mutability":"mutable","name":"value","nameLocation":"33479:5:18","nodeType":"VariableDeclaration","scope":6762,"src":"33472:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6738,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:18"},"returnParameters":{"id":6743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6742,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:18","nodeType":"VariableDeclaration","scope":6762,"src":"33509:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":6741,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:18","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:18"},"scope":6829,"src":"33455:220:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6787,"nodeType":"Block","src":"34058:146:18","statements":[{"expression":{"id":6775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6770,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6768,"src":"34068:10:18","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6773,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6765,"src":"34086:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6772,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":6771,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:18","typeDescriptions":{}}},"id":6774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:18","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":6776,"nodeType":"ExpressionStatement","src":"34068:24:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6777,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6768,"src":"34106:10:18","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6778,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6765,"src":"34120:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6786,"nodeType":"IfStatement","src":"34102:96:18","trueBody":{"id":6785,"nodeType":"Block","src":"34127:71:18","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6782,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6765,"src":"34181:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6780,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"34148:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6784,"nodeType":"RevertStatement","src":"34141:46:18"}]}}]},"documentation":{"id":6763,"nodeType":"StructuredDocumentation","src":"33681:302:18","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6788,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:18","nodeType":"FunctionDefinition","parameters":{"id":6766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6765,"mutability":"mutable","name":"value","nameLocation":"34011:5:18","nodeType":"VariableDeclaration","scope":6788,"src":"34004:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6764,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:18"},"returnParameters":{"id":6769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6768,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:18","nodeType":"VariableDeclaration","scope":6788,"src":"34041:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":6767,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:18","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:18"},"scope":6829,"src":"33988:216:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6817,"nodeType":"Block","src":"34444:250:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6796,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6791,"src":"34557:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":6801,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6800,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":6799,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":6803,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:18","memberName":"max","nodeType":"MemberAccess","src":"34573:16:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6798,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6797,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:18","typeDescriptions":{}}},"id":6804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6811,"nodeType":"IfStatement","src":"34553:105:18","trueBody":{"id":6810,"nodeType":"Block","src":"34592:66:18","statements":[{"errorCall":{"arguments":[{"id":6807,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6791,"src":"34641:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6806,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5091,"src":"34613:27:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":6808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6809,"nodeType":"RevertStatement","src":"34606:41:18"}]}},{"expression":{"arguments":[{"id":6814,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6791,"src":"34681:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6813,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6812,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:18","typeDescriptions":{}}},"id":6815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6795,"id":6816,"nodeType":"Return","src":"34667:20:18"}]},"documentation":{"id":6789,"nodeType":"StructuredDocumentation","src":"34210:165:18","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":6818,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:18","nodeType":"FunctionDefinition","parameters":{"id":6792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6791,"mutability":"mutable","name":"value","nameLocation":"34406:5:18","nodeType":"VariableDeclaration","scope":6818,"src":"34398:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6790,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:18"},"returnParameters":{"id":6795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6794,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6818,"src":"34436:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6793,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:18"},"scope":6829,"src":"34380:314:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6827,"nodeType":"Block","src":"34853:87:18","statements":[{"AST":{"nativeSrc":"34888:46:18","nodeType":"YulBlock","src":"34888:46:18","statements":[{"nativeSrc":"34902:22:18","nodeType":"YulAssignment","src":"34902:22:18","value":{"arguments":[{"arguments":[{"name":"b","nativeSrc":"34921:1:18","nodeType":"YulIdentifier","src":"34921:1:18"}],"functionName":{"name":"iszero","nativeSrc":"34914:6:18","nodeType":"YulIdentifier","src":"34914:6:18"},"nativeSrc":"34914:9:18","nodeType":"YulFunctionCall","src":"34914:9:18"}],"functionName":{"name":"iszero","nativeSrc":"34907:6:18","nodeType":"YulIdentifier","src":"34907:6:18"},"nativeSrc":"34907:17:18","nodeType":"YulFunctionCall","src":"34907:17:18"},"variableNames":[{"name":"u","nativeSrc":"34902:1:18","nodeType":"YulIdentifier","src":"34902:1:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6821,"isOffset":false,"isSlot":false,"src":"34921:1:18","valueSize":1},{"declaration":6824,"isOffset":false,"isSlot":false,"src":"34902:1:18","valueSize":1}],"flags":["memory-safe"],"id":6826,"nodeType":"InlineAssembly","src":"34863:71:18"}]},"documentation":{"id":6819,"nodeType":"StructuredDocumentation","src":"34700:90:18","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":6828,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:18","nodeType":"FunctionDefinition","parameters":{"id":6822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6821,"mutability":"mutable","name":"b","nameLocation":"34816:1:18","nodeType":"VariableDeclaration","scope":6828,"src":"34811:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6820,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:18"},"returnParameters":{"id":6825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6824,"mutability":"mutable","name":"u","nameLocation":"34850:1:18","nodeType":"VariableDeclaration","scope":6828,"src":"34842:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6823,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:18"},"scope":6829,"src":"34795:145:18","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6830,"src":"769:34173:18","usedErrors":[5074,5079,5086,5091],"usedEvents":[]}],"src":"192:34751:18"},"id":18},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[6829],"SignedMath":[6973]},"id":6974,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6831,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:19"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":6833,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6974,"sourceUnit":6830,"src":"135:40:19","symbolAliases":[{"foreign":{"id":6832,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"143:8:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":6834,"nodeType":"StructuredDocumentation","src":"177:80:19","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":6973,"linearizedBaseContracts":[6973],"name":"SignedMath","nameLocation":"266:10:19","nodeType":"ContractDefinition","nodes":[{"body":{"id":6863,"nodeType":"Block","src":"746:215:19","statements":[{"id":6862,"nodeType":"UncheckedBlock","src":"756:199:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6846,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6841,"src":"894:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6847,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6839,"src":"900:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6848,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6841,"src":"904:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6850,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":6855,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6837,"src":"932:9:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6853,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"916:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6829_$","typeString":"type(library SafeCast)"}},"id":6854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6828,"src":"916:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6852,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6851,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:19","typeDescriptions":{}}},"id":6857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6859,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6845,"id":6861,"nodeType":"Return","src":"887:57:19"}]}]},"documentation":{"id":6835,"nodeType":"StructuredDocumentation","src":"283:374:19","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":6864,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:19","nodeType":"FunctionDefinition","parameters":{"id":6842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6837,"mutability":"mutable","name":"condition","nameLocation":"684:9:19","nodeType":"VariableDeclaration","scope":6864,"src":"679:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6836,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6839,"mutability":"mutable","name":"a","nameLocation":"702:1:19","nodeType":"VariableDeclaration","scope":6864,"src":"695:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6838,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6841,"mutability":"mutable","name":"b","nameLocation":"712:1:19","nodeType":"VariableDeclaration","scope":6864,"src":"705:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6840,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:19"},"returnParameters":{"id":6845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6844,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6864,"src":"738:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6843,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:19"},"scope":6973,"src":"662:299:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6882,"nodeType":"Block","src":"1102:44:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6875,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6867,"src":"1127:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6876,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6869,"src":"1131:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6878,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6867,"src":"1134:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":6879,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6869,"src":"1137:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6874,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6864,"src":"1119:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":6880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6873,"id":6881,"nodeType":"Return","src":"1112:27:19"}]},"documentation":{"id":6865,"nodeType":"StructuredDocumentation","src":"967:66:19","text":" @dev Returns the largest of two signed numbers."},"id":6883,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:19","nodeType":"FunctionDefinition","parameters":{"id":6870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6867,"mutability":"mutable","name":"a","nameLocation":"1058:1:19","nodeType":"VariableDeclaration","scope":6883,"src":"1051:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6866,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6869,"mutability":"mutable","name":"b","nameLocation":"1068:1:19","nodeType":"VariableDeclaration","scope":6883,"src":"1061:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6868,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:19"},"returnParameters":{"id":6873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6872,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6883,"src":"1094:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6871,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:19"},"scope":6973,"src":"1038:108:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6901,"nodeType":"Block","src":"1288:44:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6894,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6886,"src":"1313:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6895,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6888,"src":"1317:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6897,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6886,"src":"1320:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":6898,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6888,"src":"1323:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6893,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6864,"src":"1305:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":6899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6892,"id":6900,"nodeType":"Return","src":"1298:27:19"}]},"documentation":{"id":6884,"nodeType":"StructuredDocumentation","src":"1152:67:19","text":" @dev Returns the smallest of two signed numbers."},"id":6902,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:19","nodeType":"FunctionDefinition","parameters":{"id":6889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6886,"mutability":"mutable","name":"a","nameLocation":"1244:1:19","nodeType":"VariableDeclaration","scope":6902,"src":"1237:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6885,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6888,"mutability":"mutable","name":"b","nameLocation":"1254:1:19","nodeType":"VariableDeclaration","scope":6902,"src":"1247:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6887,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:19"},"returnParameters":{"id":6892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6891,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6902,"src":"1280:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6890,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:19"},"scope":6973,"src":"1224:108:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6945,"nodeType":"Block","src":"1537:162:19","statements":[{"assignments":[6913],"declarations":[{"constant":false,"id":6913,"mutability":"mutable","name":"x","nameLocation":"1606:1:19","nodeType":"VariableDeclaration","scope":6945,"src":"1599:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6912,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6926,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6914,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6905,"src":"1611:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":6915,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6907,"src":"1615:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6917,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6918,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6905,"src":"1622:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6919,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6907,"src":"1626:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6921,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6924,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:19"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6927,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6913,"src":"1651:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6932,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6913,"src":"1671:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6931,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6930,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:19","typeDescriptions":{}}},"id":6933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":6934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:19","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6929,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6928,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:19","typeDescriptions":{}}},"id":6936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6937,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6905,"src":"1685:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6938,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6907,"src":"1689:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6940,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6942,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6911,"id":6944,"nodeType":"Return","src":"1644:48:19"}]},"documentation":{"id":6903,"nodeType":"StructuredDocumentation","src":"1338:126:19","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":6946,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:19","nodeType":"FunctionDefinition","parameters":{"id":6908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6905,"mutability":"mutable","name":"a","nameLocation":"1493:1:19","nodeType":"VariableDeclaration","scope":6946,"src":"1486:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6904,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6907,"mutability":"mutable","name":"b","nameLocation":"1503:1:19","nodeType":"VariableDeclaration","scope":6946,"src":"1496:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6906,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:19"},"returnParameters":{"id":6911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6910,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6946,"src":"1529:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6909,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:19"},"scope":6973,"src":"1469:230:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6971,"nodeType":"Block","src":"1843:767:19","statements":[{"id":6970,"nodeType":"UncheckedBlock","src":"1853:751:19","statements":[{"assignments":[6955],"declarations":[{"constant":false,"id":6955,"mutability":"mutable","name":"mask","nameLocation":"2424:4:19","nodeType":"VariableDeclaration","scope":6970,"src":"2417:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6954,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6959,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6956,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6949,"src":"2431:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":6957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:19","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6962,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6949,"src":"2576:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6963,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6955,"src":"2580:4:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6965,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6966,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6955,"src":"2588:4:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6961,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6960,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:19","typeDescriptions":{}}},"id":6968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6953,"id":6969,"nodeType":"Return","src":"2560:33:19"}]}]},"documentation":{"id":6947,"nodeType":"StructuredDocumentation","src":"1705:78:19","text":" @dev Returns the absolute unsigned value of a signed value."},"id":6972,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:19","nodeType":"FunctionDefinition","parameters":{"id":6950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6949,"mutability":"mutable","name":"n","nameLocation":"1808:1:19","nodeType":"VariableDeclaration","scope":6972,"src":"1801:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6948,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:19"},"returnParameters":{"id":6953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6952,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6972,"src":"1834:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6951,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:19"},"scope":6973,"src":"1788:822:19","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6974,"src":"258:2354:19","usedErrors":[],"usedEvents":[]}],"src":"109:2504:19"},"id":19},"contracts/MusicContract.sol":{"ast":{"absolutePath":"contracts/MusicContract.sol","exportedSymbols":{"Context":[1148],"ECDSA":[3157],"EIP712":[3384],"ERC20":[824],"ERC20Permit":[1056],"IERC20":[902],"IERC20Errors":[214],"IERC20Metadata":[1082],"IERC20Permit":[1118],"MusicContract":[7615],"Nonces":[1216],"Ownable":[147],"OysterToken":[7920],"OysterVault":[8069]},"id":7616,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6975,"literals":["solidity","0.8",".28"],"nodeType":"PragmaDirective","src":"32:23:20"},{"absolutePath":"contracts/OysterToken.sol","file":"./OysterToken.sol","id":6976,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7616,"sourceUnit":8070,"src":"57:27:20","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MusicContract","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":7615,"linearizedBaseContracts":[7615],"name":"MusicContract","nameLocation":"95:13:20","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":6979,"mutability":"mutable","name":"oysterTokenContract","nameLocation":"128:19:20","nodeType":"VariableDeclaration","scope":7615,"src":"116:31:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_OysterToken_$7920","typeString":"contract OysterToken"},"typeName":{"id":6978,"nodeType":"UserDefinedTypeName","pathNode":{"id":6977,"name":"OysterToken","nameLocations":["116:11:20"],"nodeType":"IdentifierPath","referencedDeclaration":7920,"src":"116:11:20"},"referencedDeclaration":7920,"src":"116:11:20","typeDescriptions":{"typeIdentifier":"t_contract$_OysterToken_$7920","typeString":"contract OysterToken"}},"visibility":"internal"},{"constant":false,"id":6982,"mutability":"mutable","name":"oysterVaultContract","nameLocation":"165:19:20","nodeType":"VariableDeclaration","scope":7615,"src":"153:31:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_OysterVault_$8069","typeString":"contract OysterVault"},"typeName":{"id":6981,"nodeType":"UserDefinedTypeName","pathNode":{"id":6980,"name":"OysterVault","nameLocations":["153:11:20"],"nodeType":"IdentifierPath","referencedDeclaration":8069,"src":"153:11:20"},"referencedDeclaration":8069,"src":"153:11:20","typeDescriptions":{"typeIdentifier":"t_contract$_OysterVault_$8069","typeString":"contract OysterVault"}},"visibility":"internal"},{"constant":false,"functionSelector":"eff13431","id":6984,"mutability":"mutable","name":"rightPurchaseValueInGwei","nameLocation":"206:24:20","nodeType":"VariableDeclaration","scope":7615,"src":"191:39:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6983,"name":"uint256","nodeType":"ElementaryTypeName","src":"191:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"9650f289","id":6986,"mutability":"mutable","name":"valueForListeningInGwei","nameLocation":"251:23:20","nodeType":"VariableDeclaration","scope":7615,"src":"236:38:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6985,"name":"uint256","nodeType":"ElementaryTypeName","src":"236:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"8da5cb5b","id":6988,"mutability":"mutable","name":"owner","nameLocation":"296:5:20","nodeType":"VariableDeclaration","scope":7615,"src":"281:20:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6987,"name":"address","nodeType":"ElementaryTypeName","src":"281:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"bee4f733","id":6992,"mutability":"mutable","name":"divisionOfRights","nameLocation":"340:16:20","nodeType":"VariableDeclaration","scope":7615,"src":"307:49:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint8_$","typeString":"mapping(address => uint8)"},"typeName":{"id":6991,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6989,"name":"address","nodeType":"ElementaryTypeName","src":"315:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"307:25:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint8_$","typeString":"mapping(address => uint8)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6990,"name":"uint8","nodeType":"ElementaryTypeName","src":"326:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}},"visibility":"public"},{"constant":false,"functionSelector":"f7173526","id":6994,"mutability":"mutable","name":"remainingRightsDivision","nameLocation":"375:23:20","nodeType":"VariableDeclaration","scope":7615,"src":"362:36:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6993,"name":"uint8","nodeType":"ElementaryTypeName","src":"362:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"public"},{"constant":false,"functionSelector":"5d0fab84","id":6997,"mutability":"mutable","name":"rightHolders","nameLocation":"421:12:20","nodeType":"VariableDeclaration","scope":7615,"src":"404:29:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":6995,"name":"address","nodeType":"ElementaryTypeName","src":"404:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6996,"nodeType":"ArrayTypeName","src":"404:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"public"},{"constant":false,"functionSelector":"ebc1945b","id":6999,"mutability":"mutable","name":"musicContactIsSealed","nameLocation":"451:20:20","nodeType":"VariableDeclaration","scope":7615,"src":"439:32:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6998,"name":"bool","nodeType":"ElementaryTypeName","src":"439:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"constant":false,"functionSelector":"e4494a0f","id":7001,"mutability":"mutable","name":"balanceTokens","nameLocation":"492:13:20","nodeType":"VariableDeclaration","scope":7615,"src":"477:28:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7000,"name":"uint256","nodeType":"ElementaryTypeName","src":"477:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"425432b1","id":7005,"mutability":"mutable","name":"tokensPerAddress","nameLocation":"546:16:20","nodeType":"VariableDeclaration","scope":7615,"src":"511:51:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":7004,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7002,"name":"address","nodeType":"ElementaryTypeName","src":"519:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"511:27:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7003,"name":"uint256","nodeType":"ElementaryTypeName","src":"530:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"03df476b3b37a3360a1b466487c0a06214a4e1d899e5c66a7ad379e503c2ea9e","id":7013,"name":"assignedRight","nameLocation":"575:13:20","nodeType":"EventDefinition","parameters":{"id":7012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7007,"indexed":true,"mutability":"mutable","name":"addressRight","nameLocation":"605:12:20","nodeType":"VariableDeclaration","scope":7013,"src":"589:28:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7006,"name":"address","nodeType":"ElementaryTypeName","src":"589:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7009,"indexed":true,"mutability":"mutable","name":"addressThisMusicContract","nameLocation":"635:24:20","nodeType":"VariableDeclaration","scope":7013,"src":"619:40:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7008,"name":"address","nodeType":"ElementaryTypeName","src":"619:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7011,"indexed":false,"mutability":"mutable","name":"percentageOfRights","nameLocation":"667:18:20","nodeType":"VariableDeclaration","scope":7013,"src":"661:24:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7010,"name":"uint8","nodeType":"ElementaryTypeName","src":"661:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"588:98:20"},"src":"569:118:20"},{"anonymous":false,"eventSelector":"e5c90d1f4d58fd7bc5c546521e874b223125d83f37bf4b35ade1532e08a0fff5","id":7021,"name":"withdrawalRight","nameLocation":"698:15:20","nodeType":"EventDefinition","parameters":{"id":7020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7015,"indexed":true,"mutability":"mutable","name":"addressRight","nameLocation":"730:12:20","nodeType":"VariableDeclaration","scope":7021,"src":"714:28:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7014,"name":"address","nodeType":"ElementaryTypeName","src":"714:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7017,"indexed":true,"mutability":"mutable","name":"addressThisMusicContract","nameLocation":"760:24:20","nodeType":"VariableDeclaration","scope":7021,"src":"744:40:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7016,"name":"address","nodeType":"ElementaryTypeName","src":"744:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7019,"indexed":false,"mutability":"mutable","name":"percentageOfRights","nameLocation":"792:18:20","nodeType":"VariableDeclaration","scope":7021,"src":"786:24:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7018,"name":"uint8","nodeType":"ElementaryTypeName","src":"786:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"713:98:20"},"src":"692:120:20"},{"anonymous":false,"eventSelector":"2bd58c1c32e360804cf66bb5628995e5689d64524f0203fdd547f47e1e4e6d71","id":7027,"name":"musicWithSealedRights","nameLocation":"823:21:20","nodeType":"EventDefinition","parameters":{"id":7026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7023,"indexed":true,"mutability":"mutable","name":"addressThisMusicContract","nameLocation":"861:24:20","nodeType":"VariableDeclaration","scope":7027,"src":"845:40:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7022,"name":"address","nodeType":"ElementaryTypeName","src":"845:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7025,"indexed":false,"mutability":"mutable","name":"musicContactIsSealed","nameLocation":"892:20:20","nodeType":"VariableDeclaration","scope":7027,"src":"887:25:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7024,"name":"bool","nodeType":"ElementaryTypeName","src":"887:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"844:69:20"},"src":"817:97:20"},{"anonymous":false,"eventSelector":"0f18c582fb18bab8a0efe761e8fdd548eaef7b331b99e27696a6381ed38c451e","id":7033,"name":"tokenAssigned","nameLocation":"925:13:20","nodeType":"EventDefinition","parameters":{"id":7032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7029,"indexed":true,"mutability":"mutable","name":"addressHolderToken","nameLocation":"955:18:20","nodeType":"VariableDeclaration","scope":7033,"src":"939:34:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7028,"name":"address","nodeType":"ElementaryTypeName","src":"939:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7031,"indexed":false,"mutability":"mutable","name":"amountToken","nameLocation":"983:11:20","nodeType":"VariableDeclaration","scope":7033,"src":"975:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7030,"name":"uint256","nodeType":"ElementaryTypeName","src":"975:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"938:57:20"},"src":"919:77:20"},{"anonymous":false,"eventSelector":"4429633ab0a9f77b1bc61e2ed0e484b81b41823661c29dd1ba47c1b06882459d","id":7039,"name":"purchaseMade","nameLocation":"1007:12:20","nodeType":"EventDefinition","parameters":{"id":7038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7035,"indexed":true,"mutability":"mutable","name":"purchaseAddress","nameLocation":"1036:15:20","nodeType":"VariableDeclaration","scope":7039,"src":"1020:31:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7034,"name":"address","nodeType":"ElementaryTypeName","src":"1020:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7037,"indexed":false,"mutability":"mutable","name":"activated","nameLocation":"1058:9:20","nodeType":"VariableDeclaration","scope":7039,"src":"1053:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7036,"name":"bool","nodeType":"ElementaryTypeName","src":"1053:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1019:49:20"},"src":"1001:68:20"},{"anonymous":false,"eventSelector":"53f8fd6b05226233de7ac193299b5cb02358fe734840d24f2631a5a07643ced5","id":7045,"name":"musicHeard","nameLocation":"1080:10:20","nodeType":"EventDefinition","parameters":{"id":7044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7041,"indexed":true,"mutability":"mutable","name":"hearAddress","nameLocation":"1107:11:20","nodeType":"VariableDeclaration","scope":7045,"src":"1091:27:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7040,"name":"address","nodeType":"ElementaryTypeName","src":"1091:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7043,"indexed":false,"mutability":"mutable","name":"confirm","nameLocation":"1125:7:20","nodeType":"VariableDeclaration","scope":7045,"src":"1120:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7042,"name":"bool","nodeType":"ElementaryTypeName","src":"1120:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1090:43:20"},"src":"1074:60:20"},{"body":{"id":7056,"nodeType":"Block","src":"1165:113:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7048,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1183:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1187:6:20","memberName":"sender","nodeType":"MemberAccess","src":"1183:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7050,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6988,"src":"1197:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1183:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546869732066756e6374696f6e2063616e206f6e6c792062652063616c6c656420627920746865206f776e65722061646472657373","id":7052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1204:55:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_046732d5414f05ecf7eecf16cd2fa81fef56df3233d5bab3cae061b0d442ba1d","typeString":"literal_string \"This function can only be called by the owner address\""},"value":"This function can only be called by the owner address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_046732d5414f05ecf7eecf16cd2fa81fef56df3233d5bab3cae061b0d442ba1d","typeString":"literal_string \"This function can only be called by the owner address\""}],"id":7047,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1175:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1175:85:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7054,"nodeType":"ExpressionStatement","src":"1175:85:20"},{"id":7055,"nodeType":"PlaceholderStatement","src":"1270:1:20"}]},"id":7057,"name":"onlyOwner","nameLocation":"1153:9:20","nodeType":"ModifierDefinition","parameters":{"id":7046,"nodeType":"ParameterList","parameters":[],"src":"1162:2:20"},"src":"1144:134:20","virtual":false,"visibility":"internal"},{"body":{"id":7065,"nodeType":"Block","src":"1304:144:20","statements":[{"expression":{"arguments":[{"id":7060,"name":"musicContactIsSealed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6999,"src":"1321:20:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"54686520636f6e7472616374206973206e6f74207365616c65642e2054686973207472616e73616374696f6e2063616e206f6e6c7920626520646f6e6520776974682061207365616c656420636f6e7472616374","id":7061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1343:86:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_035b512df0303c3c81b766e4199bc9ebb5c3b7e675aeebed76db1e1355e83003","typeString":"literal_string \"The contract is not sealed. This transaction can only be done with a sealed contract\""},"value":"The contract is not sealed. This transaction can only be done with a sealed contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_035b512df0303c3c81b766e4199bc9ebb5c3b7e675aeebed76db1e1355e83003","typeString":"literal_string \"The contract is not sealed. This transaction can only be done with a sealed contract\""}],"id":7059,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1313:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1313:117:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7063,"nodeType":"ExpressionStatement","src":"1313:117:20"},{"id":7064,"nodeType":"PlaceholderStatement","src":"1440:1:20"}]},"id":7066,"name":"isSealed","nameLocation":"1293:8:20","nodeType":"ModifierDefinition","parameters":{"id":7058,"nodeType":"ParameterList","parameters":[],"src":"1301:2:20"},"src":"1284:164:20","virtual":false,"visibility":"internal"},{"body":{"id":7104,"nodeType":"Block","src":"1600:290:20","statements":[{"expression":{"id":7081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7079,"name":"remainingRightsDivision","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6994,"src":"1611:23:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"313030","id":7080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1637:3:20","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"1611:29:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":7082,"nodeType":"ExpressionStatement","src":"1611:29:20"},{"expression":{"id":7085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7083,"name":"oysterTokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6979,"src":"1650:19:20","typeDescriptions":{"typeIdentifier":"t_contract$_OysterToken_$7920","typeString":"contract OysterToken"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7084,"name":"_oysterTokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7069,"src":"1672:20:20","typeDescriptions":{"typeIdentifier":"t_contract$_OysterToken_$7920","typeString":"contract OysterToken"}},"src":"1650:42:20","typeDescriptions":{"typeIdentifier":"t_contract$_OysterToken_$7920","typeString":"contract OysterToken"}},"id":7086,"nodeType":"ExpressionStatement","src":"1650:42:20"},{"expression":{"id":7089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7087,"name":"oysterVaultContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6982,"src":"1702:19:20","typeDescriptions":{"typeIdentifier":"t_contract$_OysterVault_$8069","typeString":"contract OysterVault"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7088,"name":"_oysterVaultContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7072,"src":"1724:20:20","typeDescriptions":{"typeIdentifier":"t_contract$_OysterVault_$8069","typeString":"contract OysterVault"}},"src":"1702:42:20","typeDescriptions":{"typeIdentifier":"t_contract$_OysterVault_$8069","typeString":"contract OysterVault"}},"id":7090,"nodeType":"ExpressionStatement","src":"1702:42:20"},{"expression":{"id":7093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7091,"name":"rightPurchaseValueInGwei","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6984,"src":"1754:24:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7092,"name":"_rightPurchaseValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7074,"src":"1781:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1754:46:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7094,"nodeType":"ExpressionStatement","src":"1754:46:20"},{"expression":{"id":7097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7095,"name":"valueForListeningInGwei","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6986,"src":"1810:23:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7096,"name":"_valueForListening","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7076,"src":"1836:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1810:44:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7098,"nodeType":"ExpressionStatement","src":"1810:44:20"},{"expression":{"id":7102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7099,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6988,"src":"1864:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":7100,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1872:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1876:6:20","memberName":"sender","nodeType":"MemberAccess","src":"1872:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1864:18:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7103,"nodeType":"ExpressionStatement","src":"1864:18:20"}]},"id":7105,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7069,"mutability":"mutable","name":"_oysterTokenContract","nameLocation":"1478:20:20","nodeType":"VariableDeclaration","scope":7105,"src":"1466:32:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_OysterToken_$7920","typeString":"contract OysterToken"},"typeName":{"id":7068,"nodeType":"UserDefinedTypeName","pathNode":{"id":7067,"name":"OysterToken","nameLocations":["1466:11:20"],"nodeType":"IdentifierPath","referencedDeclaration":7920,"src":"1466:11:20"},"referencedDeclaration":7920,"src":"1466:11:20","typeDescriptions":{"typeIdentifier":"t_contract$_OysterToken_$7920","typeString":"contract OysterToken"}},"visibility":"internal"},{"constant":false,"id":7072,"mutability":"mutable","name":"_oysterVaultContract","nameLocation":"1512:20:20","nodeType":"VariableDeclaration","scope":7105,"src":"1500:32:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_OysterVault_$8069","typeString":"contract OysterVault"},"typeName":{"id":7071,"nodeType":"UserDefinedTypeName","pathNode":{"id":7070,"name":"OysterVault","nameLocations":["1500:11:20"],"nodeType":"IdentifierPath","referencedDeclaration":8069,"src":"1500:11:20"},"referencedDeclaration":8069,"src":"1500:11:20","typeDescriptions":{"typeIdentifier":"t_contract$_OysterVault_$8069","typeString":"contract OysterVault"}},"visibility":"internal"},{"constant":false,"id":7074,"mutability":"mutable","name":"_rightPurchaseValue","nameLocation":"1551:19:20","nodeType":"VariableDeclaration","scope":7105,"src":"1543:27:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7073,"name":"uint256","nodeType":"ElementaryTypeName","src":"1543:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7076,"mutability":"mutable","name":"_valueForListening","nameLocation":"1580:18:20","nodeType":"VariableDeclaration","scope":7105,"src":"1572:26:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7075,"name":"uint256","nodeType":"ElementaryTypeName","src":"1572:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1465:134:20"},"returnParameters":{"id":7078,"nodeType":"ParameterList","parameters":[],"src":"1600:0:20"},"scope":7615,"src":"1454:436:20","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7108,"nodeType":"Block","src":"1923:2:20","statements":[]},"id":7109,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7106,"nodeType":"ParameterList","parameters":[],"src":"1903:2:20"},"returnParameters":{"id":7107,"nodeType":"ParameterList","parameters":[],"src":"1923:0:20"},"scope":7615,"src":"1896:29:20","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":7174,"nodeType":"Block","src":"2099:672:20","statements":[{"expression":{"arguments":[{"id":7122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2117:21:20","subExpression":{"id":7121,"name":"musicContactIsSealed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6999,"src":"2118:20:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"54686520636f6e747261637420697320616c7265616479207365616c65642c206e6f206d6f64696669636174696f6e206f66207269676874732063616e206265206d616465","id":7123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2140:71:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_00e6c0e61855c07537c591862cc84232690f7fbd58ada30e5801a843b46d23e1","typeString":"literal_string \"The contract is already sealed, no modification of rights can be made\""},"value":"The contract is already sealed, no modification of rights can be made"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_00e6c0e61855c07537c591862cc84232690f7fbd58ada30e5801a843b46d23e1","typeString":"literal_string \"The contract is already sealed, no modification of rights can be made\""}],"id":7120,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2109:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2109:103:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7125,"nodeType":"ExpressionStatement","src":"2109:103:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":7129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7127,"name":"percentageOfRights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7113,"src":"2230:18:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2251:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2230:22:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50657263656e74616765206f6620726967687473206d7573742062652067726561746572207468616e2030","id":7130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2254:45:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_59548250c0c52fa555898b044e92abeaab02b814674a16ee51abb2007c9a83ed","typeString":"literal_string \"Percentage of rights must be greater than 0\""},"value":"Percentage of rights must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_59548250c0c52fa555898b044e92abeaab02b814674a16ee51abb2007c9a83ed","typeString":"literal_string \"Percentage of rights must be greater than 0\""}],"id":7126,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2222:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2222:78:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7132,"nodeType":"ExpressionStatement","src":"2222:78:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":7136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7134,"name":"percentageOfRights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7113,"src":"2318:18:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":7135,"name":"remainingRightsDivision","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6994,"src":"2340:23:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"2318:45:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"70657263656e74616765206f6620656e7469746c656d656e74732072656d61696e696e67206973206c657373207468616e207468652072657175657374656420616d6f756e74","id":7137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2365:72:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_29dd189b09f51e6a215c7d90b9bc281fedbff2bce0a937c944c2d280eabe84d9","typeString":"literal_string \"percentage of entitlements remaining is less than the requested amount\""},"value":"percentage of entitlements remaining is less than the requested amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_29dd189b09f51e6a215c7d90b9bc281fedbff2bce0a937c944c2d280eabe84d9","typeString":"literal_string \"percentage of entitlements remaining is less than the requested amount\""}],"id":7133,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2310:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2310:128:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7139,"nodeType":"ExpressionStatement","src":"2310:128:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":7144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":7140,"name":"divisionOfRights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6992,"src":"2453:16:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint8_$","typeString":"mapping(address => uint8)"}},"id":7142,"indexExpression":{"id":7141,"name":"addressRight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7111,"src":"2470:12:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2453:30:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2487:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2453:35:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7152,"nodeType":"IfStatement","src":"2449:97:20","trueBody":{"id":7151,"nodeType":"Block","src":"2490:56:20","statements":[{"expression":{"arguments":[{"id":7148,"name":"addressRight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7111,"src":"2522:12:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":7145,"name":"rightHolders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6997,"src":"2504:12:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":7147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2517:4:20","memberName":"push","nodeType":"MemberAccess","src":"2504:17:20","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":7149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2504:31:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7150,"nodeType":"ExpressionStatement","src":"2504:31:20"}]}},{"expression":{"id":7157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7153,"name":"divisionOfRights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6992,"src":"2557:16:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint8_$","typeString":"mapping(address => uint8)"}},"id":7155,"indexExpression":{"id":7154,"name":"addressRight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7111,"src":"2574:12:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2557:30:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":7156,"name":"percentageOfRights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7113,"src":"2591:18:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"2557:52:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":7158,"nodeType":"ExpressionStatement","src":"2557:52:20"},{"expression":{"id":7161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7159,"name":"remainingRightsDivision","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6994,"src":"2619:23:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":7160,"name":"percentageOfRights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7113,"src":"2646:18:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"2619:45:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":7162,"nodeType":"ExpressionStatement","src":"2619:45:20"},{"eventCall":{"arguments":[{"id":7164,"name":"addressRight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7111,"src":"2694:12:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":7167,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2716:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_MusicContract_$7615","typeString":"contract MusicContract"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MusicContract_$7615","typeString":"contract MusicContract"}],"id":7166,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2708:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7165,"name":"address","nodeType":"ElementaryTypeName","src":"2708:7:20","typeDescriptions":{}}},"id":7168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2708:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7169,"name":"percentageOfRights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7113,"src":"2723:18:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":7163,"name":"assignedRight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7013,"src":"2680:13:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint8_$returns$__$","typeString":"function (address,address,uint8)"}},"id":7170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2680:62:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7171,"nodeType":"EmitStatement","src":"2675:67:20"},{"expression":{"hexValue":"74727565","id":7172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2760:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":7119,"id":7173,"nodeType":"Return","src":"2753:11:20"}]},"functionSelector":"76866222","id":7175,"implemented":true,"kind":"function","modifiers":[{"id":7116,"kind":"modifierInvocation","modifierName":{"id":7115,"name":"onlyOwner","nameLocations":["2074:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":7057,"src":"2074:9:20"},"nodeType":"ModifierInvocation","src":"2074:9:20"}],"name":"assignRights","nameLocation":"2004:12:20","nodeType":"FunctionDefinition","parameters":{"id":7114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7111,"mutability":"mutable","name":"addressRight","nameLocation":"2025:12:20","nodeType":"VariableDeclaration","scope":7175,"src":"2017:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7110,"name":"address","nodeType":"ElementaryTypeName","src":"2017:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7113,"mutability":"mutable","name":"percentageOfRights","nameLocation":"2045:18:20","nodeType":"VariableDeclaration","scope":7175,"src":"2039:24:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7112,"name":"uint8","nodeType":"ElementaryTypeName","src":"2039:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2016:48:20"},"returnParameters":{"id":7119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7118,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7175,"src":"2093:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7117,"name":"bool","nodeType":"ElementaryTypeName","src":"2093:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2092:6:20"},"scope":7615,"src":"1995:776:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7242,"nodeType":"Block","src":"2947:684:20","statements":[{"expression":{"arguments":[{"id":7188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2965:21:20","subExpression":{"id":7187,"name":"musicContactIsSealed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6999,"src":"2966:20:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"54686520636f6e747261637420697320616c7265616479207365616c65642c206e6f206d6f64696669636174696f6e206f66207269676874732063616e206265206d616465","id":7189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2988:71:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_00e6c0e61855c07537c591862cc84232690f7fbd58ada30e5801a843b46d23e1","typeString":"literal_string \"The contract is already sealed, no modification of rights can be made\""},"value":"The contract is already sealed, no modification of rights can be made"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_00e6c0e61855c07537c591862cc84232690f7fbd58ada30e5801a843b46d23e1","typeString":"literal_string \"The contract is already sealed, no modification of rights can be made\""}],"id":7186,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2957:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2957:103:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7191,"nodeType":"ExpressionStatement","src":"2957:103:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":7197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":7193,"name":"divisionOfRights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6992,"src":"3078:16:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint8_$","typeString":"mapping(address => uint8)"}},"id":7195,"indexExpression":{"id":7194,"name":"addressRight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7177,"src":"3095:12:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3078:30:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":7196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3112:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3078:35:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f207269676874732068617665206265656e20646566696e656420666f7220746869732061646472657373","id":7198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3115:46:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_70663abecbb73251778bc3d21efd92dc5f7e553ae5bbf6ed615d3f6a93f02dec","typeString":"literal_string \"No rights have been defined for this address\""},"value":"No rights have been defined for this address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_70663abecbb73251778bc3d21efd92dc5f7e553ae5bbf6ed615d3f6a93f02dec","typeString":"literal_string \"No rights have been defined for this address\""}],"id":7192,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3070:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3070:92:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7200,"nodeType":"ExpressionStatement","src":"3070:92:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":7206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":7202,"name":"divisionOfRights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6992,"src":"3180:16:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint8_$","typeString":"mapping(address => uint8)"}},"id":7204,"indexExpression":{"id":7203,"name":"addressRight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7177,"src":"3197:12:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3180:30:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":7205,"name":"percentageOfRights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7179,"src":"3214:18:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"3180:52:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4974206973206e6f7420706f737369626c6520746f2072656d6f7665206d6f726520726967687473207468616e2074686973206164647265737320686173","id":7207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3234:64:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_cf76a2966d01617b66d1809ad15b5c6b51fe81173232aead78b823940f0b89b8","typeString":"literal_string \"It is not possible to remove more rights than this address has\""},"value":"It is not possible to remove more rights than this address has"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cf76a2966d01617b66d1809ad15b5c6b51fe81173232aead78b823940f0b89b8","typeString":"literal_string \"It is not possible to remove more rights than this address has\""}],"id":7201,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3172:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3172:127:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7209,"nodeType":"ExpressionStatement","src":"3172:127:20"},{"expression":{"id":7214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7210,"name":"divisionOfRights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6992,"src":"3310:16:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint8_$","typeString":"mapping(address => uint8)"}},"id":7212,"indexExpression":{"id":7211,"name":"addressRight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7177,"src":"3327:12:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3310:30:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":7213,"name":"percentageOfRights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7179,"src":"3344:18:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"3310:52:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":7215,"nodeType":"ExpressionStatement","src":"3310:52:20"},{"expression":{"id":7218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7216,"name":"remainingRightsDivision","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6994,"src":"3372:23:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":7217,"name":"percentageOfRights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7179,"src":"3399:18:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"3372:45:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":7219,"nodeType":"ExpressionStatement","src":"3372:45:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":7224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":7220,"name":"divisionOfRights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6992,"src":"3431:16:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint8_$","typeString":"mapping(address => uint8)"}},"id":7222,"indexExpression":{"id":7221,"name":"addressRight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7177,"src":"3448:12:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3431:30:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3465:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3431:35:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7230,"nodeType":"IfStatement","src":"3428:96:20","trueBody":{"id":7229,"nodeType":"Block","src":"3468:56:20","statements":[{"expression":{"arguments":[{"id":7226,"name":"addressRight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7177,"src":"3500:12:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7225,"name":"removeRightHolder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7271,"src":"3482:17:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":7227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3482:31:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7228,"nodeType":"ExpressionStatement","src":"3482:31:20"}]}},{"eventCall":{"arguments":[{"id":7232,"name":"addressRight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7177,"src":"3555:12:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":7235,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3577:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_MusicContract_$7615","typeString":"contract MusicContract"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MusicContract_$7615","typeString":"contract MusicContract"}],"id":7234,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3569:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7233,"name":"address","nodeType":"ElementaryTypeName","src":"3569:7:20","typeDescriptions":{}}},"id":7236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3569:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7237,"name":"percentageOfRights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7179,"src":"3584:18:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":7231,"name":"withdrawalRight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7021,"src":"3539:15:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint8_$returns$__$","typeString":"function (address,address,uint8)"}},"id":7238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3539:64:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7239,"nodeType":"EmitStatement","src":"3534:69:20"},{"expression":{"hexValue":"74727565","id":7240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3620:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":7185,"id":7241,"nodeType":"Return","src":"3613:11:20"}]},"functionSelector":"4b946cc9","id":7243,"implemented":true,"kind":"function","modifiers":[{"id":7182,"kind":"modifierInvocation","modifierName":{"id":7181,"name":"onlyOwner","nameLocations":["2922:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":7057,"src":"2922:9:20"},"nodeType":"ModifierInvocation","src":"2922:9:20"}],"name":"withdrawRights","nameLocation":"2850:14:20","nodeType":"FunctionDefinition","parameters":{"id":7180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7177,"mutability":"mutable","name":"addressRight","nameLocation":"2873:12:20","nodeType":"VariableDeclaration","scope":7243,"src":"2865:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7176,"name":"address","nodeType":"ElementaryTypeName","src":"2865:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7179,"mutability":"mutable","name":"percentageOfRights","nameLocation":"2893:18:20","nodeType":"VariableDeclaration","scope":7243,"src":"2887:24:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7178,"name":"uint8","nodeType":"ElementaryTypeName","src":"2887:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2864:48:20"},"returnParameters":{"id":7185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7184,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7243,"src":"2941:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7183,"name":"bool","nodeType":"ElementaryTypeName","src":"2941:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2940:6:20"},"scope":7615,"src":"2841:790:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7270,"nodeType":"Block","src":"3743:151:20","statements":[{"assignments":[7249],"declarations":[{"constant":false,"id":7249,"mutability":"mutable","name":"index","nameLocation":"3761:5:20","nodeType":"VariableDeclaration","scope":7270,"src":"3753:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7248,"name":"uint256","nodeType":"ElementaryTypeName","src":"3753:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7253,"initialValue":{"arguments":[{"id":7251,"name":"_address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7245,"src":"3779:8:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7250,"name":"findIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7304,"src":"3769:9:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":7252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3769:19:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3753:35:20"},{"expression":{"id":7263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7254,"name":"rightHolders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6997,"src":"3799:12:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":7256,"indexExpression":{"id":7255,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7249,"src":"3812:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3799:19:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":7257,"name":"rightHolders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6997,"src":"3821:12:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":7262,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7258,"name":"rightHolders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6997,"src":"3834:12:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":7259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3847:6:20","memberName":"length","nodeType":"MemberAccess","src":"3834:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3856:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3834:23:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3821:37:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3799:59:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7264,"nodeType":"ExpressionStatement","src":"3799:59:20"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":7265,"name":"rightHolders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6997,"src":"3869:12:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":7267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3882:3:20","memberName":"pop","nodeType":"MemberAccess","src":"3869:16:20","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer)"}},"id":7268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3869:18:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7269,"nodeType":"ExpressionStatement","src":"3869:18:20"}]},"id":7271,"implemented":true,"kind":"function","modifiers":[],"name":"removeRightHolder","nameLocation":"3698:17:20","nodeType":"FunctionDefinition","parameters":{"id":7246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7245,"mutability":"mutable","name":"_address","nameLocation":"3724:8:20","nodeType":"VariableDeclaration","scope":7271,"src":"3716:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7244,"name":"address","nodeType":"ElementaryTypeName","src":"3716:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3715:18:20"},"returnParameters":{"id":7247,"nodeType":"ParameterList","parameters":[],"src":"3743:0:20"},"scope":7615,"src":"3689:205:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7303,"nodeType":"Block","src":"4048:201:20","statements":[{"body":{"id":7298,"nodeType":"Block","src":"4108:98:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":7289,"name":"rightHolders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6997,"src":"4126:12:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":7291,"indexExpression":{"id":7290,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7279,"src":"4139:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4126:15:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7292,"name":"_address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7273,"src":"4145:8:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4126:27:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7297,"nodeType":"IfStatement","src":"4122:74:20","trueBody":{"id":7296,"nodeType":"Block","src":"4155:41:20","statements":[{"expression":{"id":7294,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7279,"src":"4180:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7277,"id":7295,"nodeType":"Return","src":"4173:8:20"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7282,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7279,"src":"4078:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":7283,"name":"rightHolders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6997,"src":"4082:12:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":7284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4095:6:20","memberName":"length","nodeType":"MemberAccess","src":"4082:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4078:23:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7299,"initializationExpression":{"assignments":[7279],"declarations":[{"constant":false,"id":7279,"mutability":"mutable","name":"i","nameLocation":"4071:1:20","nodeType":"VariableDeclaration","scope":7299,"src":"4063:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7278,"name":"uint256","nodeType":"ElementaryTypeName","src":"4063:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7281,"initialValue":{"hexValue":"30","id":7280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4075:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4063:13:20"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":7287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4103:3:20","subExpression":{"id":7286,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7279,"src":"4103:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7288,"nodeType":"ExpressionStatement","src":"4103:3:20"},"nodeType":"ForStatement","src":"4058:148:20"},{"expression":{"expression":{"id":7300,"name":"rightHolders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6997,"src":"4223:12:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":7301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4236:6:20","memberName":"length","nodeType":"MemberAccess","src":"4223:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7277,"id":7302,"nodeType":"Return","src":"4216:26:20"}]},"id":7304,"implemented":true,"kind":"function","modifiers":[],"name":"findIndex","nameLocation":"3988:9:20","nodeType":"FunctionDefinition","parameters":{"id":7274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7273,"mutability":"mutable","name":"_address","nameLocation":"4006:8:20","nodeType":"VariableDeclaration","scope":7304,"src":"3998:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7272,"name":"address","nodeType":"ElementaryTypeName","src":"3998:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3997:18:20"},"returnParameters":{"id":7277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7276,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7304,"src":"4039:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7275,"name":"uint256","nodeType":"ElementaryTypeName","src":"4039:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4038:9:20"},"scope":7615,"src":"3979:270:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7332,"nodeType":"Block","src":"4385:239:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":7314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7312,"name":"remainingRightsDivision","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6994,"src":"4403:23:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4430:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4403:28:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5468652072656d61696e696e67206469766973696f6e73206f6620726967687473206d757374206265203020746f207365616c207468697320636f6e7472616374","id":7315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4433:67:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_87d9762a6d93fc2b9c941e1ae13bb2fe779061bdcff987e2338ea0048a4e9011","typeString":"literal_string \"The remaining divisions of rights must be 0 to seal this contract\""},"value":"The remaining divisions of rights must be 0 to seal this contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_87d9762a6d93fc2b9c941e1ae13bb2fe779061bdcff987e2338ea0048a4e9011","typeString":"literal_string \"The remaining divisions of rights must be 0 to seal this contract\""}],"id":7311,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4395:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4395:106:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7317,"nodeType":"ExpressionStatement","src":"4395:106:20"},{"expression":{"id":7320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7318,"name":"musicContactIsSealed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6999,"src":"4512:20:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4535:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4512:27:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7321,"nodeType":"ExpressionStatement","src":"4512:27:20"},{"eventCall":{"arguments":[{"arguments":[{"id":7325,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4584:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_MusicContract_$7615","typeString":"contract MusicContract"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MusicContract_$7615","typeString":"contract MusicContract"}],"id":7324,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4576:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7323,"name":"address","nodeType":"ElementaryTypeName","src":"4576:7:20","typeDescriptions":{}}},"id":7326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4576:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":7327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4591:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":7322,"name":"musicWithSealedRights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7027,"src":"4554:21:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$","typeString":"function (address,bool)"}},"id":7328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4554:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7329,"nodeType":"EmitStatement","src":"4549:47:20"},{"expression":{"hexValue":"74727565","id":7330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4613:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":7310,"id":7331,"nodeType":"Return","src":"4606:11:20"}]},"functionSelector":"98208484","id":7333,"implemented":true,"kind":"function","modifiers":[{"id":7307,"kind":"modifierInvocation","modifierName":{"id":7306,"name":"onlyOwner","nameLocations":["4360:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":7057,"src":"4360:9:20"},"nodeType":"ModifierInvocation","src":"4360:9:20"}],"name":"sealRights","nameLocation":"4338:10:20","nodeType":"FunctionDefinition","parameters":{"id":7305,"nodeType":"ParameterList","parameters":[],"src":"4348:2:20"},"returnParameters":{"id":7310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7309,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7333,"src":"4379:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7308,"name":"bool","nodeType":"ElementaryTypeName","src":"4379:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4378:6:20"},"scope":7615,"src":"4329:295:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7387,"nodeType":"Block","src":"4746:468:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":7346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":7341,"name":"divisionOfRights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6992,"src":"4764:16:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint8_$","typeString":"mapping(address => uint8)"}},"id":7344,"indexExpression":{"expression":{"id":7342,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4781:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4785:6:20","memberName":"sender","nodeType":"MemberAccess","src":"4781:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4764:28:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":7345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4796:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4764:33:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546869732066756e6374696f6e2063616e6e6f742062652063616c6c656420627920616e796f6e652077686f20646f6573206e6f7420686176652072696768747320746f2074686520736f6e67","id":7347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4799:79:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_888a677fffff6c994ae843925886fd3ad03f257f1a2f6c3f94a5f52a42910183","typeString":"literal_string \"This function cannot be called by anyone who does not have rights to the song\""},"value":"This function cannot be called by anyone who does not have rights to the song"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_888a677fffff6c994ae843925886fd3ad03f257f1a2f6c3f94a5f52a42910183","typeString":"literal_string \"This function cannot be called by anyone who does not have rights to the song\""}],"id":7340,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4756:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4756:123:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7349,"nodeType":"ExpressionStatement","src":"4756:123:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":7353,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4905:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_MusicContract_$7615","typeString":"contract MusicContract"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MusicContract_$7615","typeString":"contract MusicContract"}],"id":7352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4897:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7351,"name":"address","nodeType":"ElementaryTypeName","src":"4897:7:20","typeDescriptions":{}}},"id":7354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4897:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4911:7:20","memberName":"balance","nodeType":"MemberAccess","src":"4897:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_5300000000000000_by_1","typeString":"int_const 5300000000000000"},"id":7358,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"35333030303030","id":7356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4922:7:20","typeDescriptions":{"typeIdentifier":"t_rational_5300000_by_1","typeString":"int_const 5300000"},"value":"5300000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"316539","id":7357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4932:3:20","typeDescriptions":{"typeIdentifier":"t_rational_1000000000_by_1","typeString":"int_const 1000000000"},"value":"1e9"},"src":"4922:13:20","typeDescriptions":{"typeIdentifier":"t_rational_5300000000000000_by_1","typeString":"int_const 5300000000000000"}},"src":"4897:38:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742045746865722073656e7420746f2062757920746f6b656e732e204d7573742068617665206174206c6561737420302e30303533204574686572","id":7360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4937:72:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_0fc663d05a6bb57b3da0d21c1bcd326365e80a1353272fa5150359407637095a","typeString":"literal_string \"Insufficient Ether sent to buy tokens. Must have at least 0.0053 Ether\""},"value":"Insufficient Ether sent to buy tokens. Must have at least 0.0053 Ether"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0fc663d05a6bb57b3da0d21c1bcd326365e80a1353272fa5150359407637095a","typeString":"literal_string \"Insufficient Ether sent to buy tokens. Must have at least 0.0053 Ether\""}],"id":7350,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4889:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4889:121:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7362,"nodeType":"ExpressionStatement","src":"4889:121:20"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":[],"expression":{"id":7363,"name":"oysterTokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6979,"src":"5021:19:20","typeDescriptions":{"typeIdentifier":"t_contract$_OysterToken_$7920","typeString":"contract OysterToken"}},"id":7365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5041:24:20","memberName":"buy100OSTToMusicContract","nodeType":"MemberAccess","referencedDeclaration":7865,"src":"5021:44:20","typeDescriptions":{"typeIdentifier":"t_function_external_payable$__$returns$_t_bool_$","typeString":"function () payable external returns (bool)"}},"id":7371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"arguments":[{"id":7368,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5081:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_MusicContract_$7615","typeString":"contract MusicContract"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MusicContract_$7615","typeString":"contract MusicContract"}],"id":7367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5073:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7366,"name":"address","nodeType":"ElementaryTypeName","src":"5073:7:20","typeDescriptions":{}}},"id":7369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5073:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5087:7:20","memberName":"balance","nodeType":"MemberAccess","src":"5073:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5021:74:20","typeDescriptions":{"typeIdentifier":"t_function_external_payable$__$returns$_t_bool_$value","typeString":"function () payable external returns (bool)"}},"id":7372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5021:76:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7373,"nodeType":"ExpressionStatement","src":"5021:76:20"},{"expression":{"id":7376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7374,"name":"balanceTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7001,"src":"5108:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313030","id":7375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5125:3:20","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"5108:20:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7377,"nodeType":"ExpressionStatement","src":"5108:20:20"},{"expression":{"arguments":[{"hexValue":"313030","id":7379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5159:3:20","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}],"id":7378,"name":"approveVaultTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7408,"src":"5138:20:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) returns (bool)"}},"id":7380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5138:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7381,"nodeType":"ExpressionStatement","src":"5138:25:20"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":7382,"name":"tokenSplit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7452,"src":"5173:10:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$_t_bool_$","typeString":"function () returns (bool)"}},"id":7383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5173:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7384,"nodeType":"ExpressionStatement","src":"5173:12:20"},{"expression":{"hexValue":"74727565","id":7385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5203:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":7339,"id":7386,"nodeType":"Return","src":"5196:11:20"}]},"functionSelector":"b145fcd4","id":7388,"implemented":true,"kind":"function","modifiers":[{"id":7336,"kind":"modifierInvocation","modifierName":{"id":7335,"name":"isSealed","nameLocations":["4722:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":7066,"src":"4722:8:20"},"nodeType":"ModifierInvocation","src":"4722:8:20"}],"name":"buy100OysterToken","nameLocation":"4685:17:20","nodeType":"FunctionDefinition","parameters":{"id":7334,"nodeType":"ParameterList","parameters":[],"src":"4702:2:20"},"returnParameters":{"id":7339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7338,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7388,"src":"4740:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7337,"name":"bool","nodeType":"ElementaryTypeName","src":"4740:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4739:6:20"},"scope":7615,"src":"4676:538:20","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":7407,"nodeType":"Block","src":"5355:103:20","statements":[{"expression":{"arguments":[{"arguments":[{"id":7400,"name":"oysterVaultContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6982,"src":"5401:19:20","typeDescriptions":{"typeIdentifier":"t_contract$_OysterVault_$8069","typeString":"contract OysterVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_OysterVault_$8069","typeString":"contract OysterVault"}],"id":7399,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5393:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7398,"name":"address","nodeType":"ElementaryTypeName","src":"5393:7:20","typeDescriptions":{}}},"id":7401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5393:28:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7402,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7390,"src":"5423:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7395,"name":"oysterTokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6979,"src":"5365:19:20","typeDescriptions":{"typeIdentifier":"t_contract$_OysterToken_$7920","typeString":"contract OysterToken"}},"id":7397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5385:7:20","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":475,"src":"5365:27:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":7403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5365:65:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7404,"nodeType":"ExpressionStatement","src":"5365:65:20"},{"expression":{"hexValue":"74727565","id":7405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5447:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":7394,"id":7406,"nodeType":"Return","src":"5440:11:20"}]},"id":7408,"implemented":true,"kind":"function","modifiers":[],"name":"approveVaultTransfer","nameLocation":"5294:20:20","nodeType":"FunctionDefinition","parameters":{"id":7391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7390,"mutability":"mutable","name":"amount","nameLocation":"5323:6:20","nodeType":"VariableDeclaration","scope":7408,"src":"5315:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7389,"name":"uint256","nodeType":"ElementaryTypeName","src":"5315:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5314:16:20"},"returnParameters":{"id":7394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7393,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7408,"src":"5349:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7392,"name":"bool","nodeType":"ElementaryTypeName","src":"5349:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5348:6:20"},"scope":7615,"src":"5285:173:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7451,"nodeType":"Block","src":"5588:274:20","statements":[{"body":{"id":7447,"nodeType":"Block","src":"5649:185:20","statements":[{"expression":{"id":7434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7424,"name":"tokensPerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7005,"src":"5663:16:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7428,"indexExpression":{"baseExpression":{"id":7425,"name":"rightHolders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6997,"src":"5680:12:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":7427,"indexExpression":{"id":7426,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7414,"src":"5693:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5680:15:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5663:33:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"baseExpression":{"id":7429,"name":"divisionOfRights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6992,"src":"5700:16:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint8_$","typeString":"mapping(address => uint8)"}},"id":7433,"indexExpression":{"baseExpression":{"id":7430,"name":"rightHolders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6997,"src":"5717:12:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":7432,"indexExpression":{"id":7431,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7414,"src":"5730:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5717:15:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5700:33:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"5663:70:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7435,"nodeType":"ExpressionStatement","src":"5663:70:20"},{"eventCall":{"arguments":[{"baseExpression":{"id":7437,"name":"rightHolders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6997,"src":"5772:12:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":7439,"indexExpression":{"id":7438,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7414,"src":"5785:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5772:15:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":7440,"name":"divisionOfRights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6992,"src":"5789:16:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint8_$","typeString":"mapping(address => uint8)"}},"id":7444,"indexExpression":{"baseExpression":{"id":7441,"name":"rightHolders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6997,"src":"5806:12:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":7443,"indexExpression":{"id":7442,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7414,"src":"5819:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5806:15:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5789:33:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":7436,"name":"tokenAssigned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7033,"src":"5758:13:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5758:65:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7446,"nodeType":"EmitStatement","src":"5753:70:20"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7417,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7414,"src":"5619:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":7418,"name":"rightHolders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6997,"src":"5623:12:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":7419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5636:6:20","memberName":"length","nodeType":"MemberAccess","src":"5623:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5619:23:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7448,"initializationExpression":{"assignments":[7414],"declarations":[{"constant":false,"id":7414,"mutability":"mutable","name":"i","nameLocation":"5612:1:20","nodeType":"VariableDeclaration","scope":7448,"src":"5604:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7413,"name":"uint256","nodeType":"ElementaryTypeName","src":"5604:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7416,"initialValue":{"hexValue":"30","id":7415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5616:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5604:13:20"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":7422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5644:3:20","subExpression":{"id":7421,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7414,"src":"5644:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7423,"nodeType":"ExpressionStatement","src":"5644:3:20"},"nodeType":"ForStatement","src":"5599:235:20"},{"expression":{"hexValue":"74727565","id":7449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5851:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":7412,"id":7450,"nodeType":"Return","src":"5844:11:20"}]},"id":7452,"implemented":true,"kind":"function","modifiers":[],"name":"tokenSplit","nameLocation":"5551:10:20","nodeType":"FunctionDefinition","parameters":{"id":7409,"nodeType":"ParameterList","parameters":[],"src":"5561:2:20"},"returnParameters":{"id":7412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7411,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7452,"src":"5582:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7410,"name":"bool","nodeType":"ElementaryTypeName","src":"5582:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5581:6:20"},"scope":7615,"src":"5542:320:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7509,"nodeType":"Block","src":"5983:493:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":7467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":7462,"name":"divisionOfRights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6992,"src":"6001:16:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint8_$","typeString":"mapping(address => uint8)"}},"id":7465,"indexExpression":{"expression":{"id":7463,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6018:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6022:6:20","memberName":"sender","nodeType":"MemberAccess","src":"6018:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6001:28:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":7466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6033:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6001:33:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546869732066756e6374696f6e2063616e6e6f742062652063616c6c656420627920616e796f6e652077686f20646f6573206e6f7420686176652072696768747320746f2074686520736f6e67","id":7468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6036:79:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_888a677fffff6c994ae843925886fd3ad03f257f1a2f6c3f94a5f52a42910183","typeString":"literal_string \"This function cannot be called by anyone who does not have rights to the song\""},"value":"This function cannot be called by anyone who does not have rights to the song"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_888a677fffff6c994ae843925886fd3ad03f257f1a2f6c3f94a5f52a42910183","typeString":"literal_string \"This function cannot be called by anyone who does not have rights to the song\""}],"id":7461,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5993:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5993:123:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7470,"nodeType":"ExpressionStatement","src":"5993:123:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7472,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7454,"src":"6134:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6143:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6134:10:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e756d626572206f6620746f6b656e7320666f7220726571756573746564207472616e73666572206d7573742062652067726561746572207468616e2030","id":7475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6146:64:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_10ee263c07356aa89342d85eac7ad45f2615c99e8450dda756bc5e9ec583fd1c","typeString":"literal_string \"Number of tokens for requested transfer must be greater than 0\""},"value":"Number of tokens for requested transfer must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_10ee263c07356aa89342d85eac7ad45f2615c99e8450dda756bc5e9ec583fd1c","typeString":"literal_string \"Number of tokens for requested transfer must be greater than 0\""}],"id":7471,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"6126:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6126:85:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7477,"nodeType":"ExpressionStatement","src":"6126:85:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":7479,"name":"tokensPerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7005,"src":"6229:16:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7482,"indexExpression":{"expression":{"id":7480,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6246:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6250:6:20","memberName":"sender","nodeType":"MemberAccess","src":"6246:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6229:28:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":7483,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7454,"src":"6261:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6229:38:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e756d626572206f6620746f6b656e7320756e617661696c61626c65","id":7485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6269:30:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_ff015140a35820efe946e6eca10609f6759241d73874b5516eef74c707161aec","typeString":"literal_string \"Number of tokens unavailable\""},"value":"Number of tokens unavailable"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ff015140a35820efe946e6eca10609f6759241d73874b5516eef74c707161aec","typeString":"literal_string \"Number of tokens unavailable\""}],"id":7478,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"6221:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6221:79:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7487,"nodeType":"ExpressionStatement","src":"6221:79:20"},{"expression":{"arguments":[{"expression":{"id":7491,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6347:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6351:6:20","memberName":"sender","nodeType":"MemberAccess","src":"6347:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7493,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7454,"src":"6359:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7488,"name":"oysterTokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6979,"src":"6311:19:20","typeDescriptions":{"typeIdentifier":"t_contract$_OysterToken_$7920","typeString":"contract OysterToken"}},"id":7490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6331:15:20","memberName":"sellOysterToken","nodeType":"MemberAccess","referencedDeclaration":7919,"src":"6311:35:20","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) payable external returns (bool)"}},"id":7494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6311:55:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7495,"nodeType":"ExpressionStatement","src":"6311:55:20"},{"expression":{"id":7501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7496,"name":"tokensPerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7005,"src":"6376:16:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7499,"indexExpression":{"expression":{"id":7497,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6393:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6397:6:20","memberName":"sender","nodeType":"MemberAccess","src":"6393:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6376:28:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":7500,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7454,"src":"6408:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6376:38:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7502,"nodeType":"ExpressionStatement","src":"6376:38:20"},{"expression":{"id":7505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7503,"name":"balanceTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7001,"src":"6424:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":7504,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7454,"src":"6441:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6424:23:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7506,"nodeType":"ExpressionStatement","src":"6424:23:20"},{"expression":{"hexValue":"74727565","id":7507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6465:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":7460,"id":7508,"nodeType":"Return","src":"6458:11:20"}]},"functionSelector":"5e1b6191","id":7510,"implemented":true,"kind":"function","modifiers":[{"id":7457,"kind":"modifierInvocation","modifierName":{"id":7456,"name":"isSealed","nameLocations":["5959:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":7066,"src":"5959:8:20"},"nodeType":"ModifierInvocation","src":"5959:8:20"}],"name":"sellOysterToken","nameLocation":"5918:15:20","nodeType":"FunctionDefinition","parameters":{"id":7455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7454,"mutability":"mutable","name":"amount","nameLocation":"5942:6:20","nodeType":"VariableDeclaration","scope":7510,"src":"5934:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7453,"name":"uint256","nodeType":"ElementaryTypeName","src":"5934:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5933:16:20"},"returnParameters":{"id":7460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7459,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7510,"src":"5977:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7458,"name":"bool","nodeType":"ElementaryTypeName","src":"5977:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5976:6:20"},"scope":7615,"src":"5909:567:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7555,"nodeType":"Block","src":"6588:357:20","statements":[{"assignments":[7518],"declarations":[{"constant":false,"id":7518,"mutability":"mutable","name":"valueBuyRight","nameLocation":"6606:13:20","nodeType":"VariableDeclaration","scope":7555,"src":"6598:21:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7517,"name":"uint256","nodeType":"ElementaryTypeName","src":"6598:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7522,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7519,"name":"rightPurchaseValueInGwei","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6984,"src":"6622:24:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"316539","id":7520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6649:3:20","typeDescriptions":{"typeIdentifier":"t_rational_1000000000_by_1","typeString":"int_const 1000000000"},"value":"1e9"},"src":"6622:30:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6598:54:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7524,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6670:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6674:5:20","memberName":"value","nodeType":"MemberAccess","src":"6670:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":7526,"name":"valueBuyRight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7518,"src":"6683:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6670:26:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e73756666696369656e742076616c756520746f20707572636861736520746865206d7573696320726967687473","id":7528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6698:49:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_b66c433229ecbc090d4615d47ec9e73470355743da96bc3174634127fc19c754","typeString":"literal_string \"insufficient value to purchase the music rights\""},"value":"insufficient value to purchase the music rights"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b66c433229ecbc090d4615d47ec9e73470355743da96bc3174634127fc19c754","typeString":"literal_string \"insufficient value to purchase the music rights\""}],"id":7523,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"6662:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6662:86:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7530,"nodeType":"ExpressionStatement","src":"6662:86:20"},{"assignments":[7532],"declarations":[{"constant":false,"id":7532,"mutability":"mutable","name":"remainingValue","nameLocation":"6767:14:20","nodeType":"VariableDeclaration","scope":7555,"src":"6759:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7531,"name":"uint256","nodeType":"ElementaryTypeName","src":"6759:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7537,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7533,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6784:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6788:5:20","memberName":"value","nodeType":"MemberAccess","src":"6784:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":7535,"name":"valueBuyRight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7518,"src":"6796:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6784:25:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6759:50:20"},{"eventCall":{"arguments":[{"expression":{"id":7539,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6837:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6841:6:20","memberName":"sender","nodeType":"MemberAccess","src":"6837:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":7541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6849:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":7538,"name":"purchaseMade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7039,"src":"6824:12:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$","typeString":"function (address,bool)"}},"id":7542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6824:30:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7543,"nodeType":"EmitStatement","src":"6819:35:20"},{"expression":{"arguments":[{"id":7550,"name":"remainingValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7532,"src":"6893:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":7546,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6872:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6876:6:20","memberName":"sender","nodeType":"MemberAccess","src":"6872:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7545,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6864:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":7544,"name":"address","nodeType":"ElementaryTypeName","src":"6864:8:20","stateMutability":"payable","typeDescriptions":{}}},"id":7548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6864:19:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":7549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6884:8:20","memberName":"transfer","nodeType":"MemberAccess","src":"6864:28:20","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":7551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6864:44:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7552,"nodeType":"ExpressionStatement","src":"6864:44:20"},{"expression":{"hexValue":"74727565","id":7553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6934:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":7516,"id":7554,"nodeType":"Return","src":"6927:11:20"}]},"functionSelector":"8e6b3ac4","id":7556,"implemented":true,"kind":"function","modifiers":[{"id":7513,"kind":"modifierInvocation","modifierName":{"id":7512,"name":"isSealed","nameLocations":["6564:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":7066,"src":"6564:8:20"},"nodeType":"ModifierInvocation","src":"6564:8:20"}],"name":"buyRightsMusic","nameLocation":"6530:14:20","nodeType":"FunctionDefinition","parameters":{"id":7511,"nodeType":"ParameterList","parameters":[],"src":"6544:2:20"},"returnParameters":{"id":7516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7515,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7556,"src":"6582:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7514,"name":"bool","nodeType":"ElementaryTypeName","src":"6582:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6581:6:20"},"scope":7615,"src":"6521:424:20","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":7601,"nodeType":"Block","src":"7049:346:20","statements":[{"assignments":[7564],"declarations":[{"constant":false,"id":7564,"mutability":"mutable","name":"valueListen","nameLocation":"7067:11:20","nodeType":"VariableDeclaration","scope":7601,"src":"7059:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7563,"name":"uint256","nodeType":"ElementaryTypeName","src":"7059:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7568,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7565,"name":"valueForListeningInGwei","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6986,"src":"7081:23:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"316539","id":7566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7107:3:20","typeDescriptions":{"typeIdentifier":"t_rational_1000000000_by_1","typeString":"int_const 1000000000"},"value":"1e9"},"src":"7081:29:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7059:51:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7570,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7128:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7132:5:20","memberName":"value","nodeType":"MemberAccess","src":"7128:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":7572,"name":"valueListen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7564,"src":"7141:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7128:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e73756666696369656e742076616c756520746f206c697374656e20746865206d7573696320726967687473","id":7574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7154:47:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_449ba59efb4134ea4502563a81b53d2b67d0b309e434fc69970577cd2a7e9a7d","typeString":"literal_string \"insufficient value to listen the music rights\""},"value":"insufficient value to listen the music rights"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_449ba59efb4134ea4502563a81b53d2b67d0b309e434fc69970577cd2a7e9a7d","typeString":"literal_string \"insufficient value to listen the music rights\""}],"id":7569,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"7120:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7120:82:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7576,"nodeType":"ExpressionStatement","src":"7120:82:20"},{"assignments":[7578],"declarations":[{"constant":false,"id":7578,"mutability":"mutable","name":"remainingValue","nameLocation":"7221:14:20","nodeType":"VariableDeclaration","scope":7601,"src":"7213:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7577,"name":"uint256","nodeType":"ElementaryTypeName","src":"7213:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7583,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7579,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7238:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7242:5:20","memberName":"value","nodeType":"MemberAccess","src":"7238:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":7581,"name":"valueListen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7564,"src":"7250:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7238:23:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7213:48:20"},{"eventCall":{"arguments":[{"expression":{"id":7585,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7287:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7291:6:20","memberName":"sender","nodeType":"MemberAccess","src":"7287:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":7587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7299:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":7584,"name":"musicHeard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7045,"src":"7276:10:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$","typeString":"function (address,bool)"}},"id":7588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7276:28:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7589,"nodeType":"EmitStatement","src":"7271:33:20"},{"expression":{"arguments":[{"id":7596,"name":"remainingValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7578,"src":"7343:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":7592,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7322:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7326:6:20","memberName":"sender","nodeType":"MemberAccess","src":"7322:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7314:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":7590,"name":"address","nodeType":"ElementaryTypeName","src":"7314:8:20","stateMutability":"payable","typeDescriptions":{}}},"id":7594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7314:19:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":7595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7334:8:20","memberName":"transfer","nodeType":"MemberAccess","src":"7314:28:20","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":7597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7314:44:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7598,"nodeType":"ExpressionStatement","src":"7314:44:20"},{"expression":{"hexValue":"74727565","id":7599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7384:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":7562,"id":7600,"nodeType":"Return","src":"7377:11:20"}]},"functionSelector":"6ba5d079","id":7602,"implemented":true,"kind":"function","modifiers":[{"id":7559,"kind":"modifierInvocation","modifierName":{"id":7558,"name":"isSealed","nameLocations":["7025:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":7066,"src":"7025:8:20"},"nodeType":"ModifierInvocation","src":"7025:8:20"}],"name":"listenMusic","nameLocation":"6994:11:20","nodeType":"FunctionDefinition","parameters":{"id":7557,"nodeType":"ParameterList","parameters":[],"src":"7005:2:20"},"returnParameters":{"id":7562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7561,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7602,"src":"7043:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7560,"name":"bool","nodeType":"ElementaryTypeName","src":"7043:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7042:6:20"},"scope":7615,"src":"6985:410:20","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":7613,"nodeType":"Block","src":"7504:45:20","statements":[{"expression":{"expression":{"arguments":[{"id":7609,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7529:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_MusicContract_$7615","typeString":"contract MusicContract"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MusicContract_$7615","typeString":"contract MusicContract"}],"id":7608,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7521:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7607,"name":"address","nodeType":"ElementaryTypeName","src":"7521:7:20","typeDescriptions":{}}},"id":7610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7521:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7535:7:20","memberName":"balance","nodeType":"MemberAccess","src":"7521:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7606,"id":7612,"nodeType":"Return","src":"7514:28:20"}]},"functionSelector":"3ff1e05b","id":7614,"implemented":true,"kind":"function","modifiers":[],"name":"viewBalance","nameLocation":"7458:11:20","nodeType":"FunctionDefinition","parameters":{"id":7603,"nodeType":"ParameterList","parameters":[],"src":"7469:2:20"},"returnParameters":{"id":7606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7605,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7614,"src":"7495:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7604,"name":"uint256","nodeType":"ElementaryTypeName","src":"7495:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7494:9:20"},"scope":7615,"src":"7449:100:20","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":7616,"src":"86:7466:20","usedErrors":[],"usedEvents":[7013,7021,7027,7033,7039,7045]}],"src":"32:7520:20"},"id":20},"contracts/OysterToken.sol":{"ast":{"absolutePath":"contracts/OysterToken.sol","exportedSymbols":{"Context":[1148],"ECDSA":[3157],"EIP712":[3384],"ERC20":[824],"ERC20Permit":[1056],"IERC20":[902],"IERC20Errors":[214],"IERC20Metadata":[1082],"IERC20Permit":[1118],"Nonces":[1216],"Ownable":[147],"OysterToken":[7920],"OysterVault":[8069]},"id":8070,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7617,"literals":["solidity","0.8",".28"],"nodeType":"PragmaDirective","src":"32:23:21"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":7618,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8070,"sourceUnit":825,"src":"57:55:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":7619,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8070,"sourceUnit":148,"src":"113:52:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","id":7620,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8070,"sourceUnit":1057,"src":"166:72:21","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7621,"name":"ERC20","nameLocations":["264:5:21"],"nodeType":"IdentifierPath","referencedDeclaration":824,"src":"264:5:21"},"id":7622,"nodeType":"InheritanceSpecifier","src":"264:5:21"},{"baseName":{"id":7623,"name":"Ownable","nameLocations":["271:7:21"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"271:7:21"},"id":7624,"nodeType":"InheritanceSpecifier","src":"271:7:21"},{"baseName":{"id":7625,"name":"ERC20Permit","nameLocations":["280:11:21"],"nodeType":"IdentifierPath","referencedDeclaration":1056,"src":"280:11:21"},"id":7626,"nodeType":"InheritanceSpecifier","src":"280:11:21"}],"canonicalName":"OysterToken","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":7920,"linearizedBaseContracts":[7920,1056,1216,3384,172,1118,147,824,214,1082,902,1148],"name":"OysterToken","nameLocation":"249:11:21","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"fbfa77cf","id":7629,"mutability":"mutable","name":"vault","nameLocation":"317:5:21","nodeType":"VariableDeclaration","scope":7920,"src":"298:24:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_OysterVault_$8069","typeString":"contract OysterVault"},"typeName":{"id":7628,"nodeType":"UserDefinedTypeName","pathNode":{"id":7627,"name":"OysterVault","nameLocations":["298:11:21"],"nodeType":"IdentifierPath","referencedDeclaration":8069,"src":"298:11:21"},"referencedDeclaration":8069,"src":"298:11:21","typeDescriptions":{"typeIdentifier":"t_contract$_OysterVault_$8069","typeString":"contract OysterVault"}},"visibility":"public"},{"constant":false,"functionSelector":"f89fbe6a","id":7633,"mutability":"mutable","name":"validMusicContracts","nameLocation":"360:19:21","nodeType":"VariableDeclaration","scope":7920,"src":"328:51:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":7632,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7630,"name":"address","nodeType":"ElementaryTypeName","src":"336:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"328:24:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7631,"name":"bool","nodeType":"ElementaryTypeName","src":"347:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"8828c88ef46029fc10c19655c4c67e16d76903c9fbd9170b8298d51194ed7508","id":7639,"name":"validatedMusicContract","nameLocation":"392:22:21","nodeType":"EventDefinition","parameters":{"id":7638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7635,"indexed":true,"mutability":"mutable","name":"_address","nameLocation":"431:8:21","nodeType":"VariableDeclaration","scope":7639,"src":"415:24:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7634,"name":"address","nodeType":"ElementaryTypeName","src":"415:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7637,"indexed":false,"mutability":"mutable","name":"valid","nameLocation":"446:5:21","nodeType":"VariableDeclaration","scope":7639,"src":"441:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7636,"name":"bool","nodeType":"ElementaryTypeName","src":"441:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"414:38:21"},"src":"386:67:21"},{"anonymous":false,"eventSelector":"fec51bd7a12167abbae91302df382bf09c27aab7a4fddd88f056c6ab1c9b8e20","id":7645,"name":"WeiRefunded","nameLocation":"464:11:21","nodeType":"EventDefinition","parameters":{"id":7644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7641,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"492:2:21","nodeType":"VariableDeclaration","scope":7645,"src":"476:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7640,"name":"address","nodeType":"ElementaryTypeName","src":"476:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7643,"indexed":false,"mutability":"mutable","name":"weiAmount","nameLocation":"504:9:21","nodeType":"VariableDeclaration","scope":7645,"src":"496:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7642,"name":"uint256","nodeType":"ElementaryTypeName","src":"496:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"475:39:21"},"src":"458:57:21"},{"anonymous":false,"eventSelector":"66002148a13b0a635b2dd6a9f2f5f8dd5a438fc69cb89f096b1cb6facf14b2ea","id":7651,"name":"transferViaTokenSale","nameLocation":"526:20:21","nodeType":"EventDefinition","parameters":{"id":7650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7647,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"563:2:21","nodeType":"VariableDeclaration","scope":7651,"src":"547:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7646,"name":"address","nodeType":"ElementaryTypeName","src":"547:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7649,"indexed":false,"mutability":"mutable","name":"weiAmount","nameLocation":"575:9:21","nodeType":"VariableDeclaration","scope":7651,"src":"567:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7648,"name":"uint256","nodeType":"ElementaryTypeName","src":"567:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"546:39:21"},"src":"520:66:21"},{"body":{"id":7662,"nodeType":"Block","src":"626:139:21","statements":[{"expression":{"arguments":[{"baseExpression":{"id":7654,"name":"validMusicContracts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7633,"src":"644:19:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7657,"indexExpression":{"expression":{"id":7655,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"664:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"668:6:21","memberName":"sender","nodeType":"MemberAccess","src":"664:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"644:31:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546869732066756e6374696f6e2063616e206f6e6c792062652063616c6c6564206279207468652076616c6964204d75736963436f6e74726163742061646472657373","id":7658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"677:69:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_a498ec71a51c4164b1345afc4bf81a1bdbdf153eb10e276ed1006f2e929fdc84","typeString":"literal_string \"This function can only be called by the valid MusicContract address\""},"value":"This function can only be called by the valid MusicContract address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a498ec71a51c4164b1345afc4bf81a1bdbdf153eb10e276ed1006f2e929fdc84","typeString":"literal_string \"This function can only be called by the valid MusicContract address\""}],"id":7653,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"636:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"636:111:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7660,"nodeType":"ExpressionStatement","src":"636:111:21"},{"id":7661,"nodeType":"PlaceholderStatement","src":"757:1:21"}]},"id":7663,"name":"onlyValidMusicContract","nameLocation":"601:22:21","nodeType":"ModifierDefinition","parameters":{"id":7652,"nodeType":"ParameterList","parameters":[],"src":"623:2:21"},"src":"592:173:21","virtual":false,"visibility":"internal"},{"body":{"id":7678,"nodeType":"Block","src":"914:2:21","statements":[]},"id":7679,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"4f7973746572546f6b656e","id":7668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"820:13:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_581d1de704b1e2bcc8faa6df81464e00ec4c145ad51f16f1255819155a7bb0ce","typeString":"literal_string \"OysterToken\""},"value":"OysterToken"},{"hexValue":"4f5354","id":7669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"835:5:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_8a58304e729f9d66916715891a3bb333bf5fef227ca34546bddb3523d99fef60","typeString":"literal_string \"OST\""},"value":"OST"}],"id":7670,"kind":"baseConstructorSpecifier","modifierName":{"id":7667,"name":"ERC20","nameLocations":["814:5:21"],"nodeType":"IdentifierPath","referencedDeclaration":824,"src":"814:5:21"},"nodeType":"ModifierInvocation","src":"814:27:21"},{"arguments":[{"id":7672,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7665,"src":"859:12:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":7673,"kind":"baseConstructorSpecifier","modifierName":{"id":7671,"name":"Ownable","nameLocations":["851:7:21"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"851:7:21"},"nodeType":"ModifierInvocation","src":"851:21:21"},{"arguments":[{"hexValue":"4f7973746572546f6b656e","id":7675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"894:13:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_581d1de704b1e2bcc8faa6df81464e00ec4c145ad51f16f1255819155a7bb0ce","typeString":"literal_string \"OysterToken\""},"value":"OysterToken"}],"id":7676,"kind":"baseConstructorSpecifier","modifierName":{"id":7674,"name":"ERC20Permit","nameLocations":["882:11:21"],"nodeType":"IdentifierPath","referencedDeclaration":1056,"src":"882:11:21"},"nodeType":"ModifierInvocation","src":"882:26:21"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7665,"mutability":"mutable","name":"initialOwner","nameLocation":"791:12:21","nodeType":"VariableDeclaration","scope":7679,"src":"783:20:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7664,"name":"address","nodeType":"ElementaryTypeName","src":"783:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"782:22:21"},"returnParameters":{"id":7677,"nodeType":"ParameterList","parameters":[],"src":"914:0:21"},"scope":7920,"src":"771:145:21","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7717,"nodeType":"Block","src":"1054:277:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7690,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7682,"src":"1080:6:21","typeDescriptions":{"typeIdentifier":"t_contract$_OysterVault_$8069","typeString":"contract OysterVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_OysterVault_$8069","typeString":"contract OysterVault"}],"id":7689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1072:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7688,"name":"address","nodeType":"ElementaryTypeName","src":"1072:7:21","typeDescriptions":{}}},"id":7691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1072:15:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1099:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7693,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1091:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7692,"name":"address","nodeType":"ElementaryTypeName","src":"1091:7:21","typeDescriptions":{}}},"id":7695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1091:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1072:29:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207661756c742061646472657373","id":7697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1103:23:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_1d4b05e5256c70cb19cbeae4f5dbc68cbf63906eed2b6782a552ca8fc044422e","typeString":"literal_string \"Invalid vault address\""},"value":"Invalid vault address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1d4b05e5256c70cb19cbeae4f5dbc68cbf63906eed2b6782a552ca8fc044422e","typeString":"literal_string \"Invalid vault address\""}],"id":7687,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1064:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1064:63:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7699,"nodeType":"ExpressionStatement","src":"1064:63:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7703,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7629,"src":"1207:5:21","typeDescriptions":{"typeIdentifier":"t_contract$_OysterVault_$8069","typeString":"contract OysterVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_OysterVault_$8069","typeString":"contract OysterVault"}],"id":7702,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1199:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7701,"name":"address","nodeType":"ElementaryTypeName","src":"1199:7:21","typeDescriptions":{}}},"id":7704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1199:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":7707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1225:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1217:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7705,"name":"address","nodeType":"ElementaryTypeName","src":"1217:7:21","typeDescriptions":{}}},"id":7708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1217:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1199:28:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5661756c7420616c726561647920736574","id":7710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1229:19:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_e38982e17d63c9cd56d683e451db7cf94d5da609636149268849933c3fcb1d61","typeString":"literal_string \"Vault already set\""},"value":"Vault already set"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e38982e17d63c9cd56d683e451db7cf94d5da609636149268849933c3fcb1d61","typeString":"literal_string \"Vault already set\""}],"id":7700,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1191:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1191:58:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7712,"nodeType":"ExpressionStatement","src":"1191:58:21"},{"expression":{"id":7715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7713,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7629,"src":"1310:5:21","typeDescriptions":{"typeIdentifier":"t_contract$_OysterVault_$8069","typeString":"contract OysterVault"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7714,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7682,"src":"1318:6:21","typeDescriptions":{"typeIdentifier":"t_contract$_OysterVault_$8069","typeString":"contract OysterVault"}},"src":"1310:14:21","typeDescriptions":{"typeIdentifier":"t_contract$_OysterVault_$8069","typeString":"contract OysterVault"}},"id":7716,"nodeType":"ExpressionStatement","src":"1310:14:21"}]},"functionSelector":"6817031b","id":7718,"implemented":true,"kind":"function","modifiers":[{"id":7685,"kind":"modifierInvocation","modifierName":{"id":7684,"name":"onlyOwner","nameLocations":["1044:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"1044:9:21"},"nodeType":"ModifierInvocation","src":"1044:9:21"}],"name":"setVault","nameLocation":"1006:8:21","nodeType":"FunctionDefinition","parameters":{"id":7683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7682,"mutability":"mutable","name":"_vault","nameLocation":"1027:6:21","nodeType":"VariableDeclaration","scope":7718,"src":"1015:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_OysterVault_$8069","typeString":"contract OysterVault"},"typeName":{"id":7681,"nodeType":"UserDefinedTypeName","pathNode":{"id":7680,"name":"OysterVault","nameLocations":["1015:11:21"],"nodeType":"IdentifierPath","referencedDeclaration":8069,"src":"1015:11:21"},"referencedDeclaration":8069,"src":"1015:11:21","typeDescriptions":{"typeIdentifier":"t_contract$_OysterVault_$8069","typeString":"contract OysterVault"}},"visibility":"internal"}],"src":"1014:20:21"},"returnParameters":{"id":7686,"nodeType":"ParameterList","parameters":[],"src":"1054:0:21"},"scope":7920,"src":"997:334:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7746,"nodeType":"Block","src":"1418:118:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7728,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7629,"src":"1444:5:21","typeDescriptions":{"typeIdentifier":"t_contract$_OysterVault_$8069","typeString":"contract OysterVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_OysterVault_$8069","typeString":"contract OysterVault"}],"id":7727,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1436:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7726,"name":"address","nodeType":"ElementaryTypeName","src":"1436:7:21","typeDescriptions":{}}},"id":7729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1436:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1462:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7731,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1454:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7730,"name":"address","nodeType":"ElementaryTypeName","src":"1454:7:21","typeDescriptions":{}}},"id":7733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1454:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1436:28:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5661756c742061646472657373206e6f7420736574","id":7735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1466:23:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_2c0bfaf7cb6539155436714f38c4cb42f5eda75e9ba56026786122f864cadb75","typeString":"literal_string \"Vault address not set\""},"value":"Vault address not set"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2c0bfaf7cb6539155436714f38c4cb42f5eda75e9ba56026786122f864cadb75","typeString":"literal_string \"Vault address not set\""}],"id":7725,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1428:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1428:62:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7737,"nodeType":"ExpressionStatement","src":"1428:62:21"},{"expression":{"arguments":[{"arguments":[{"id":7741,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7629,"src":"1514:5:21","typeDescriptions":{"typeIdentifier":"t_contract$_OysterVault_$8069","typeString":"contract OysterVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_OysterVault_$8069","typeString":"contract OysterVault"}],"id":7740,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1506:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7739,"name":"address","nodeType":"ElementaryTypeName","src":"1506:7:21","typeDescriptions":{}}},"id":7742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1506:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7743,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7720,"src":"1522:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7738,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"1500:5:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1500:29:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7745,"nodeType":"ExpressionStatement","src":"1500:29:21"}]},"functionSelector":"24c93837","id":7747,"implemented":true,"kind":"function","modifiers":[{"id":7723,"kind":"modifierInvocation","modifierName":{"id":7722,"name":"onlyOwner","nameLocations":["1408:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"1408:9:21"},"nodeType":"ModifierInvocation","src":"1408:9:21"}],"name":"mintToVault","nameLocation":"1371:11:21","nodeType":"FunctionDefinition","parameters":{"id":7721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7720,"mutability":"mutable","name":"amount","nameLocation":"1391:6:21","nodeType":"VariableDeclaration","scope":7747,"src":"1383:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7719,"name":"uint256","nodeType":"ElementaryTypeName","src":"1383:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1382:16:21"},"returnParameters":{"id":7724,"nodeType":"ParameterList","parameters":[],"src":"1418:0:21"},"scope":7920,"src":"1362:174:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7769,"nodeType":"Block","src":"1703:152:21","statements":[{"expression":{"id":7760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7756,"name":"validMusicContracts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7633,"src":"1713:19:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7758,"indexExpression":{"id":7757,"name":"addressMusicContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7749,"src":"1733:20:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1713:41:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1757:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1713:48:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7761,"nodeType":"ExpressionStatement","src":"1713:48:21"},{"eventCall":{"arguments":[{"id":7763,"name":"addressMusicContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7749,"src":"1800:20:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":7764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1822:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":7762,"name":"validatedMusicContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7639,"src":"1777:22:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$","typeString":"function (address,bool)"}},"id":7765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1777:50:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7766,"nodeType":"EmitStatement","src":"1772:55:21"},{"expression":{"hexValue":"74727565","id":7767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1844:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":7755,"id":7768,"nodeType":"Return","src":"1837:11:21"}]},"functionSelector":"7eb4cde7","id":7770,"implemented":true,"kind":"function","modifiers":[{"id":7752,"kind":"modifierInvocation","modifierName":{"id":7751,"name":"onlyOwner","nameLocations":["1678:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"1678:9:21"},"nodeType":"ModifierInvocation","src":"1678:9:21"}],"name":"validateMusicContracts","nameLocation":"1616:22:21","nodeType":"FunctionDefinition","parameters":{"id":7750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7749,"mutability":"mutable","name":"addressMusicContract","nameLocation":"1647:20:21","nodeType":"VariableDeclaration","scope":7770,"src":"1639:28:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7748,"name":"address","nodeType":"ElementaryTypeName","src":"1639:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1638:30:21"},"returnParameters":{"id":7755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7754,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7770,"src":"1697:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7753,"name":"bool","nodeType":"ElementaryTypeName","src":"1697:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1696:6:21"},"scope":7920,"src":"1607:248:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7864,"nodeType":"Block","src":"2017:967:21","statements":[{"assignments":[7778],"declarations":[{"constant":false,"id":7778,"mutability":"mutable","name":"businessRateWei","nameLocation":"2035:15:21","nodeType":"VariableDeclaration","scope":7864,"src":"2027:23:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7777,"name":"uint256","nodeType":"ElementaryTypeName","src":"2027:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7782,"initialValue":{"commonType":{"typeIdentifier":"t_rational_200000000000000_by_1","typeString":"int_const 200000000000000"},"id":7781,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3230305f303030","id":7779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2053:7:21","typeDescriptions":{"typeIdentifier":"t_rational_200000_by_1","typeString":"int_const 200000"},"value":"200_000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"316539","id":7780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2063:3:21","typeDescriptions":{"typeIdentifier":"t_rational_1000000000_by_1","typeString":"int_const 1000000000"},"value":"1e9"},"src":"2053:13:21","typeDescriptions":{"typeIdentifier":"t_rational_200000000000000_by_1","typeString":"int_const 200000000000000"}},"nodeType":"VariableDeclarationStatement","src":"2027:39:21"},{"assignments":[7784],"declarations":[{"constant":false,"id":7784,"mutability":"mutable","name":"tokensToBuy","nameLocation":"2085:11:21","nodeType":"VariableDeclaration","scope":7864,"src":"2077:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7783,"name":"uint256","nodeType":"ElementaryTypeName","src":"2077:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7786,"initialValue":{"hexValue":"313030","id":7785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2099:3:21","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"nodeType":"VariableDeclarationStatement","src":"2077:25:21"},{"assignments":[7788],"declarations":[{"constant":false,"id":7788,"mutability":"mutable","name":"gweiPerToken","nameLocation":"2120:12:21","nodeType":"VariableDeclaration","scope":7864,"src":"2112:20:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7787,"name":"uint256","nodeType":"ElementaryTypeName","src":"2112:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7790,"initialValue":{"hexValue":"35305f303030","id":7789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2135:6:21","typeDescriptions":{"typeIdentifier":"t_rational_50000_by_1","typeString":"int_const 50000"},"value":"50_000"},"nodeType":"VariableDeclarationStatement","src":"2112:29:21"},{"assignments":[7792],"declarations":[{"constant":false,"id":7792,"mutability":"mutable","name":"weiRequired","nameLocation":"2161:11:21","nodeType":"VariableDeclaration","scope":7864,"src":"2153:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7791,"name":"uint256","nodeType":"ElementaryTypeName","src":"2153:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7800,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7793,"name":"tokensToBuy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7784,"src":"2175:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7794,"name":"gweiPerToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7788,"src":"2189:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2175:26:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"316539","id":7796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2204:3:21","typeDescriptions":{"typeIdentifier":"t_rational_1000000000_by_1","typeString":"int_const 1000000000"},"value":"1e9"},"src":"2175:32:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7798,"name":"businessRateWei","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7778,"src":"2210:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2175:50:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2153:72:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7802,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2244:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2248:5:21","memberName":"value","nodeType":"MemberAccess","src":"2244:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":7804,"name":"weiRequired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7792,"src":"2257:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2244:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74205765692073656e7420746f2062757920746f6b656e73","id":7806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2270:37:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_86507a7d7d18d00edab41068eefc3ef3ff83737ee53442e526a0ea723f603949","typeString":"literal_string \"Insufficient Wei sent to buy tokens\""},"value":"Insufficient Wei sent to buy tokens"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_86507a7d7d18d00edab41068eefc3ef3ff83737ee53442e526a0ea723f603949","typeString":"literal_string \"Insufficient Wei sent to buy tokens\""}],"id":7801,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2236:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2236:72:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7808,"nodeType":"ExpressionStatement","src":"2236:72:21"},{"assignments":[7810],"declarations":[{"constant":false,"id":7810,"mutability":"mutable","name":"remainingWei","nameLocation":"2327:12:21","nodeType":"VariableDeclaration","scope":7864,"src":"2319:20:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7809,"name":"uint256","nodeType":"ElementaryTypeName","src":"2319:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7815,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7811,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2342:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2346:5:21","memberName":"value","nodeType":"MemberAccess","src":"2342:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":7813,"name":"weiRequired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7792,"src":"2354:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2342:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2319:46:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":7817,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7629,"src":"2458:5:21","typeDescriptions":{"typeIdentifier":"t_contract$_OysterVault_$8069","typeString":"contract OysterVault"}},"id":7818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2464:15:21","memberName":"viewTokensVault","nodeType":"MemberAccess","referencedDeclaration":8068,"src":"2458:21:21","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":7819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2458:23:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":7820,"name":"tokensToBuy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7784,"src":"2485:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2458:38:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420656e6f75676820746f6b656e7320696e204f7973746572546f6b656e20636f6e7472616374","id":7822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2498:43:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_ca3cad5b864a3d4af13eee9d3c0d044aa408ce904e7fe3c87ecd049c253491b7","typeString":"literal_string \"Not enough tokens in OysterToken contract\""},"value":"Not enough tokens in OysterToken contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ca3cad5b864a3d4af13eee9d3c0d044aa408ce904e7fe3c87ecd049c253491b7","typeString":"literal_string \"Not enough tokens in OysterToken contract\""}],"id":7816,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2450:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2450:92:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7824,"nodeType":"ExpressionStatement","src":"2450:92:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7825,"name":"remainingWei","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7810,"src":"2632:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2632:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7847,"nodeType":"IfStatement","src":"2628:179:21","trueBody":{"id":7846,"nodeType":"Block","src":"2650:157:21","statements":[{"assignments":[7829,null],"declarations":[{"constant":false,"id":7829,"mutability":"mutable","name":"success","nameLocation":"2670:7:21","nodeType":"VariableDeclaration","scope":7846,"src":"2665:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7828,"name":"bool","nodeType":"ElementaryTypeName","src":"2665:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":7840,"initialValue":{"arguments":[{"hexValue":"","id":7838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2729:2:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"expression":{"id":7832,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2691:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2695:6:21","memberName":"sender","nodeType":"MemberAccess","src":"2691:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7831,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2683:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":7830,"name":"address","nodeType":"ElementaryTypeName","src":"2683:8:21","stateMutability":"payable","typeDescriptions":{}}},"id":7834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2683:19:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":7835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2703:4:21","memberName":"call","nodeType":"MemberAccess","src":"2683:24:21","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":7837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":7836,"name":"remainingWei","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7810,"src":"2715:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2683:45:21","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":7839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2683:49:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2664:68:21"},{"expression":{"arguments":[{"id":7842,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7829,"src":"2754:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4661696c656420746f2073656e642072656d61696e696e67204574686572","id":7843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2763:32:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_fa207173f56547efb95af4cef634dbfa0d7f314b8618baeae97339d76512f226","typeString":"literal_string \"Failed to send remaining Ether\""},"value":"Failed to send remaining Ether"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fa207173f56547efb95af4cef634dbfa0d7f314b8618baeae97339d76512f226","typeString":"literal_string \"Failed to send remaining Ether\""}],"id":7841,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2746:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2746:50:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7845,"nodeType":"ExpressionStatement","src":"2746:50:21"}]}},{"expression":{"arguments":[{"expression":{"id":7851,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2879:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2883:6:21","memberName":"sender","nodeType":"MemberAccess","src":"2879:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7853,"name":"tokensToBuy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7784,"src":"2891:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7848,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7629,"src":"2863:5:21","typeDescriptions":{"typeIdentifier":"t_contract$_OysterVault_$8069","typeString":"contract OysterVault"}},"id":7850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2869:9:21","memberName":"sendToken","nodeType":"MemberAccess","referencedDeclaration":8016,"src":"2863:15:21","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":7854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2863:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7855,"nodeType":"ExpressionStatement","src":"2863:40:21"},{"eventCall":{"arguments":[{"expression":{"id":7857,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2931:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2935:6:21","memberName":"sender","nodeType":"MemberAccess","src":"2931:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7859,"name":"remainingWei","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7810,"src":"2943:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7856,"name":"WeiRefunded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7645,"src":"2919:11:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2919:37:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7861,"nodeType":"EmitStatement","src":"2914:42:21"},{"expression":{"hexValue":"74727565","id":7862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2973:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":7776,"id":7863,"nodeType":"Return","src":"2966:11:21"}]},"functionSelector":"917b1bf5","id":7865,"implemented":true,"kind":"function","modifiers":[{"id":7773,"kind":"modifierInvocation","modifierName":{"id":7772,"name":"onlyValidMusicContract","nameLocations":["1979:22:21"],"nodeType":"IdentifierPath","referencedDeclaration":7663,"src":"1979:22:21"},"nodeType":"ModifierInvocation","src":"1979:22:21"}],"name":"buy100OSTToMusicContract","nameLocation":"1935:24:21","nodeType":"FunctionDefinition","parameters":{"id":7771,"nodeType":"ParameterList","parameters":[],"src":"1959:2:21"},"returnParameters":{"id":7776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7775,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7865,"src":"2011:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7774,"name":"bool","nodeType":"ElementaryTypeName","src":"2011:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2010:6:21"},"scope":7920,"src":"1926:1058:21","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":7918,"nodeType":"Block","src":"3138:359:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7877,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7869,"src":"3156:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3165:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3156:10:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e74206d7573742062652067726561746572207468616e207a65726f","id":7880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3168:34:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887","typeString":"literal_string \"Amount must be greater than zero\""},"value":"Amount must be greater than zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887","typeString":"literal_string \"Amount must be greater than zero\""}],"id":7876,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3148:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3148:55:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7882,"nodeType":"ExpressionStatement","src":"3148:55:21"},{"expression":{"arguments":[{"expression":{"id":7886,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3234:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3238:6:21","memberName":"sender","nodeType":"MemberAccess","src":"3234:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7888,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7869,"src":"3246:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7883,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7629,"src":"3214:5:21","typeDescriptions":{"typeIdentifier":"t_contract$_OysterVault_$8069","typeString":"contract OysterVault"}},"id":7885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3220:13:21","memberName":"receiveTokens","nodeType":"MemberAccess","referencedDeclaration":8054,"src":"3214:19:21","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":7889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3214:39:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7890,"nodeType":"ExpressionStatement","src":"3214:39:21"},{"assignments":[7892],"declarations":[{"constant":false,"id":7892,"mutability":"mutable","name":"tokenValueInWei","nameLocation":"3271:15:21","nodeType":"VariableDeclaration","scope":7918,"src":"3263:23:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7891,"name":"uint256","nodeType":"ElementaryTypeName","src":"3263:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7896,"initialValue":{"commonType":{"typeIdentifier":"t_rational_50000000000000_by_1","typeString":"int_const 50000000000000"},"id":7895,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3530303030","id":7893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3289:5:21","typeDescriptions":{"typeIdentifier":"t_rational_50000_by_1","typeString":"int_const 50000"},"value":"50000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"316539","id":7894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3297:3:21","typeDescriptions":{"typeIdentifier":"t_rational_1000000000_by_1","typeString":"int_const 1000000000"},"value":"1e9"},"src":"3289:11:21","typeDescriptions":{"typeIdentifier":"t_rational_50000000000000_by_1","typeString":"int_const 50000000000000"}},"nodeType":"VariableDeclarationStatement","src":"3263:37:21"},{"assignments":[7898],"declarations":[{"constant":false,"id":7898,"mutability":"mutable","name":"amountTransfer","nameLocation":"3318:14:21","nodeType":"VariableDeclaration","scope":7918,"src":"3310:22:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7897,"name":"uint256","nodeType":"ElementaryTypeName","src":"3310:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7902,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7899,"name":"tokenValueInWei","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7892,"src":"3335:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7900,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7869,"src":"3353:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3335:24:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3310:49:21"},{"expression":{"arguments":[{"id":7908,"name":"amountTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7898,"src":"3394:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":7905,"name":"holder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7867,"src":"3377:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7904,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3369:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":7903,"name":"address","nodeType":"ElementaryTypeName","src":"3369:8:21","stateMutability":"payable","typeDescriptions":{}}},"id":7906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3369:15:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":7907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3385:8:21","memberName":"transfer","nodeType":"MemberAccess","src":"3369:24:21","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":7909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3369:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7910,"nodeType":"ExpressionStatement","src":"3369:40:21"},{"eventCall":{"arguments":[{"id":7912,"name":"holder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7867,"src":"3446:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7913,"name":"amountTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7898,"src":"3454:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7911,"name":"transferViaTokenSale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7651,"src":"3425:20:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3425:44:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7915,"nodeType":"EmitStatement","src":"3420:49:21"},{"expression":{"hexValue":"74727565","id":7916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3486:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":7875,"id":7917,"nodeType":"Return","src":"3479:11:21"}]},"functionSelector":"0a3871eb","id":7919,"implemented":true,"kind":"function","modifiers":[{"id":7872,"kind":"modifierInvocation","modifierName":{"id":7871,"name":"onlyValidMusicContract","nameLocations":["3100:22:21"],"nodeType":"IdentifierPath","referencedDeclaration":7663,"src":"3100:22:21"},"nodeType":"ModifierInvocation","src":"3100:22:21"}],"name":"sellOysterToken","nameLocation":"3035:15:21","nodeType":"FunctionDefinition","parameters":{"id":7870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7867,"mutability":"mutable","name":"holder","nameLocation":"3059:6:21","nodeType":"VariableDeclaration","scope":7919,"src":"3051:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7866,"name":"address","nodeType":"ElementaryTypeName","src":"3051:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7869,"mutability":"mutable","name":"amount","nameLocation":"3075:6:21","nodeType":"VariableDeclaration","scope":7919,"src":"3067:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7868,"name":"uint256","nodeType":"ElementaryTypeName","src":"3067:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3050:32:21"},"returnParameters":{"id":7875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7874,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7919,"src":"3132:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7873,"name":"bool","nodeType":"ElementaryTypeName","src":"3132:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3131:6:21"},"scope":7920,"src":"3026:471:21","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":8070,"src":"240:3260:21","usedErrors":[13,18,184,189,194,203,208,213,933,940,1158,1282,1284,2820,2825,2830],"usedEvents":[24,152,836,845,7639,7645,7651]},{"abstract":false,"baseContracts":[{"baseName":{"id":7921,"name":"Ownable","nameLocations":["3526:7:21"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"3526:7:21"},"id":7922,"nodeType":"InheritanceSpecifier","src":"3526:7:21"}],"canonicalName":"OysterVault","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":8069,"linearizedBaseContracts":[8069,147,1148],"name":"OysterVault","nameLocation":"3511:11:21","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"fd994c16","id":7925,"mutability":"mutable","name":"oysterToken","nameLocation":"3554:11:21","nodeType":"VariableDeclaration","scope":8069,"src":"3540:25:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$902","typeString":"contract IERC20"},"typeName":{"id":7924,"nodeType":"UserDefinedTypeName","pathNode":{"id":7923,"name":"IERC20","nameLocations":["3540:6:21"],"nodeType":"IdentifierPath","referencedDeclaration":902,"src":"3540:6:21"},"referencedDeclaration":902,"src":"3540:6:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$902","typeString":"contract IERC20"}},"visibility":"public"},{"anonymous":false,"eventSelector":"16b0da2ffcb90c6723317bd637d9aad7f04711f42bbe0ac0918ebe10f1f9001c","id":7931,"name":"TokensDistributed","nameLocation":"3578:17:21","nodeType":"EventDefinition","parameters":{"id":7930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7927,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"3612:2:21","nodeType":"VariableDeclaration","scope":7931,"src":"3596:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7926,"name":"address","nodeType":"ElementaryTypeName","src":"3596:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7929,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"3624:6:21","nodeType":"VariableDeclaration","scope":7931,"src":"3616:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7928,"name":"uint256","nodeType":"ElementaryTypeName","src":"3616:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3595:36:21"},"src":"3572:60:21"},{"anonymous":false,"eventSelector":"656c83d0d1a4a41c0e34ea8b02d211385e09a2cf0c0922435884dc1a64cd9ce0","id":7937,"name":"TokensRecieved","nameLocation":"3643:14:21","nodeType":"EventDefinition","parameters":{"id":7936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7933,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"3674:4:21","nodeType":"VariableDeclaration","scope":7937,"src":"3658:20:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7932,"name":"address","nodeType":"ElementaryTypeName","src":"3658:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7935,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"3688:6:21","nodeType":"VariableDeclaration","scope":7937,"src":"3680:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7934,"name":"uint256","nodeType":"ElementaryTypeName","src":"3680:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3657:38:21"},"src":"3637:59:21"},{"body":{"id":7951,"nodeType":"Block","src":"3729:134:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7940,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3747:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3751:6:21","memberName":"sender","nodeType":"MemberAccess","src":"3747:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":7944,"name":"oysterToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7925,"src":"3769:11:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$902","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$902","typeString":"contract IERC20"}],"id":7943,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3761:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7942,"name":"address","nodeType":"ElementaryTypeName","src":"3761:7:21","typeDescriptions":{}}},"id":7945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3761:20:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3747:34:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546869732066756e6374696f6e2063616e206f6e6c792062652063616c6c656420627920746865206f7973746572546f6b656e2061646472657373","id":7947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3783:61:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc19085001e9818f32dd30d3cc43fa530e646a53f894e501ea6a63ca41ede20a","typeString":"literal_string \"This function can only be called by the oysterToken address\""},"value":"This function can only be called by the oysterToken address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc19085001e9818f32dd30d3cc43fa530e646a53f894e501ea6a63ca41ede20a","typeString":"literal_string \"This function can only be called by the oysterToken address\""}],"id":7939,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3739:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3739:106:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7949,"nodeType":"ExpressionStatement","src":"3739:106:21"},{"id":7950,"nodeType":"PlaceholderStatement","src":"3855:1:21"}]},"id":7952,"name":"onlyOysterToken","nameLocation":"3711:15:21","nodeType":"ModifierDefinition","parameters":{"id":7938,"nodeType":"ParameterList","parameters":[],"src":"3726:2:21"},"src":"3702:161:21","virtual":false,"visibility":"internal"},{"body":{"id":7967,"nodeType":"Block","src":"3946:43:21","statements":[{"expression":{"id":7965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7963,"name":"oysterToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7925,"src":"3956:11:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$902","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7964,"name":"_oysterToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7955,"src":"3970:12:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$902","typeString":"contract IERC20"}},"src":"3956:26:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$902","typeString":"contract IERC20"}},"id":7966,"nodeType":"ExpressionStatement","src":"3956:26:21"}]},"id":7968,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":7960,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7957,"src":"3932:12:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":7961,"kind":"baseConstructorSpecifier","modifierName":{"id":7959,"name":"Ownable","nameLocations":["3924:7:21"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"3924:7:21"},"nodeType":"ModifierInvocation","src":"3924:21:21"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7955,"mutability":"mutable","name":"_oysterToken","nameLocation":"3888:12:21","nodeType":"VariableDeclaration","scope":7968,"src":"3881:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$902","typeString":"contract IERC20"},"typeName":{"id":7954,"nodeType":"UserDefinedTypeName","pathNode":{"id":7953,"name":"IERC20","nameLocations":["3881:6:21"],"nodeType":"IdentifierPath","referencedDeclaration":902,"src":"3881:6:21"},"referencedDeclaration":902,"src":"3881:6:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$902","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":7957,"mutability":"mutable","name":"initialOwner","nameLocation":"3910:12:21","nodeType":"VariableDeclaration","scope":7968,"src":"3902:20:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7956,"name":"address","nodeType":"ElementaryTypeName","src":"3902:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3880:43:21"},"returnParameters":{"id":7962,"nodeType":"ParameterList","parameters":[],"src":"3946:0:21"},"scope":8069,"src":"3869:120:21","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8015,"nodeType":"Block","src":"4093:406:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7980,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7972,"src":"4111:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4120:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4111:10:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e74206d7573742062652067726561746572207468616e207a65726f","id":7983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4123:34:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887","typeString":"literal_string \"Amount must be greater than zero\""},"value":"Amount must be greater than zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887","typeString":"literal_string \"Amount must be greater than zero\""}],"id":7979,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4103:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4103:55:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7985,"nodeType":"ExpressionStatement","src":"4103:55:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":7991,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4219:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_OysterVault_$8069","typeString":"contract OysterVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_OysterVault_$8069","typeString":"contract OysterVault"}],"id":7990,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4211:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7989,"name":"address","nodeType":"ElementaryTypeName","src":"4211:7:21","typeDescriptions":{}}},"id":7992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4211:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":7987,"name":"oysterToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7925,"src":"4189:11:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$902","typeString":"contract IERC20"}},"id":7988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4201:9:21","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":859,"src":"4189:21:21","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":7993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4189:36:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":7994,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7972,"src":"4229:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4189:46:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5661756c7420646f6573206e6f74206861766520656e6f75676820746f6b656e73","id":7996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4249:35:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_eb82580376e5d7bd4b895a715ffd64472b5471ab14ab5b2b30156085d7bfd252","typeString":"literal_string \"Vault does not have enough tokens\""},"value":"Vault does not have enough tokens"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_eb82580376e5d7bd4b895a715ffd64472b5471ab14ab5b2b30156085d7bfd252","typeString":"literal_string \"Vault does not have enough tokens\""}],"id":7986,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4168:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4168:126:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7998,"nodeType":"ExpressionStatement","src":"4168:126:21"},{"expression":{"arguments":[{"arguments":[{"id":8002,"name":"musicContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7970,"src":"4346:13:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8003,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7972,"src":"4361:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8000,"name":"oysterToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7925,"src":"4325:11:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$902","typeString":"contract IERC20"}},"id":8001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4337:8:21","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":869,"src":"4325:20:21","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":8004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4325:43:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e207472616e73666572206661696c6564","id":8005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4382:23:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4","typeString":"literal_string \"Token transfer failed\""},"value":"Token transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4","typeString":"literal_string \"Token transfer failed\""}],"id":7999,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4304:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4304:111:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8007,"nodeType":"ExpressionStatement","src":"4304:111:21"},{"eventCall":{"arguments":[{"id":8009,"name":"musicContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7970,"src":"4449:13:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8010,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7972,"src":"4464:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8008,"name":"TokensDistributed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7931,"src":"4431:17:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4431:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8012,"nodeType":"EmitStatement","src":"4426:45:21"},{"expression":{"hexValue":"74727565","id":8013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4488:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":7978,"id":8014,"nodeType":"Return","src":"4481:11:21"}]},"functionSelector":"412664ae","id":8016,"implemented":true,"kind":"function","modifiers":[{"id":7975,"kind":"modifierInvocation","modifierName":{"id":7974,"name":"onlyOysterToken","nameLocations":["4062:15:21"],"nodeType":"IdentifierPath","referencedDeclaration":7952,"src":"4062:15:21"},"nodeType":"ModifierInvocation","src":"4062:15:21"}],"name":"sendToken","nameLocation":"4004:9:21","nodeType":"FunctionDefinition","parameters":{"id":7973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7970,"mutability":"mutable","name":"musicContract","nameLocation":"4022:13:21","nodeType":"VariableDeclaration","scope":8016,"src":"4014:21:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7969,"name":"address","nodeType":"ElementaryTypeName","src":"4014:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7972,"mutability":"mutable","name":"amount","nameLocation":"4045:6:21","nodeType":"VariableDeclaration","scope":8016,"src":"4037:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7971,"name":"uint256","nodeType":"ElementaryTypeName","src":"4037:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4013:39:21"},"returnParameters":{"id":7978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7977,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8016,"src":"4087:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7976,"name":"bool","nodeType":"ElementaryTypeName","src":"4087:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4086:6:21"},"scope":8069,"src":"3995:504:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8053,"nodeType":"Block","src":"4607:228:21","statements":[{"assignments":[8028],"declarations":[{"constant":false,"id":8028,"mutability":"mutable","name":"success","nameLocation":"4622:7:21","nodeType":"VariableDeclaration","scope":8053,"src":"4617:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8027,"name":"bool","nodeType":"ElementaryTypeName","src":"4617:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":8040,"initialValue":{"arguments":[{"id":8033,"name":"musicContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8018,"src":"4665:13:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":8036,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4688:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_OysterVault_$8069","typeString":"contract OysterVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_OysterVault_$8069","typeString":"contract OysterVault"}],"id":8035,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4680:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8034,"name":"address","nodeType":"ElementaryTypeName","src":"4680:7:21","typeDescriptions":{}}},"id":8037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4680:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8038,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8020,"src":"4695:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":8030,"name":"oysterToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7925,"src":"4639:11:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$902","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$902","typeString":"contract IERC20"}],"id":8029,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"4632:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$902_$","typeString":"type(contract IERC20)"}},"id":8031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4632:19:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$902","typeString":"contract IERC20"}},"id":8032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4652:12:21","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":901,"src":"4632:32:21","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":8039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4632:70:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4617:85:21"},{"expression":{"arguments":[{"id":8042,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8028,"src":"4721:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e207472616e73666572206661696c6564","id":8043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4730:23:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4","typeString":"literal_string \"Token transfer failed\""},"value":"Token transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4","typeString":"literal_string \"Token transfer failed\""}],"id":8041,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4713:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4713:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8045,"nodeType":"ExpressionStatement","src":"4713:41:21"},{"eventCall":{"arguments":[{"id":8047,"name":"musicContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8018,"src":"4785:13:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8048,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8020,"src":"4800:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8046,"name":"TokensRecieved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7937,"src":"4770:14:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4770:37:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8050,"nodeType":"EmitStatement","src":"4765:42:21"},{"expression":{"hexValue":"74727565","id":8051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4824:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":8026,"id":8052,"nodeType":"Return","src":"4817:11:21"}]},"functionSelector":"35729130","id":8054,"implemented":true,"kind":"function","modifiers":[{"id":8023,"kind":"modifierInvocation","modifierName":{"id":8022,"name":"onlyOysterToken","nameLocations":["4576:15:21"],"nodeType":"IdentifierPath","referencedDeclaration":7952,"src":"4576:15:21"},"nodeType":"ModifierInvocation","src":"4576:15:21"}],"name":"receiveTokens","nameLocation":"4514:13:21","nodeType":"FunctionDefinition","parameters":{"id":8021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8018,"mutability":"mutable","name":"musicContract","nameLocation":"4536:13:21","nodeType":"VariableDeclaration","scope":8054,"src":"4528:21:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8017,"name":"address","nodeType":"ElementaryTypeName","src":"4528:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8020,"mutability":"mutable","name":"amount","nameLocation":"4559:6:21","nodeType":"VariableDeclaration","scope":8054,"src":"4551:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8019,"name":"uint256","nodeType":"ElementaryTypeName","src":"4551:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4527:39:21"},"returnParameters":{"id":8026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8025,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8054,"src":"4601:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8024,"name":"bool","nodeType":"ElementaryTypeName","src":"4601:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4600:6:21"},"scope":8069,"src":"4505:330:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8067,"nodeType":"Block","src":"4900:60:21","statements":[{"expression":{"arguments":[{"arguments":[{"id":8063,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4947:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_OysterVault_$8069","typeString":"contract OysterVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_OysterVault_$8069","typeString":"contract OysterVault"}],"id":8062,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4939:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8061,"name":"address","nodeType":"ElementaryTypeName","src":"4939:7:21","typeDescriptions":{}}},"id":8064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4939:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":8059,"name":"oysterToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7925,"src":"4917:11:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$902","typeString":"contract IERC20"}},"id":8060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4929:9:21","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":859,"src":"4917:21:21","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":8065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4917:36:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8058,"id":8066,"nodeType":"Return","src":"4910:43:21"}]},"functionSelector":"1f4aad2a","id":8068,"implemented":true,"kind":"function","modifiers":[],"name":"viewTokensVault","nameLocation":"4850:15:21","nodeType":"FunctionDefinition","parameters":{"id":8055,"nodeType":"ParameterList","parameters":[],"src":"4865:2:21"},"returnParameters":{"id":8058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8057,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8068,"src":"4891:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8056,"name":"uint256","nodeType":"ElementaryTypeName","src":"4891:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4890:9:21"},"scope":8069,"src":"4841:119:21","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":8070,"src":"3502:1460:21","usedErrors":[13,18],"usedEvents":[24,7931,7937]}],"src":"32:4930:21"},"id":21}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"IERC5267":{"abi":[{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ERC20Permit":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","eip712Domain()":"84b0196e","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[ERC-2612]. Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\\\"1\\\"`. It's a good idea to use the same `name` that is defined as the ERC-20 token name.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":\"ERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xaa7f0646f49ebe2606eeca169f85c56451bbaeeeb06265fa076a03369a25d1d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee931d4e832385765967efe6366dcc6d00d6a2d794f9c66ee38283c03882de9c\",\"dweb:/ipfs/QmR6SkuJGYxpQeLz38rBdghqaWqEPfzUsL9kBoXgEXKtbD\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x27dbc90e5136ffe46c04f7596fc2dbcc3acebd8d504da3d93fdb8496e6de04f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea8b92e4245d75a5579c10f22f118f7b4ba07c57341f181f0b2a85ff8663de3\",\"dweb:/ipfs/Qme3Ss5ByjmkxxkMdLpyu7fQ1PCtjNFH1wEFszt2BZePiG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a\",\"dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x10eb97d047f8d84fe263a02bb4a656ac6674f6679d74532cc37546289e073a9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e41287d40b0c46982f1083d40d32de2761f009c5c51627fe79a7feb0ab1cf5c\",\"dweb:/ipfs/Qme7dbh6HX3ZvUJdbQAcVqXkmyXyfcLiUZRhhon3cU6K8p\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[ERC-2612]. Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x27dbc90e5136ffe46c04f7596fc2dbcc3acebd8d504da3d93fdb8496e6de04f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea8b92e4245d75a5579c10f22f118f7b4ba07c57341f181f0b2a85ff8663de3\",\"dweb:/ipfs/Qme3Ss5ByjmkxxkMdLpyu7fQ1PCtjNFH1wEFszt2BZePiG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Nonces.sol":{"Nonces":{"abi":[{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"nonces(address)":"7ecebe00"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Provides tracking nonces for addresses. Nonces will only increment.\",\"errors\":{\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"kind\":\"dev\",\"methods\":{\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Nonces.sol\":\"Nonces\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220480443931a2b8e6d08b7f7f303a7c4e4fb18367fcb810a9dc62b284df191e4e064736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE DIV NUMBER SWAP4 BYTE 0x2B DUP15 PUSH14 0x8B7F7F303A7C4E4FB18367FCB81 EXP SWAP14 0xC6 0x2B 0x28 0x4D CALL SWAP2 0xE4 0xE0 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"657:1315:10:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;657:1315:10;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220480443931a2b8e6d08b7f7f303a7c4e4fb18367fcb810a9dc62b284df191e4e064736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE DIV NUMBER SWAP4 BYTE 0x2B DUP15 PUSH14 0x8B7F7F303A7C4E4FB18367FCB81 EXP SWAP14 0xC6 0x2B 0x28 0x4D CALL SWAP2 0xE4 0xE0 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"657:1315:10:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ShortStrings":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d35ce211169d148a6f9cd2e0c2d84e5465f6374c4dbeeb75c44aeb89ade6792564736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 TLOAD 0xE2 GT AND SWAP14 EQ DUP11 PUSH16 0x9CD2E0C2D84E5465F6374C4DBEEB75C4 BLOBBASEFEE 0xEB DUP10 0xAD 0xE6 PUSH26 0x2564736F6C634300081C00330000000000000000000000000000 ","sourceMap":"1255:3026:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1255:3026:11;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d35ce211169d148a6f9cd2e0c2d84e5465f6374c4dbeeb75c44aeb89ade6792564736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 TLOAD 0xE2 GT AND SWAP14 EQ DUP11 PUSH16 0x9CD2E0C2D84E5465F6374C4DBEEB75C4 BLOBBASEFEE 0xEB DUP10 0xAD 0xE6 PUSH26 0x2564736F6C634300081C00330000000000000000000000000000 ","sourceMap":"1255:3026:11:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a\",\"dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fd02ad865f4d4d3506835bb24d0b42df1b76c7724b68b60d7e5678d28df83b7364736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT MUL 0xAD DUP7 PUSH0 0x4D 0x4D CALLDATALOAD MOD DUP4 JUMPDEST 0xB2 0x4D SIGNEXTEND TIMESTAMP 0xDF SHL PUSH23 0xC7724B68B60D7E5678D28DF83B7364736F6C634300081C STOP CALLER ","sourceMap":"1407:2774:12:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1407:2774:12;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fd02ad865f4d4d3506835bb24d0b42df1b76c7724b68b60d7e5678d28df83b7364736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT MUL 0xAD DUP7 PUSH0 0x4D 0x4D CALLDATALOAD MOD DUP4 JUMPDEST 0xB2 0x4D SIGNEXTEND TIMESTAMP 0xDF SHL PUSH23 0xC7724B68B60D7E5678D28DF83B7364736F6C634300081C STOP CALLER ","sourceMap":"1407:2774:12:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122089bcde05a30c9e412b93e7bc8eec6b07975bfd9eb68e0a16767c157905494e3564736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP10 0xBC 0xDE SDIV LOG3 0xC SWAP15 COINBASE 0x2B SWAP4 0xE7 0xBC DUP15 0xEC PUSH12 0x7975BFD9EB68E0A16767C15 PUSH26 0x5494E3564736F6C634300081C00330000000000000000000000 ","sourceMap":"297:16541:13:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;297:16541:13;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122089bcde05a30c9e412b93e7bc8eec6b07975bfd9eb68e0a16767c157905494e3564736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP10 0xBC 0xDE SDIV LOG3 0xC SWAP15 COINBASE 0x2B SWAP4 0xE7 0xBC DUP15 0xEC PUSH12 0x7975BFD9EB68E0A16767C15 PUSH26 0x5494E3564736F6C634300081C00330000000000000000000000 ","sourceMap":"297:16541:13:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203376831630f08b8d35435f8576945761134eb73cbed0d9c2ec5b64bf80d3094a64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLER PUSH23 0x831630F08B8D35435F8576945761134EB73CBED0D9C2EC JUMPDEST PUSH5 0xBF80D3094A PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"344:7470:14:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;344:7470:14;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203376831630f08b8d35435f8576945761134eb73cbed0d9c2ec5b64bf80d3094a64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLER PUSH23 0x831630F08B8D35435F8576945761134EB73CBED0D9C2EC JUMPDEST PUSH5 0xBF80D3094A PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"344:7470:14:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"EIP712":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a\",\"dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x10eb97d047f8d84fe263a02bb4a656ac6674f6679d74532cc37546289e073a9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e41287d40b0c46982f1083d40d32de2761f009c5c51627fe79a7feb0ab1cf5c\",\"dweb:/ipfs/Qme7dbh6HX3ZvUJdbQAcVqXkmyXyfcLiUZRhhon3cU6K8p\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"MessageHashUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220578b49af7860eba09c9ceb9e60e67930d3671e1ef264ce9639d81ec1d194906e64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPI DUP12 BLOBHASH 0xAF PUSH25 0x60EBA09C9CEB9E60E67930D3671E1EF264CE9639D81EC1D194 SWAP1 PUSH15 0x64736F6C634300081C003300000000 ","sourceMap":"521:3181:16:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;521:3181:16;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220578b49af7860eba09c9ceb9e60e67930d3671e1ef264ce9639d81ec1d194906e64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPI DUP12 BLOBHASH 0xAF PUSH25 0x60EBA09C9CEB9E60E67930D3671E1EF264CE9639D81EC1D194 SWAP1 PUSH15 0x64736F6C634300081C003300000000 ","sourceMap":"521:3181:16:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cb20f7331818f57669171d01c05e9360981a09eef0109f5b1278b98ffce98cb664736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCB KECCAK256 0xF7 CALLER XOR XOR CREATE2 PUSH23 0x69171D01C05E9360981A09EEF0109F5B1278B98FFCE98C 0xB6 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"281:28026:17:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;281:28026:17;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cb20f7331818f57669171d01c05e9360981a09eef0109f5b1278b98ffce98cb664736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCB KECCAK256 0xF7 CALLER XOR XOR CREATE2 PUSH23 0x69171D01C05E9360981A09EEF0109F5B1278B98FFCE98C 0xB6 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"281:28026:17:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f339f8e25e68a389c2a927bb23c6cb93c79c9384ea0005062ee031ef0df1d28e64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN CODECOPY 0xF8 0xE2 MCOPY PUSH9 0xA389C2A927BB23C6CB SWAP4 0xC7 SWAP13 SWAP4 DUP5 0xEA STOP SDIV MOD 0x2E 0xE0 BALANCE 0xEF 0xD CALL 0xD2 DUP15 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"769:34173:18:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;769:34173:18;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f339f8e25e68a389c2a927bb23c6cb93c79c9384ea0005062ee031ef0df1d28e64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN CODECOPY 0xF8 0xE2 MCOPY PUSH9 0xA389C2A927BB23C6CB SWAP4 0xC7 SWAP13 SWAP4 DUP5 0xEA STOP SDIV MOD 0x2E 0xE0 BALANCE 0xEF 0xD CALL 0xD2 DUP15 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"769:34173:18:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220359be74cda55339d335080ca5f6a3089ca675c8b749bb38b7043fe3d3c5b95b164736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD SWAP12 0xE7 0x4C 0xDA SSTORE CALLER SWAP14 CALLER POP DUP1 0xCA PUSH0 PUSH11 0x3089CA675C8B749BB38B70 NUMBER INVALID RETURNDATASIZE EXTCODECOPY JUMPDEST SWAP6 0xB1 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"258:2354:19:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;258:2354:19;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220359be74cda55339d335080ca5f6a3089ca675c8b749bb38b7043fe3d3c5b95b164736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD SWAP12 0xE7 0x4C 0xDA SSTORE CALLER SWAP14 CALLER POP DUP1 0xCA PUSH0 PUSH11 0x3089CA675C8B749BB38B70 NUMBER INVALID RETURNDATASIZE EXTCODECOPY JUMPDEST SWAP6 0xB1 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"258:2354:19:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"contracts/MusicContract.sol":{"MusicContract":{"abi":[{"inputs":[{"internalType":"contract OysterToken","name":"_oysterTokenContract","type":"address"},{"internalType":"contract OysterVault","name":"_oysterVaultContract","type":"address"},{"internalType":"uint256","name":"_rightPurchaseValue","type":"uint256"},{"internalType":"uint256","name":"_valueForListening","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"addressRight","type":"address"},{"indexed":true,"internalType":"address","name":"addressThisMusicContract","type":"address"},{"indexed":false,"internalType":"uint8","name":"percentageOfRights","type":"uint8"}],"name":"assignedRight","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"hearAddress","type":"address"},{"indexed":false,"internalType":"bool","name":"confirm","type":"bool"}],"name":"musicHeard","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"addressThisMusicContract","type":"address"},{"indexed":false,"internalType":"bool","name":"musicContactIsSealed","type":"bool"}],"name":"musicWithSealedRights","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"purchaseAddress","type":"address"},{"indexed":false,"internalType":"bool","name":"activated","type":"bool"}],"name":"purchaseMade","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"addressHolderToken","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountToken","type":"uint256"}],"name":"tokenAssigned","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"addressRight","type":"address"},{"indexed":true,"internalType":"address","name":"addressThisMusicContract","type":"address"},{"indexed":false,"internalType":"uint8","name":"percentageOfRights","type":"uint8"}],"name":"withdrawalRight","type":"event"},{"inputs":[{"internalType":"address","name":"addressRight","type":"address"},{"internalType":"uint8","name":"percentageOfRights","type":"uint8"}],"name":"assignRights","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"balanceTokens","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"buy100OysterToken","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"buyRightsMusic","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"divisionOfRights","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"listenMusic","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"musicContactIsSealed","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"remainingRightsDivision","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"rightHolders","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"rightPurchaseValueInGwei","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"sealRights","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"sellOysterToken","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"tokensPerAddress","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"valueForListeningInGwei","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"viewBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"addressRight","type":"address"},{"internalType":"uint8","name":"percentageOfRights","type":"uint8"}],"name":"withdrawRights","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{"@_7105":{"entryPoint":null,"id":7105,"parameterSlots":4,"returnSlots":0},"abi_decode_tuple_t_contract$_OysterToken_$7920t_contract$_OysterVault_$8069t_uint256t_uint256_fromMemory":{"entryPoint":153,"id":null,"parameterSlots":2,"returnSlots":4},"validator_revert_contract_OysterToken":{"entryPoint":130,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:843:22","nodeType":"YulBlock","src":"0:843:22","statements":[{"nativeSrc":"6:3:22","nodeType":"YulBlock","src":"6:3:22","statements":[]},{"body":{"nativeSrc":"72:86:22","nodeType":"YulBlock","src":"72:86:22","statements":[{"body":{"nativeSrc":"136:16:22","nodeType":"YulBlock","src":"136:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"145:1:22","nodeType":"YulLiteral","src":"145:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"148:1:22","nodeType":"YulLiteral","src":"148:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"138:6:22","nodeType":"YulIdentifier","src":"138:6:22"},"nativeSrc":"138:12:22","nodeType":"YulFunctionCall","src":"138:12:22"},"nativeSrc":"138:12:22","nodeType":"YulExpressionStatement","src":"138:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"95:5:22","nodeType":"YulIdentifier","src":"95:5:22"},{"arguments":[{"name":"value","nativeSrc":"106:5:22","nodeType":"YulIdentifier","src":"106:5:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"121:3:22","nodeType":"YulLiteral","src":"121:3:22","type":"","value":"160"},{"kind":"number","nativeSrc":"126:1:22","nodeType":"YulLiteral","src":"126:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"117:3:22","nodeType":"YulIdentifier","src":"117:3:22"},"nativeSrc":"117:11:22","nodeType":"YulFunctionCall","src":"117:11:22"},{"kind":"number","nativeSrc":"130:1:22","nodeType":"YulLiteral","src":"130:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"113:3:22","nodeType":"YulIdentifier","src":"113:3:22"},"nativeSrc":"113:19:22","nodeType":"YulFunctionCall","src":"113:19:22"}],"functionName":{"name":"and","nativeSrc":"102:3:22","nodeType":"YulIdentifier","src":"102:3:22"},"nativeSrc":"102:31:22","nodeType":"YulFunctionCall","src":"102:31:22"}],"functionName":{"name":"eq","nativeSrc":"92:2:22","nodeType":"YulIdentifier","src":"92:2:22"},"nativeSrc":"92:42:22","nodeType":"YulFunctionCall","src":"92:42:22"}],"functionName":{"name":"iszero","nativeSrc":"85:6:22","nodeType":"YulIdentifier","src":"85:6:22"},"nativeSrc":"85:50:22","nodeType":"YulFunctionCall","src":"85:50:22"},"nativeSrc":"82:70:22","nodeType":"YulIf","src":"82:70:22"}]},"name":"validator_revert_contract_OysterToken","nativeSrc":"14:144:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"61:5:22","nodeType":"YulTypedName","src":"61:5:22","type":""}],"src":"14:144:22"},{"body":{"nativeSrc":"335:506:22","nodeType":"YulBlock","src":"335:506:22","statements":[{"body":{"nativeSrc":"382:16:22","nodeType":"YulBlock","src":"382:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"391:1:22","nodeType":"YulLiteral","src":"391:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"394:1:22","nodeType":"YulLiteral","src":"394:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"384:6:22","nodeType":"YulIdentifier","src":"384:6:22"},"nativeSrc":"384:12:22","nodeType":"YulFunctionCall","src":"384:12:22"},"nativeSrc":"384:12:22","nodeType":"YulExpressionStatement","src":"384:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"356:7:22","nodeType":"YulIdentifier","src":"356:7:22"},{"name":"headStart","nativeSrc":"365:9:22","nodeType":"YulIdentifier","src":"365:9:22"}],"functionName":{"name":"sub","nativeSrc":"352:3:22","nodeType":"YulIdentifier","src":"352:3:22"},"nativeSrc":"352:23:22","nodeType":"YulFunctionCall","src":"352:23:22"},{"kind":"number","nativeSrc":"377:3:22","nodeType":"YulLiteral","src":"377:3:22","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"348:3:22","nodeType":"YulIdentifier","src":"348:3:22"},"nativeSrc":"348:33:22","nodeType":"YulFunctionCall","src":"348:33:22"},"nativeSrc":"345:53:22","nodeType":"YulIf","src":"345:53:22"},{"nativeSrc":"407:29:22","nodeType":"YulVariableDeclaration","src":"407:29:22","value":{"arguments":[{"name":"headStart","nativeSrc":"426:9:22","nodeType":"YulIdentifier","src":"426:9:22"}],"functionName":{"name":"mload","nativeSrc":"420:5:22","nodeType":"YulIdentifier","src":"420:5:22"},"nativeSrc":"420:16:22","nodeType":"YulFunctionCall","src":"420:16:22"},"variables":[{"name":"value","nativeSrc":"411:5:22","nodeType":"YulTypedName","src":"411:5:22","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"483:5:22","nodeType":"YulIdentifier","src":"483:5:22"}],"functionName":{"name":"validator_revert_contract_OysterToken","nativeSrc":"445:37:22","nodeType":"YulIdentifier","src":"445:37:22"},"nativeSrc":"445:44:22","nodeType":"YulFunctionCall","src":"445:44:22"},"nativeSrc":"445:44:22","nodeType":"YulExpressionStatement","src":"445:44:22"},{"nativeSrc":"498:15:22","nodeType":"YulAssignment","src":"498:15:22","value":{"name":"value","nativeSrc":"508:5:22","nodeType":"YulIdentifier","src":"508:5:22"},"variableNames":[{"name":"value0","nativeSrc":"498:6:22","nodeType":"YulIdentifier","src":"498:6:22"}]},{"nativeSrc":"522:40:22","nodeType":"YulVariableDeclaration","src":"522:40:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"547:9:22","nodeType":"YulIdentifier","src":"547:9:22"},{"kind":"number","nativeSrc":"558:2:22","nodeType":"YulLiteral","src":"558:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"543:3:22","nodeType":"YulIdentifier","src":"543:3:22"},"nativeSrc":"543:18:22","nodeType":"YulFunctionCall","src":"543:18:22"}],"functionName":{"name":"mload","nativeSrc":"537:5:22","nodeType":"YulIdentifier","src":"537:5:22"},"nativeSrc":"537:25:22","nodeType":"YulFunctionCall","src":"537:25:22"},"variables":[{"name":"value_1","nativeSrc":"526:7:22","nodeType":"YulTypedName","src":"526:7:22","type":""}]},{"expression":{"arguments":[{"name":"value_1","nativeSrc":"609:7:22","nodeType":"YulIdentifier","src":"609:7:22"}],"functionName":{"name":"validator_revert_contract_OysterToken","nativeSrc":"571:37:22","nodeType":"YulIdentifier","src":"571:37:22"},"nativeSrc":"571:46:22","nodeType":"YulFunctionCall","src":"571:46:22"},"nativeSrc":"571:46:22","nodeType":"YulExpressionStatement","src":"571:46:22"},{"nativeSrc":"626:17:22","nodeType":"YulAssignment","src":"626:17:22","value":{"name":"value_1","nativeSrc":"636:7:22","nodeType":"YulIdentifier","src":"636:7:22"},"variableNames":[{"name":"value1","nativeSrc":"626:6:22","nodeType":"YulIdentifier","src":"626:6:22"}]},{"nativeSrc":"652:16:22","nodeType":"YulVariableDeclaration","src":"652:16:22","value":{"kind":"number","nativeSrc":"667:1:22","nodeType":"YulLiteral","src":"667:1:22","type":"","value":"0"},"variables":[{"name":"value_2","nativeSrc":"656:7:22","nodeType":"YulTypedName","src":"656:7:22","type":""}]},{"nativeSrc":"677:36:22","nodeType":"YulAssignment","src":"677:36:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"698:9:22","nodeType":"YulIdentifier","src":"698:9:22"},{"kind":"number","nativeSrc":"709:2:22","nodeType":"YulLiteral","src":"709:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"694:3:22","nodeType":"YulIdentifier","src":"694:3:22"},"nativeSrc":"694:18:22","nodeType":"YulFunctionCall","src":"694:18:22"}],"functionName":{"name":"mload","nativeSrc":"688:5:22","nodeType":"YulIdentifier","src":"688:5:22"},"nativeSrc":"688:25:22","nodeType":"YulFunctionCall","src":"688:25:22"},"variableNames":[{"name":"value_2","nativeSrc":"677:7:22","nodeType":"YulIdentifier","src":"677:7:22"}]},{"nativeSrc":"722:17:22","nodeType":"YulAssignment","src":"722:17:22","value":{"name":"value_2","nativeSrc":"732:7:22","nodeType":"YulIdentifier","src":"732:7:22"},"variableNames":[{"name":"value2","nativeSrc":"722:6:22","nodeType":"YulIdentifier","src":"722:6:22"}]},{"nativeSrc":"748:16:22","nodeType":"YulVariableDeclaration","src":"748:16:22","value":{"kind":"number","nativeSrc":"763:1:22","nodeType":"YulLiteral","src":"763:1:22","type":"","value":"0"},"variables":[{"name":"value_3","nativeSrc":"752:7:22","nodeType":"YulTypedName","src":"752:7:22","type":""}]},{"nativeSrc":"773:36:22","nodeType":"YulAssignment","src":"773:36:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"794:9:22","nodeType":"YulIdentifier","src":"794:9:22"},{"kind":"number","nativeSrc":"805:2:22","nodeType":"YulLiteral","src":"805:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"790:3:22","nodeType":"YulIdentifier","src":"790:3:22"},"nativeSrc":"790:18:22","nodeType":"YulFunctionCall","src":"790:18:22"}],"functionName":{"name":"mload","nativeSrc":"784:5:22","nodeType":"YulIdentifier","src":"784:5:22"},"nativeSrc":"784:25:22","nodeType":"YulFunctionCall","src":"784:25:22"},"variableNames":[{"name":"value_3","nativeSrc":"773:7:22","nodeType":"YulIdentifier","src":"773:7:22"}]},{"nativeSrc":"818:17:22","nodeType":"YulAssignment","src":"818:17:22","value":{"name":"value_3","nativeSrc":"828:7:22","nodeType":"YulIdentifier","src":"828:7:22"},"variableNames":[{"name":"value3","nativeSrc":"818:6:22","nodeType":"YulIdentifier","src":"818:6:22"}]}]},"name":"abi_decode_tuple_t_contract$_OysterToken_$7920t_contract$_OysterVault_$8069t_uint256t_uint256_fromMemory","nativeSrc":"163:678:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"277:9:22","nodeType":"YulTypedName","src":"277:9:22","type":""},{"name":"dataEnd","nativeSrc":"288:7:22","nodeType":"YulTypedName","src":"288:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"300:6:22","nodeType":"YulTypedName","src":"300:6:22","type":""},{"name":"value1","nativeSrc":"308:6:22","nodeType":"YulTypedName","src":"308:6:22","type":""},{"name":"value2","nativeSrc":"316:6:22","nodeType":"YulTypedName","src":"316:6:22","type":""},{"name":"value3","nativeSrc":"324:6:22","nodeType":"YulTypedName","src":"324:6:22","type":""}],"src":"163:678:22"}]},"contents":"{\n    { }\n    function validator_revert_contract_OysterToken(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_contract$_OysterToken_$7920t_contract$_OysterVault_$8069t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_contract_OysterToken(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_contract_OysterToken(value_1)\n        value1 := value_1\n        let value_2 := 0\n        value_2 := mload(add(headStart, 64))\n        value2 := value_2\n        let value_3 := 0\n        value_3 := mload(add(headStart, 96))\n        value3 := value_3\n    }\n}","id":22,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x159E CODESIZE SUB DUP1 PUSH2 0x159E DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH1 0x2C SWAP2 PUSH1 0x99 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x64 OR SWAP1 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP5 SWAP1 SWAP6 AND SWAP4 DUP2 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP4 SSTORE PUSH1 0x2 SSTORE PUSH1 0x3 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x4 DUP1 SLOAD SWAP1 SWAP2 AND CALLER OR SWAP1 SSTORE PUSH1 0xDC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH1 0x96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH1 0xAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 MLOAD PUSH1 0xB7 DUP2 PUSH1 0x82 JUMP JUMPDEST PUSH1 0x20 DUP7 ADD MLOAD SWAP1 SWAP5 POP PUSH1 0xC6 DUP2 PUSH1 0x82 JUMP JUMPDEST PUSH1 0x40 DUP7 ADD MLOAD PUSH1 0x60 SWAP1 SWAP7 ADD MLOAD SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x14B3 DUP1 PUSH2 0xEB PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x102 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8E6B3AC4 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xBEE4F733 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xBEE4F733 EQ PUSH2 0x268 JUMPI DUP1 PUSH4 0xE4494A0F EQ PUSH2 0x2AA JUMPI DUP1 PUSH4 0xEBC1945B EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0xEFF13431 EQ PUSH2 0x2DA JUMPI DUP1 PUSH4 0xF7173526 EQ PUSH2 0x2F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8E6B3AC4 EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0x9650F289 EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0x98208484 EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0xB145FCD4 EQ PUSH2 0x260 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5E1B6191 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x5E1B6191 EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0x6BA5D079 EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0x76866222 EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x20D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3FF1E05B EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0x425432B1 EQ PUSH2 0x130 JUMPI DUP1 PUSH4 0x4B946CC9 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x5D0FAB84 EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x109 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SELFBALANCE JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11D PUSH2 0x14B CALLDATASIZE PUSH1 0x4 PUSH2 0x1185 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x169 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17D PUSH2 0x178 CALLDATASIZE PUSH1 0x4 PUSH2 0x11A7 JUMP JUMPDEST PUSH2 0x30A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x127 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x199 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AD PUSH2 0x1A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x11E4 JUMP JUMPDEST PUSH2 0x56C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x127 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17D PUSH2 0x1E0 CALLDATASIZE PUSH1 0x4 PUSH2 0x11E4 JUMP JUMPDEST PUSH2 0x596 JUMP JUMPDEST PUSH2 0x17D PUSH2 0x77E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17D PUSH2 0x208 CALLDATASIZE PUSH1 0x4 PUSH2 0x11A7 JUMP JUMPDEST PUSH2 0x89C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x219 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH2 0x1AD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x17D PUSH2 0xB14 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x241 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11D PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x257 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17D PUSH2 0xBF9 JUMP JUMPDEST PUSH2 0x17D PUSH2 0xCF4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x274 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x298 PUSH2 0x283 CALLDATASIZE PUSH1 0x4 PUSH2 0x1185 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x127 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11D PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH2 0x17D SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11D PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6 SLOAD PUSH2 0x298 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x340 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x337 SWAP1 PUSH2 0x11FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x363 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x337 SWAP1 PUSH2 0x1252 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 SUB PUSH2 0x3E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F207269676874732068617665206265656E20646566696E656420666F7220 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x746869732061646472657373 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x337 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF DUP1 DUP5 AND SWAP2 AND LT ISZERO PUSH2 0x476 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4974206973206E6F7420706F737369626C6520746F2072656D6F7665206D6F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6520726967687473207468616E20746869732061646472657373206861730000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x337 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x4A1 SWAP1 DUP5 SWAP1 PUSH1 0xFF AND PUSH2 0x12D3 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x4D7 SWAP2 SWAP1 PUSH2 0x12EC JUMP JUMPDEST DUP3 SLOAD PUSH2 0x100 SWAP3 SWAP1 SWAP3 EXP PUSH1 0xFF DUP2 DUP2 MUL NOT SWAP1 SWAP4 AND SWAP2 DUP4 AND MUL OR SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 AND SWAP1 SUB SWAP1 POP PUSH2 0x51E JUMPI PUSH2 0x51E DUP4 PUSH2 0xE83 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF DUP4 AND DUP2 MSTORE ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xE5C90D1F4D58FD7BC5C546521E874B223125D83F37BF4B35ADE1532E08A0FFF5 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x57C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND PUSH2 0x5BB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x337 SWAP1 PUSH2 0x1305 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 SUB PUSH2 0x5EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x337 SWAP1 PUSH2 0x137F JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x662 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E756D626572206F6620746F6B656E7320666F72207265717565737465642074 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x72616E73666572206D7573742062652067726561746572207468616E20300000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x337 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x6C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E756D626572206F6620746F6B656E7320756E617661696C61626C6500000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x337 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA3871EB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA3871EB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x712 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x736 SWAP2 SWAP1 PUSH2 0x13F2 JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x756 SWAP1 DUP5 SWAP1 PUSH2 0x1414 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x9 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x76F SWAP2 SWAP1 PUSH2 0x1414 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND PUSH2 0x7A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x337 SWAP1 PUSH2 0x1305 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD PUSH4 0x3B9ACA00 PUSH2 0x7B7 SWAP2 SWAP1 PUSH2 0x1427 JUMP JUMPDEST SWAP1 POP DUP1 CALLVALUE LT ISZERO PUSH2 0x81F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E73756666696369656E742076616C756520746F206C697374656E20746865 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x206D7573696320726967687473 PUSH1 0x98 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x337 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x82B DUP3 CALLVALUE PUSH2 0x1414 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE SWAP1 SWAP2 POP CALLER SWAP1 PUSH32 0x53F8FD6B05226233DE7AC193299B5CB02358FE734840D24F2631A5A07643CED5 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x40 MLOAD CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x892 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x337 SWAP1 PUSH2 0x11FD JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x8EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x337 SWAP1 PUSH2 0x1252 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0xFF AND GT PUSH2 0x953 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50657263656E74616765206F6620726967687473206D75737420626520677265 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x61746572207468616E203 PUSH1 0xAC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x337 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xFF SWAP1 DUP2 AND SWAP1 DUP4 AND GT ISZERO PUSH2 0x9E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x46 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x70657263656E74616765206F6620656E7469746C656D656E74732072656D6169 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E696E67206973206C657373207468616E207468652072657175657374656420 PUSH1 0x64 DUP3 ADD MSTORE PUSH6 0x185B5BDD5B9D PUSH1 0xD2 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x337 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 SUB PUSH2 0xA4F JUMPI PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xA7A SWAP1 DUP5 SWAP1 PUSH1 0xFF AND PUSH2 0x12EC JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xAB0 SWAP2 SWAP1 PUSH2 0x12D3 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x3DF476B3B37A3360A1B466487C0A06214A4E1D899E5C66A7AD379E503C2EA9E DUP5 PUSH1 0x40 MLOAD PUSH2 0x55A SWAP2 SWAP1 PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND PUSH2 0xB39 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x337 SWAP1 PUSH2 0x1305 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD PUSH4 0x3B9ACA00 PUSH2 0xB4D SWAP2 SWAP1 PUSH2 0x1427 JUMP JUMPDEST SWAP1 POP DUP1 CALLVALUE LT ISZERO PUSH2 0xBB7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E73756666696369656E742076616C756520746F2070757263686173652074 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x6865206D7573696320726967687473 PUSH1 0x88 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x337 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBC3 DUP3 CALLVALUE PUSH2 0x1414 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE SWAP1 SWAP2 POP CALLER SWAP1 PUSH32 0x4429633AB0A9F77B1BC61E2ED0E484B81B41823661C29DD1BA47C1B06882459D SWAP1 PUSH1 0x20 ADD PUSH2 0x85D JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC26 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x337 SWAP1 PUSH2 0x11FD JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xCA9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x41 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652072656D61696E696E67206469766973696F6E73206F66207269676874 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x73206D757374206265203020746F207365616C207468697320636F6E74726163 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0xFA SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x337 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE ADDRESS SWAP1 PUSH32 0x2BD58C1C32E360804CF66BB5628995E5689D64524F0203FDD547F47E1E4E6D71 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND PUSH2 0xD19 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x337 SWAP1 PUSH2 0x1305 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 SUB PUSH2 0xD4A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x337 SWAP1 PUSH2 0x137F JUMP JUMPDEST PUSH7 0x12D452694F4000 SELFBALANCE LT ISZERO PUSH2 0xDD6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x46 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742045746865722073656E7420746F206275792074 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F6B656E732E204D7573742068617665206174206C6561737420302E30303533 PUSH1 0x64 DUP3 ADD MSTORE PUSH6 0x1022BA3432B9 PUSH1 0xD1 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x337 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x917B1BF5 SELFBALANCE PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE29 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE4E SWAP2 SWAP1 PUSH2 0x13F2 JUMP JUMPDEST POP PUSH1 0x64 PUSH1 0x9 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE62 SWAP2 SWAP1 PUSH2 0x143E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xE72 SWAP1 POP PUSH1 0x64 PUSH2 0xF43 JUMP JUMPDEST POP PUSH2 0xE7B PUSH2 0xFC6 JUMP JUMPDEST POP PUSH1 0x1 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE8E DUP3 PUSH2 0x1111 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0xEA2 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1414 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xEB2 JUMPI PUSH2 0xEB2 PUSH2 0x1451 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0xEDE JUMPI PUSH2 0xEDE PUSH2 0x1451 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x7 DUP1 SLOAD DUP1 PUSH2 0xF1D JUMPI PUSH2 0xF1D PUSH2 0x1467 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF99 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFBD SWAP2 SWAP1 PUSH2 0x13F2 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0xE7B JUMPI PUSH1 0x5 PUSH1 0x0 PUSH1 0x7 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xFEB JUMPI PUSH2 0xFEB PUSH2 0x1451 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD DUP2 KECCAK256 SLOAD PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF SWAP1 SWAP3 AND SWAP3 PUSH1 0xA SWAP3 SWAP1 SWAP2 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0x1030 JUMPI PUSH2 0x1030 PUSH2 0x1451 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x1064 SWAP1 DUP5 SWAP1 PUSH2 0x143E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x7 DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0x107D JUMPI PUSH2 0x107D PUSH2 0x1451 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 PUSH32 0xF18C582FB18BAB8A0EFE761E8FDD548EAEF7B331B99E27696A6381ED38C451E SWAP3 PUSH1 0x5 SWAP3 SWAP1 DUP7 SWAP1 DUP2 LT PUSH2 0x10CE JUMPI PUSH2 0x10CE PUSH2 0x1451 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 ADD PUSH2 0xFCA JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x1164 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x113C JUMPI PUSH2 0x113C PUSH2 0x1451 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x115C JUMPI SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1115 JUMP JUMPDEST POP POP PUSH1 0x7 SLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x779 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1197 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11A0 DUP3 PUSH2 0x116E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11C3 DUP4 PUSH2 0x116E JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x11D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x35 SWAP1 DUP3 ADD MSTORE PUSH32 0x546869732066756E6374696F6E2063616E206F6E6C792062652063616C6C6564 PUSH1 0x40 DUP3 ADD MSTORE PUSH21 0x20627920746865206F776E65722061646472657373 PUSH1 0x58 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x45 SWAP1 DUP3 ADD MSTORE PUSH32 0x54686520636F6E747261637420697320616C7265616479207365616C65642C20 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6E6F206D6F64696669636174696F6E206F66207269676874732063616E206265 PUSH1 0x60 DUP3 ADD MSTORE PUSH5 0x206D616465 PUSH1 0xD8 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xFF DUP3 DUP2 AND DUP3 DUP3 AND SUB SWAP1 DUP2 GT ISZERO PUSH2 0x566 JUMPI PUSH2 0x566 PUSH2 0x12BD JUMP JUMPDEST PUSH1 0xFF DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP2 GT ISZERO PUSH2 0x566 JUMPI PUSH2 0x566 PUSH2 0x12BD JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x54 SWAP1 DUP3 ADD MSTORE PUSH32 0x54686520636F6E7472616374206973206E6F74207365616C65642E2054686973 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x207472616E73616374696F6E2063616E206F6E6C7920626520646F6E65207769 PUSH1 0x60 DUP3 ADD MSTORE PUSH20 0x1D1A0818481CD9585B19590818DBDB9D1C9858DD PUSH1 0x62 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x4D SWAP1 DUP3 ADD MSTORE PUSH32 0x546869732066756E6374696F6E2063616E6E6F742062652063616C6C65642062 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x7920616E796F6E652077686F20646F6573206E6F742068617665207269676874 PUSH1 0x60 DUP3 ADD MSTORE PUSH13 0x7320746F2074686520736F6E67 PUSH1 0x98 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1404 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x11A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x566 JUMPI PUSH2 0x566 PUSH2 0x12BD JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x566 JUMPI PUSH2 0x566 PUSH2 0x12BD JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x566 JUMPI PUSH2 0x566 PUSH2 0x12BD JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CHAINID CREATE SWAP5 SWAP9 TLOAD 0x27 BLOCKHASH 0xD6 BLOBBASEFEE PUSH17 0x9658E3DFC00DB94A64DD91AA078E30321 0xBD 0xEC 0xD0 DUP2 0x1F PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"86:7466:20:-:0;;;1454:436;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1611:23;:29;;-1:-1:-1;;1611:29:20;1637:3;1611:29;;;:23;1650:42;;-1:-1:-1;;;;;1650:42:20;;;-1:-1:-1;;;;;;1650:42:20;;;;;;;1611:29;1702:42;;;;;;;;;;;;;;;;1754:24;:46;1810:23;:44;;;;-1:-1:-1;1864:18:20;;;;;1872:10;1864:18;;;86:7466;;14:144:22;-1:-1:-1;;;;;102:31:22;;92:42;;82:70;;148:1;145;138:12;82:70;14:144;:::o;163:678::-;300:6;308;316;324;377:3;365:9;356:7;352:23;348:33;345:53;;;394:1;391;384:12;345:53;426:9;420:16;445:44;483:5;445:44;:::i;:::-;558:2;543:18;;537:25;508:5;;-1:-1:-1;571:46:22;537:25;571:46;:::i;:::-;709:2;694:18;;688:25;805:2;790:18;;;784:25;163:678;;636:7;;-1:-1:-1;163:678:22;-1:-1:-1;;;163:678:22:o;:::-;86:7466:20;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_7109":{"entryPoint":null,"id":7109,"parameterSlots":0,"returnSlots":0},"@approveVaultTransfer_7408":{"entryPoint":3907,"id":7408,"parameterSlots":1,"returnSlots":1},"@assignRights_7175":{"entryPoint":2204,"id":7175,"parameterSlots":2,"returnSlots":1},"@balanceTokens_7001":{"entryPoint":null,"id":7001,"parameterSlots":0,"returnSlots":0},"@buy100OysterToken_7388":{"entryPoint":3316,"id":7388,"parameterSlots":0,"returnSlots":1},"@buyRightsMusic_7556":{"entryPoint":2836,"id":7556,"parameterSlots":0,"returnSlots":1},"@divisionOfRights_6992":{"entryPoint":null,"id":6992,"parameterSlots":0,"returnSlots":0},"@findIndex_7304":{"entryPoint":4369,"id":7304,"parameterSlots":1,"returnSlots":1},"@listenMusic_7602":{"entryPoint":1918,"id":7602,"parameterSlots":0,"returnSlots":1},"@musicContactIsSealed_6999":{"entryPoint":null,"id":6999,"parameterSlots":0,"returnSlots":0},"@owner_6988":{"entryPoint":null,"id":6988,"parameterSlots":0,"returnSlots":0},"@remainingRightsDivision_6994":{"entryPoint":null,"id":6994,"parameterSlots":0,"returnSlots":0},"@removeRightHolder_7271":{"entryPoint":3715,"id":7271,"parameterSlots":1,"returnSlots":0},"@rightHolders_6997":{"entryPoint":1388,"id":6997,"parameterSlots":0,"returnSlots":0},"@rightPurchaseValueInGwei_6984":{"entryPoint":null,"id":6984,"parameterSlots":0,"returnSlots":0},"@sealRights_7333":{"entryPoint":3065,"id":7333,"parameterSlots":0,"returnSlots":1},"@sellOysterToken_7510":{"entryPoint":1430,"id":7510,"parameterSlots":1,"returnSlots":1},"@tokenSplit_7452":{"entryPoint":4038,"id":7452,"parameterSlots":0,"returnSlots":1},"@tokensPerAddress_7005":{"entryPoint":null,"id":7005,"parameterSlots":0,"returnSlots":0},"@valueForListeningInGwei_6986":{"entryPoint":null,"id":6986,"parameterSlots":0,"returnSlots":0},"@viewBalance_7614":{"entryPoint":null,"id":7614,"parameterSlots":0,"returnSlots":1},"@withdrawRights_7243":{"entryPoint":778,"id":7243,"parameterSlots":2,"returnSlots":1},"abi_decode_address":{"entryPoint":4462,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":4485,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint8":{"entryPoint":4519,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":5106,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":4580,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_00e6c0e61855c07537c591862cc84232690f7fbd58ada30e5801a843b46d23e1__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4690,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_035b512df0303c3c81b766e4199bc9ebb5c3b7e675aeebed76db1e1355e83003__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4869,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_046732d5414f05ecf7eecf16cd2fa81fef56df3233d5bab3cae061b0d442ba1d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4605,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0fc663d05a6bb57b3da0d21c1bcd326365e80a1353272fa5150359407637095a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_10ee263c07356aa89342d85eac7ad45f2615c99e8450dda756bc5e9ec583fd1c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_29dd189b09f51e6a215c7d90b9bc281fedbff2bce0a937c944c2d280eabe84d9__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_449ba59efb4134ea4502563a81b53d2b67d0b309e434fc69970577cd2a7e9a7d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_59548250c0c52fa555898b044e92abeaab02b814674a16ee51abb2007c9a83ed__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_70663abecbb73251778bc3d21efd92dc5f7e553ae5bbf6ed615d3f6a93f02dec__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_87d9762a6d93fc2b9c941e1ae13bb2fe779061bdcff987e2338ea0048a4e9011__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_888a677fffff6c994ae843925886fd3ad03f257f1a2f6c3f94a5f52a42910183__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4991,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b66c433229ecbc090d4615d47ec9e73470355743da96bc3174634127fc19c754__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cf76a2966d01617b66d1809ad15b5c6b51fe81173232aead78b823940f0b89b8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ff015140a35820efe946e6eca10609f6759241d73874b5516eef74c707161aec__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":5182,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint8":{"entryPoint":4844,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":5159,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":5140,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint8":{"entryPoint":4819,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":4797,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":5223,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":5201,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:9762:22","nodeType":"YulBlock","src":"0:9762:22","statements":[{"nativeSrc":"6:3:22","nodeType":"YulBlock","src":"6:3:22","statements":[]},{"body":{"nativeSrc":"115:76:22","nodeType":"YulBlock","src":"115:76:22","statements":[{"nativeSrc":"125:26:22","nodeType":"YulAssignment","src":"125:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"137:9:22","nodeType":"YulIdentifier","src":"137:9:22"},{"kind":"number","nativeSrc":"148:2:22","nodeType":"YulLiteral","src":"148:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"133:3:22","nodeType":"YulIdentifier","src":"133:3:22"},"nativeSrc":"133:18:22","nodeType":"YulFunctionCall","src":"133:18:22"},"variableNames":[{"name":"tail","nativeSrc":"125:4:22","nodeType":"YulIdentifier","src":"125:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"167:9:22","nodeType":"YulIdentifier","src":"167:9:22"},{"name":"value0","nativeSrc":"178:6:22","nodeType":"YulIdentifier","src":"178:6:22"}],"functionName":{"name":"mstore","nativeSrc":"160:6:22","nodeType":"YulIdentifier","src":"160:6:22"},"nativeSrc":"160:25:22","nodeType":"YulFunctionCall","src":"160:25:22"},"nativeSrc":"160:25:22","nodeType":"YulExpressionStatement","src":"160:25:22"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"14:177:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"84:9:22","nodeType":"YulTypedName","src":"84:9:22","type":""},{"name":"value0","nativeSrc":"95:6:22","nodeType":"YulTypedName","src":"95:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"106:4:22","nodeType":"YulTypedName","src":"106:4:22","type":""}],"src":"14:177:22"},{"body":{"nativeSrc":"245:124:22","nodeType":"YulBlock","src":"245:124:22","statements":[{"nativeSrc":"255:29:22","nodeType":"YulAssignment","src":"255:29:22","value":{"arguments":[{"name":"offset","nativeSrc":"277:6:22","nodeType":"YulIdentifier","src":"277:6:22"}],"functionName":{"name":"calldataload","nativeSrc":"264:12:22","nodeType":"YulIdentifier","src":"264:12:22"},"nativeSrc":"264:20:22","nodeType":"YulFunctionCall","src":"264:20:22"},"variableNames":[{"name":"value","nativeSrc":"255:5:22","nodeType":"YulIdentifier","src":"255:5:22"}]},{"body":{"nativeSrc":"347:16:22","nodeType":"YulBlock","src":"347:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"356:1:22","nodeType":"YulLiteral","src":"356:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"359:1:22","nodeType":"YulLiteral","src":"359:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"349:6:22","nodeType":"YulIdentifier","src":"349:6:22"},"nativeSrc":"349:12:22","nodeType":"YulFunctionCall","src":"349:12:22"},"nativeSrc":"349:12:22","nodeType":"YulExpressionStatement","src":"349:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"306:5:22","nodeType":"YulIdentifier","src":"306:5:22"},{"arguments":[{"name":"value","nativeSrc":"317:5:22","nodeType":"YulIdentifier","src":"317:5:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"332:3:22","nodeType":"YulLiteral","src":"332:3:22","type":"","value":"160"},{"kind":"number","nativeSrc":"337:1:22","nodeType":"YulLiteral","src":"337:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"328:3:22","nodeType":"YulIdentifier","src":"328:3:22"},"nativeSrc":"328:11:22","nodeType":"YulFunctionCall","src":"328:11:22"},{"kind":"number","nativeSrc":"341:1:22","nodeType":"YulLiteral","src":"341:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"324:3:22","nodeType":"YulIdentifier","src":"324:3:22"},"nativeSrc":"324:19:22","nodeType":"YulFunctionCall","src":"324:19:22"}],"functionName":{"name":"and","nativeSrc":"313:3:22","nodeType":"YulIdentifier","src":"313:3:22"},"nativeSrc":"313:31:22","nodeType":"YulFunctionCall","src":"313:31:22"}],"functionName":{"name":"eq","nativeSrc":"303:2:22","nodeType":"YulIdentifier","src":"303:2:22"},"nativeSrc":"303:42:22","nodeType":"YulFunctionCall","src":"303:42:22"}],"functionName":{"name":"iszero","nativeSrc":"296:6:22","nodeType":"YulIdentifier","src":"296:6:22"},"nativeSrc":"296:50:22","nodeType":"YulFunctionCall","src":"296:50:22"},"nativeSrc":"293:70:22","nodeType":"YulIf","src":"293:70:22"}]},"name":"abi_decode_address","nativeSrc":"196:173:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"224:6:22","nodeType":"YulTypedName","src":"224:6:22","type":""}],"returnVariables":[{"name":"value","nativeSrc":"235:5:22","nodeType":"YulTypedName","src":"235:5:22","type":""}],"src":"196:173:22"},{"body":{"nativeSrc":"444:116:22","nodeType":"YulBlock","src":"444:116:22","statements":[{"body":{"nativeSrc":"490:16:22","nodeType":"YulBlock","src":"490:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"499:1:22","nodeType":"YulLiteral","src":"499:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"502:1:22","nodeType":"YulLiteral","src":"502:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"492:6:22","nodeType":"YulIdentifier","src":"492:6:22"},"nativeSrc":"492:12:22","nodeType":"YulFunctionCall","src":"492:12:22"},"nativeSrc":"492:12:22","nodeType":"YulExpressionStatement","src":"492:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"465:7:22","nodeType":"YulIdentifier","src":"465:7:22"},{"name":"headStart","nativeSrc":"474:9:22","nodeType":"YulIdentifier","src":"474:9:22"}],"functionName":{"name":"sub","nativeSrc":"461:3:22","nodeType":"YulIdentifier","src":"461:3:22"},"nativeSrc":"461:23:22","nodeType":"YulFunctionCall","src":"461:23:22"},{"kind":"number","nativeSrc":"486:2:22","nodeType":"YulLiteral","src":"486:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"457:3:22","nodeType":"YulIdentifier","src":"457:3:22"},"nativeSrc":"457:32:22","nodeType":"YulFunctionCall","src":"457:32:22"},"nativeSrc":"454:52:22","nodeType":"YulIf","src":"454:52:22"},{"nativeSrc":"515:39:22","nodeType":"YulAssignment","src":"515:39:22","value":{"arguments":[{"name":"headStart","nativeSrc":"544:9:22","nodeType":"YulIdentifier","src":"544:9:22"}],"functionName":{"name":"abi_decode_address","nativeSrc":"525:18:22","nodeType":"YulIdentifier","src":"525:18:22"},"nativeSrc":"525:29:22","nodeType":"YulFunctionCall","src":"525:29:22"},"variableNames":[{"name":"value0","nativeSrc":"515:6:22","nodeType":"YulIdentifier","src":"515:6:22"}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"374:186:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"410:9:22","nodeType":"YulTypedName","src":"410:9:22","type":""},{"name":"dataEnd","nativeSrc":"421:7:22","nodeType":"YulTypedName","src":"421:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"433:6:22","nodeType":"YulTypedName","src":"433:6:22","type":""}],"src":"374:186:22"},{"body":{"nativeSrc":"650:258:22","nodeType":"YulBlock","src":"650:258:22","statements":[{"body":{"nativeSrc":"696:16:22","nodeType":"YulBlock","src":"696:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"705:1:22","nodeType":"YulLiteral","src":"705:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"708:1:22","nodeType":"YulLiteral","src":"708:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"698:6:22","nodeType":"YulIdentifier","src":"698:6:22"},"nativeSrc":"698:12:22","nodeType":"YulFunctionCall","src":"698:12:22"},"nativeSrc":"698:12:22","nodeType":"YulExpressionStatement","src":"698:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"671:7:22","nodeType":"YulIdentifier","src":"671:7:22"},{"name":"headStart","nativeSrc":"680:9:22","nodeType":"YulIdentifier","src":"680:9:22"}],"functionName":{"name":"sub","nativeSrc":"667:3:22","nodeType":"YulIdentifier","src":"667:3:22"},"nativeSrc":"667:23:22","nodeType":"YulFunctionCall","src":"667:23:22"},{"kind":"number","nativeSrc":"692:2:22","nodeType":"YulLiteral","src":"692:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"663:3:22","nodeType":"YulIdentifier","src":"663:3:22"},"nativeSrc":"663:32:22","nodeType":"YulFunctionCall","src":"663:32:22"},"nativeSrc":"660:52:22","nodeType":"YulIf","src":"660:52:22"},{"nativeSrc":"721:39:22","nodeType":"YulAssignment","src":"721:39:22","value":{"arguments":[{"name":"headStart","nativeSrc":"750:9:22","nodeType":"YulIdentifier","src":"750:9:22"}],"functionName":{"name":"abi_decode_address","nativeSrc":"731:18:22","nodeType":"YulIdentifier","src":"731:18:22"},"nativeSrc":"731:29:22","nodeType":"YulFunctionCall","src":"731:29:22"},"variableNames":[{"name":"value0","nativeSrc":"721:6:22","nodeType":"YulIdentifier","src":"721:6:22"}]},{"nativeSrc":"769:45:22","nodeType":"YulVariableDeclaration","src":"769:45:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"799:9:22","nodeType":"YulIdentifier","src":"799:9:22"},{"kind":"number","nativeSrc":"810:2:22","nodeType":"YulLiteral","src":"810:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"795:3:22","nodeType":"YulIdentifier","src":"795:3:22"},"nativeSrc":"795:18:22","nodeType":"YulFunctionCall","src":"795:18:22"}],"functionName":{"name":"calldataload","nativeSrc":"782:12:22","nodeType":"YulIdentifier","src":"782:12:22"},"nativeSrc":"782:32:22","nodeType":"YulFunctionCall","src":"782:32:22"},"variables":[{"name":"value","nativeSrc":"773:5:22","nodeType":"YulTypedName","src":"773:5:22","type":""}]},{"body":{"nativeSrc":"862:16:22","nodeType":"YulBlock","src":"862:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"871:1:22","nodeType":"YulLiteral","src":"871:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"874:1:22","nodeType":"YulLiteral","src":"874:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"864:6:22","nodeType":"YulIdentifier","src":"864:6:22"},"nativeSrc":"864:12:22","nodeType":"YulFunctionCall","src":"864:12:22"},"nativeSrc":"864:12:22","nodeType":"YulExpressionStatement","src":"864:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"836:5:22","nodeType":"YulIdentifier","src":"836:5:22"},{"arguments":[{"name":"value","nativeSrc":"847:5:22","nodeType":"YulIdentifier","src":"847:5:22"},{"kind":"number","nativeSrc":"854:4:22","nodeType":"YulLiteral","src":"854:4:22","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"843:3:22","nodeType":"YulIdentifier","src":"843:3:22"},"nativeSrc":"843:16:22","nodeType":"YulFunctionCall","src":"843:16:22"}],"functionName":{"name":"eq","nativeSrc":"833:2:22","nodeType":"YulIdentifier","src":"833:2:22"},"nativeSrc":"833:27:22","nodeType":"YulFunctionCall","src":"833:27:22"}],"functionName":{"name":"iszero","nativeSrc":"826:6:22","nodeType":"YulIdentifier","src":"826:6:22"},"nativeSrc":"826:35:22","nodeType":"YulFunctionCall","src":"826:35:22"},"nativeSrc":"823:55:22","nodeType":"YulIf","src":"823:55:22"},{"nativeSrc":"887:15:22","nodeType":"YulAssignment","src":"887:15:22","value":{"name":"value","nativeSrc":"897:5:22","nodeType":"YulIdentifier","src":"897:5:22"},"variableNames":[{"name":"value1","nativeSrc":"887:6:22","nodeType":"YulIdentifier","src":"887:6:22"}]}]},"name":"abi_decode_tuple_t_addresst_uint8","nativeSrc":"565:343:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"608:9:22","nodeType":"YulTypedName","src":"608:9:22","type":""},{"name":"dataEnd","nativeSrc":"619:7:22","nodeType":"YulTypedName","src":"619:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"631:6:22","nodeType":"YulTypedName","src":"631:6:22","type":""},{"name":"value1","nativeSrc":"639:6:22","nodeType":"YulTypedName","src":"639:6:22","type":""}],"src":"565:343:22"},{"body":{"nativeSrc":"1008:92:22","nodeType":"YulBlock","src":"1008:92:22","statements":[{"nativeSrc":"1018:26:22","nodeType":"YulAssignment","src":"1018:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"1030:9:22","nodeType":"YulIdentifier","src":"1030:9:22"},{"kind":"number","nativeSrc":"1041:2:22","nodeType":"YulLiteral","src":"1041:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1026:3:22","nodeType":"YulIdentifier","src":"1026:3:22"},"nativeSrc":"1026:18:22","nodeType":"YulFunctionCall","src":"1026:18:22"},"variableNames":[{"name":"tail","nativeSrc":"1018:4:22","nodeType":"YulIdentifier","src":"1018:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1060:9:22","nodeType":"YulIdentifier","src":"1060:9:22"},{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"1085:6:22","nodeType":"YulIdentifier","src":"1085:6:22"}],"functionName":{"name":"iszero","nativeSrc":"1078:6:22","nodeType":"YulIdentifier","src":"1078:6:22"},"nativeSrc":"1078:14:22","nodeType":"YulFunctionCall","src":"1078:14:22"}],"functionName":{"name":"iszero","nativeSrc":"1071:6:22","nodeType":"YulIdentifier","src":"1071:6:22"},"nativeSrc":"1071:22:22","nodeType":"YulFunctionCall","src":"1071:22:22"}],"functionName":{"name":"mstore","nativeSrc":"1053:6:22","nodeType":"YulIdentifier","src":"1053:6:22"},"nativeSrc":"1053:41:22","nodeType":"YulFunctionCall","src":"1053:41:22"},"nativeSrc":"1053:41:22","nodeType":"YulExpressionStatement","src":"1053:41:22"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"913:187:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"977:9:22","nodeType":"YulTypedName","src":"977:9:22","type":""},{"name":"value0","nativeSrc":"988:6:22","nodeType":"YulTypedName","src":"988:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"999:4:22","nodeType":"YulTypedName","src":"999:4:22","type":""}],"src":"913:187:22"},{"body":{"nativeSrc":"1175:110:22","nodeType":"YulBlock","src":"1175:110:22","statements":[{"body":{"nativeSrc":"1221:16:22","nodeType":"YulBlock","src":"1221:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1230:1:22","nodeType":"YulLiteral","src":"1230:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"1233:1:22","nodeType":"YulLiteral","src":"1233:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1223:6:22","nodeType":"YulIdentifier","src":"1223:6:22"},"nativeSrc":"1223:12:22","nodeType":"YulFunctionCall","src":"1223:12:22"},"nativeSrc":"1223:12:22","nodeType":"YulExpressionStatement","src":"1223:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1196:7:22","nodeType":"YulIdentifier","src":"1196:7:22"},{"name":"headStart","nativeSrc":"1205:9:22","nodeType":"YulIdentifier","src":"1205:9:22"}],"functionName":{"name":"sub","nativeSrc":"1192:3:22","nodeType":"YulIdentifier","src":"1192:3:22"},"nativeSrc":"1192:23:22","nodeType":"YulFunctionCall","src":"1192:23:22"},{"kind":"number","nativeSrc":"1217:2:22","nodeType":"YulLiteral","src":"1217:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"1188:3:22","nodeType":"YulIdentifier","src":"1188:3:22"},"nativeSrc":"1188:32:22","nodeType":"YulFunctionCall","src":"1188:32:22"},"nativeSrc":"1185:52:22","nodeType":"YulIf","src":"1185:52:22"},{"nativeSrc":"1246:33:22","nodeType":"YulAssignment","src":"1246:33:22","value":{"arguments":[{"name":"headStart","nativeSrc":"1269:9:22","nodeType":"YulIdentifier","src":"1269:9:22"}],"functionName":{"name":"calldataload","nativeSrc":"1256:12:22","nodeType":"YulIdentifier","src":"1256:12:22"},"nativeSrc":"1256:23:22","nodeType":"YulFunctionCall","src":"1256:23:22"},"variableNames":[{"name":"value0","nativeSrc":"1246:6:22","nodeType":"YulIdentifier","src":"1246:6:22"}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"1105:180:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1141:9:22","nodeType":"YulTypedName","src":"1141:9:22","type":""},{"name":"dataEnd","nativeSrc":"1152:7:22","nodeType":"YulTypedName","src":"1152:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1164:6:22","nodeType":"YulTypedName","src":"1164:6:22","type":""}],"src":"1105:180:22"},{"body":{"nativeSrc":"1391:102:22","nodeType":"YulBlock","src":"1391:102:22","statements":[{"nativeSrc":"1401:26:22","nodeType":"YulAssignment","src":"1401:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"1413:9:22","nodeType":"YulIdentifier","src":"1413:9:22"},{"kind":"number","nativeSrc":"1424:2:22","nodeType":"YulLiteral","src":"1424:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1409:3:22","nodeType":"YulIdentifier","src":"1409:3:22"},"nativeSrc":"1409:18:22","nodeType":"YulFunctionCall","src":"1409:18:22"},"variableNames":[{"name":"tail","nativeSrc":"1401:4:22","nodeType":"YulIdentifier","src":"1401:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1443:9:22","nodeType":"YulIdentifier","src":"1443:9:22"},{"arguments":[{"name":"value0","nativeSrc":"1458:6:22","nodeType":"YulIdentifier","src":"1458:6:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1474:3:22","nodeType":"YulLiteral","src":"1474:3:22","type":"","value":"160"},{"kind":"number","nativeSrc":"1479:1:22","nodeType":"YulLiteral","src":"1479:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1470:3:22","nodeType":"YulIdentifier","src":"1470:3:22"},"nativeSrc":"1470:11:22","nodeType":"YulFunctionCall","src":"1470:11:22"},{"kind":"number","nativeSrc":"1483:1:22","nodeType":"YulLiteral","src":"1483:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1466:3:22","nodeType":"YulIdentifier","src":"1466:3:22"},"nativeSrc":"1466:19:22","nodeType":"YulFunctionCall","src":"1466:19:22"}],"functionName":{"name":"and","nativeSrc":"1454:3:22","nodeType":"YulIdentifier","src":"1454:3:22"},"nativeSrc":"1454:32:22","nodeType":"YulFunctionCall","src":"1454:32:22"}],"functionName":{"name":"mstore","nativeSrc":"1436:6:22","nodeType":"YulIdentifier","src":"1436:6:22"},"nativeSrc":"1436:51:22","nodeType":"YulFunctionCall","src":"1436:51:22"},"nativeSrc":"1436:51:22","nodeType":"YulExpressionStatement","src":"1436:51:22"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"1290:203:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1360:9:22","nodeType":"YulTypedName","src":"1360:9:22","type":""},{"name":"value0","nativeSrc":"1371:6:22","nodeType":"YulTypedName","src":"1371:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1382:4:22","nodeType":"YulTypedName","src":"1382:4:22","type":""}],"src":"1290:203:22"},{"body":{"nativeSrc":"1595:87:22","nodeType":"YulBlock","src":"1595:87:22","statements":[{"nativeSrc":"1605:26:22","nodeType":"YulAssignment","src":"1605:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"1617:9:22","nodeType":"YulIdentifier","src":"1617:9:22"},{"kind":"number","nativeSrc":"1628:2:22","nodeType":"YulLiteral","src":"1628:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1613:3:22","nodeType":"YulIdentifier","src":"1613:3:22"},"nativeSrc":"1613:18:22","nodeType":"YulFunctionCall","src":"1613:18:22"},"variableNames":[{"name":"tail","nativeSrc":"1605:4:22","nodeType":"YulIdentifier","src":"1605:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1647:9:22","nodeType":"YulIdentifier","src":"1647:9:22"},{"arguments":[{"name":"value0","nativeSrc":"1662:6:22","nodeType":"YulIdentifier","src":"1662:6:22"},{"kind":"number","nativeSrc":"1670:4:22","nodeType":"YulLiteral","src":"1670:4:22","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"1658:3:22","nodeType":"YulIdentifier","src":"1658:3:22"},"nativeSrc":"1658:17:22","nodeType":"YulFunctionCall","src":"1658:17:22"}],"functionName":{"name":"mstore","nativeSrc":"1640:6:22","nodeType":"YulIdentifier","src":"1640:6:22"},"nativeSrc":"1640:36:22","nodeType":"YulFunctionCall","src":"1640:36:22"},"nativeSrc":"1640:36:22","nodeType":"YulExpressionStatement","src":"1640:36:22"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nativeSrc":"1498:184:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1564:9:22","nodeType":"YulTypedName","src":"1564:9:22","type":""},{"name":"value0","nativeSrc":"1575:6:22","nodeType":"YulTypedName","src":"1575:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1586:4:22","nodeType":"YulTypedName","src":"1586:4:22","type":""}],"src":"1498:184:22"},{"body":{"nativeSrc":"1861:243:22","nodeType":"YulBlock","src":"1861:243:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1878:9:22","nodeType":"YulIdentifier","src":"1878:9:22"},{"kind":"number","nativeSrc":"1889:2:22","nodeType":"YulLiteral","src":"1889:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"1871:6:22","nodeType":"YulIdentifier","src":"1871:6:22"},"nativeSrc":"1871:21:22","nodeType":"YulFunctionCall","src":"1871:21:22"},"nativeSrc":"1871:21:22","nodeType":"YulExpressionStatement","src":"1871:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1912:9:22","nodeType":"YulIdentifier","src":"1912:9:22"},{"kind":"number","nativeSrc":"1923:2:22","nodeType":"YulLiteral","src":"1923:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1908:3:22","nodeType":"YulIdentifier","src":"1908:3:22"},"nativeSrc":"1908:18:22","nodeType":"YulFunctionCall","src":"1908:18:22"},{"kind":"number","nativeSrc":"1928:2:22","nodeType":"YulLiteral","src":"1928:2:22","type":"","value":"53"}],"functionName":{"name":"mstore","nativeSrc":"1901:6:22","nodeType":"YulIdentifier","src":"1901:6:22"},"nativeSrc":"1901:30:22","nodeType":"YulFunctionCall","src":"1901:30:22"},"nativeSrc":"1901:30:22","nodeType":"YulExpressionStatement","src":"1901:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1951:9:22","nodeType":"YulIdentifier","src":"1951:9:22"},{"kind":"number","nativeSrc":"1962:2:22","nodeType":"YulLiteral","src":"1962:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"1947:3:22","nodeType":"YulIdentifier","src":"1947:3:22"},"nativeSrc":"1947:18:22","nodeType":"YulFunctionCall","src":"1947:18:22"},{"hexValue":"546869732066756e6374696f6e2063616e206f6e6c792062652063616c6c6564","kind":"string","nativeSrc":"1967:34:22","nodeType":"YulLiteral","src":"1967:34:22","type":"","value":"This function can only be called"}],"functionName":{"name":"mstore","nativeSrc":"1940:6:22","nodeType":"YulIdentifier","src":"1940:6:22"},"nativeSrc":"1940:62:22","nodeType":"YulFunctionCall","src":"1940:62:22"},"nativeSrc":"1940:62:22","nodeType":"YulExpressionStatement","src":"1940:62:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2022:9:22","nodeType":"YulIdentifier","src":"2022:9:22"},{"kind":"number","nativeSrc":"2033:2:22","nodeType":"YulLiteral","src":"2033:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"2018:3:22","nodeType":"YulIdentifier","src":"2018:3:22"},"nativeSrc":"2018:18:22","nodeType":"YulFunctionCall","src":"2018:18:22"},{"hexValue":"20627920746865206f776e65722061646472657373","kind":"string","nativeSrc":"2038:23:22","nodeType":"YulLiteral","src":"2038:23:22","type":"","value":" by the owner address"}],"functionName":{"name":"mstore","nativeSrc":"2011:6:22","nodeType":"YulIdentifier","src":"2011:6:22"},"nativeSrc":"2011:51:22","nodeType":"YulFunctionCall","src":"2011:51:22"},"nativeSrc":"2011:51:22","nodeType":"YulExpressionStatement","src":"2011:51:22"},{"nativeSrc":"2071:27:22","nodeType":"YulAssignment","src":"2071:27:22","value":{"arguments":[{"name":"headStart","nativeSrc":"2083:9:22","nodeType":"YulIdentifier","src":"2083:9:22"},{"kind":"number","nativeSrc":"2094:3:22","nodeType":"YulLiteral","src":"2094:3:22","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"2079:3:22","nodeType":"YulIdentifier","src":"2079:3:22"},"nativeSrc":"2079:19:22","nodeType":"YulFunctionCall","src":"2079:19:22"},"variableNames":[{"name":"tail","nativeSrc":"2071:4:22","nodeType":"YulIdentifier","src":"2071:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_046732d5414f05ecf7eecf16cd2fa81fef56df3233d5bab3cae061b0d442ba1d__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"1687:417:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1838:9:22","nodeType":"YulTypedName","src":"1838:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1852:4:22","nodeType":"YulTypedName","src":"1852:4:22","type":""}],"src":"1687:417:22"},{"body":{"nativeSrc":"2283:299:22","nodeType":"YulBlock","src":"2283:299:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2300:9:22","nodeType":"YulIdentifier","src":"2300:9:22"},{"kind":"number","nativeSrc":"2311:2:22","nodeType":"YulLiteral","src":"2311:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"2293:6:22","nodeType":"YulIdentifier","src":"2293:6:22"},"nativeSrc":"2293:21:22","nodeType":"YulFunctionCall","src":"2293:21:22"},"nativeSrc":"2293:21:22","nodeType":"YulExpressionStatement","src":"2293:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2334:9:22","nodeType":"YulIdentifier","src":"2334:9:22"},{"kind":"number","nativeSrc":"2345:2:22","nodeType":"YulLiteral","src":"2345:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2330:3:22","nodeType":"YulIdentifier","src":"2330:3:22"},"nativeSrc":"2330:18:22","nodeType":"YulFunctionCall","src":"2330:18:22"},{"kind":"number","nativeSrc":"2350:2:22","nodeType":"YulLiteral","src":"2350:2:22","type":"","value":"69"}],"functionName":{"name":"mstore","nativeSrc":"2323:6:22","nodeType":"YulIdentifier","src":"2323:6:22"},"nativeSrc":"2323:30:22","nodeType":"YulFunctionCall","src":"2323:30:22"},"nativeSrc":"2323:30:22","nodeType":"YulExpressionStatement","src":"2323:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2373:9:22","nodeType":"YulIdentifier","src":"2373:9:22"},{"kind":"number","nativeSrc":"2384:2:22","nodeType":"YulLiteral","src":"2384:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"2369:3:22","nodeType":"YulIdentifier","src":"2369:3:22"},"nativeSrc":"2369:18:22","nodeType":"YulFunctionCall","src":"2369:18:22"},{"hexValue":"54686520636f6e747261637420697320616c7265616479207365616c65642c20","kind":"string","nativeSrc":"2389:34:22","nodeType":"YulLiteral","src":"2389:34:22","type":"","value":"The contract is already sealed, "}],"functionName":{"name":"mstore","nativeSrc":"2362:6:22","nodeType":"YulIdentifier","src":"2362:6:22"},"nativeSrc":"2362:62:22","nodeType":"YulFunctionCall","src":"2362:62:22"},"nativeSrc":"2362:62:22","nodeType":"YulExpressionStatement","src":"2362:62:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2444:9:22","nodeType":"YulIdentifier","src":"2444:9:22"},{"kind":"number","nativeSrc":"2455:2:22","nodeType":"YulLiteral","src":"2455:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"2440:3:22","nodeType":"YulIdentifier","src":"2440:3:22"},"nativeSrc":"2440:18:22","nodeType":"YulFunctionCall","src":"2440:18:22"},{"hexValue":"6e6f206d6f64696669636174696f6e206f66207269676874732063616e206265","kind":"string","nativeSrc":"2460:34:22","nodeType":"YulLiteral","src":"2460:34:22","type":"","value":"no modification of rights can be"}],"functionName":{"name":"mstore","nativeSrc":"2433:6:22","nodeType":"YulIdentifier","src":"2433:6:22"},"nativeSrc":"2433:62:22","nodeType":"YulFunctionCall","src":"2433:62:22"},"nativeSrc":"2433:62:22","nodeType":"YulExpressionStatement","src":"2433:62:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2515:9:22","nodeType":"YulIdentifier","src":"2515:9:22"},{"kind":"number","nativeSrc":"2526:3:22","nodeType":"YulLiteral","src":"2526:3:22","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"2511:3:22","nodeType":"YulIdentifier","src":"2511:3:22"},"nativeSrc":"2511:19:22","nodeType":"YulFunctionCall","src":"2511:19:22"},{"hexValue":"206d616465","kind":"string","nativeSrc":"2532:7:22","nodeType":"YulLiteral","src":"2532:7:22","type":"","value":" made"}],"functionName":{"name":"mstore","nativeSrc":"2504:6:22","nodeType":"YulIdentifier","src":"2504:6:22"},"nativeSrc":"2504:36:22","nodeType":"YulFunctionCall","src":"2504:36:22"},"nativeSrc":"2504:36:22","nodeType":"YulExpressionStatement","src":"2504:36:22"},{"nativeSrc":"2549:27:22","nodeType":"YulAssignment","src":"2549:27:22","value":{"arguments":[{"name":"headStart","nativeSrc":"2561:9:22","nodeType":"YulIdentifier","src":"2561:9:22"},{"kind":"number","nativeSrc":"2572:3:22","nodeType":"YulLiteral","src":"2572:3:22","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"2557:3:22","nodeType":"YulIdentifier","src":"2557:3:22"},"nativeSrc":"2557:19:22","nodeType":"YulFunctionCall","src":"2557:19:22"},"variableNames":[{"name":"tail","nativeSrc":"2549:4:22","nodeType":"YulIdentifier","src":"2549:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_00e6c0e61855c07537c591862cc84232690f7fbd58ada30e5801a843b46d23e1__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"2109:473:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2260:9:22","nodeType":"YulTypedName","src":"2260:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2274:4:22","nodeType":"YulTypedName","src":"2274:4:22","type":""}],"src":"2109:473:22"},{"body":{"nativeSrc":"2761:234:22","nodeType":"YulBlock","src":"2761:234:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2778:9:22","nodeType":"YulIdentifier","src":"2778:9:22"},{"kind":"number","nativeSrc":"2789:2:22","nodeType":"YulLiteral","src":"2789:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"2771:6:22","nodeType":"YulIdentifier","src":"2771:6:22"},"nativeSrc":"2771:21:22","nodeType":"YulFunctionCall","src":"2771:21:22"},"nativeSrc":"2771:21:22","nodeType":"YulExpressionStatement","src":"2771:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2812:9:22","nodeType":"YulIdentifier","src":"2812:9:22"},{"kind":"number","nativeSrc":"2823:2:22","nodeType":"YulLiteral","src":"2823:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2808:3:22","nodeType":"YulIdentifier","src":"2808:3:22"},"nativeSrc":"2808:18:22","nodeType":"YulFunctionCall","src":"2808:18:22"},{"kind":"number","nativeSrc":"2828:2:22","nodeType":"YulLiteral","src":"2828:2:22","type":"","value":"44"}],"functionName":{"name":"mstore","nativeSrc":"2801:6:22","nodeType":"YulIdentifier","src":"2801:6:22"},"nativeSrc":"2801:30:22","nodeType":"YulFunctionCall","src":"2801:30:22"},"nativeSrc":"2801:30:22","nodeType":"YulExpressionStatement","src":"2801:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2851:9:22","nodeType":"YulIdentifier","src":"2851:9:22"},{"kind":"number","nativeSrc":"2862:2:22","nodeType":"YulLiteral","src":"2862:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"2847:3:22","nodeType":"YulIdentifier","src":"2847:3:22"},"nativeSrc":"2847:18:22","nodeType":"YulFunctionCall","src":"2847:18:22"},{"hexValue":"4e6f207269676874732068617665206265656e20646566696e656420666f7220","kind":"string","nativeSrc":"2867:34:22","nodeType":"YulLiteral","src":"2867:34:22","type":"","value":"No rights have been defined for "}],"functionName":{"name":"mstore","nativeSrc":"2840:6:22","nodeType":"YulIdentifier","src":"2840:6:22"},"nativeSrc":"2840:62:22","nodeType":"YulFunctionCall","src":"2840:62:22"},"nativeSrc":"2840:62:22","nodeType":"YulExpressionStatement","src":"2840:62:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2922:9:22","nodeType":"YulIdentifier","src":"2922:9:22"},{"kind":"number","nativeSrc":"2933:2:22","nodeType":"YulLiteral","src":"2933:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"2918:3:22","nodeType":"YulIdentifier","src":"2918:3:22"},"nativeSrc":"2918:18:22","nodeType":"YulFunctionCall","src":"2918:18:22"},{"hexValue":"746869732061646472657373","kind":"string","nativeSrc":"2938:14:22","nodeType":"YulLiteral","src":"2938:14:22","type":"","value":"this address"}],"functionName":{"name":"mstore","nativeSrc":"2911:6:22","nodeType":"YulIdentifier","src":"2911:6:22"},"nativeSrc":"2911:42:22","nodeType":"YulFunctionCall","src":"2911:42:22"},"nativeSrc":"2911:42:22","nodeType":"YulExpressionStatement","src":"2911:42:22"},{"nativeSrc":"2962:27:22","nodeType":"YulAssignment","src":"2962:27:22","value":{"arguments":[{"name":"headStart","nativeSrc":"2974:9:22","nodeType":"YulIdentifier","src":"2974:9:22"},{"kind":"number","nativeSrc":"2985:3:22","nodeType":"YulLiteral","src":"2985:3:22","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"2970:3:22","nodeType":"YulIdentifier","src":"2970:3:22"},"nativeSrc":"2970:19:22","nodeType":"YulFunctionCall","src":"2970:19:22"},"variableNames":[{"name":"tail","nativeSrc":"2962:4:22","nodeType":"YulIdentifier","src":"2962:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_70663abecbb73251778bc3d21efd92dc5f7e553ae5bbf6ed615d3f6a93f02dec__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"2587:408:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2738:9:22","nodeType":"YulTypedName","src":"2738:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2752:4:22","nodeType":"YulTypedName","src":"2752:4:22","type":""}],"src":"2587:408:22"},{"body":{"nativeSrc":"3174:252:22","nodeType":"YulBlock","src":"3174:252:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3191:9:22","nodeType":"YulIdentifier","src":"3191:9:22"},{"kind":"number","nativeSrc":"3202:2:22","nodeType":"YulLiteral","src":"3202:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"3184:6:22","nodeType":"YulIdentifier","src":"3184:6:22"},"nativeSrc":"3184:21:22","nodeType":"YulFunctionCall","src":"3184:21:22"},"nativeSrc":"3184:21:22","nodeType":"YulExpressionStatement","src":"3184:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3225:9:22","nodeType":"YulIdentifier","src":"3225:9:22"},{"kind":"number","nativeSrc":"3236:2:22","nodeType":"YulLiteral","src":"3236:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3221:3:22","nodeType":"YulIdentifier","src":"3221:3:22"},"nativeSrc":"3221:18:22","nodeType":"YulFunctionCall","src":"3221:18:22"},{"kind":"number","nativeSrc":"3241:2:22","nodeType":"YulLiteral","src":"3241:2:22","type":"","value":"62"}],"functionName":{"name":"mstore","nativeSrc":"3214:6:22","nodeType":"YulIdentifier","src":"3214:6:22"},"nativeSrc":"3214:30:22","nodeType":"YulFunctionCall","src":"3214:30:22"},"nativeSrc":"3214:30:22","nodeType":"YulExpressionStatement","src":"3214:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3264:9:22","nodeType":"YulIdentifier","src":"3264:9:22"},{"kind":"number","nativeSrc":"3275:2:22","nodeType":"YulLiteral","src":"3275:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3260:3:22","nodeType":"YulIdentifier","src":"3260:3:22"},"nativeSrc":"3260:18:22","nodeType":"YulFunctionCall","src":"3260:18:22"},{"hexValue":"4974206973206e6f7420706f737369626c6520746f2072656d6f7665206d6f72","kind":"string","nativeSrc":"3280:34:22","nodeType":"YulLiteral","src":"3280:34:22","type":"","value":"It is not possible to remove mor"}],"functionName":{"name":"mstore","nativeSrc":"3253:6:22","nodeType":"YulIdentifier","src":"3253:6:22"},"nativeSrc":"3253:62:22","nodeType":"YulFunctionCall","src":"3253:62:22"},"nativeSrc":"3253:62:22","nodeType":"YulExpressionStatement","src":"3253:62:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3335:9:22","nodeType":"YulIdentifier","src":"3335:9:22"},{"kind":"number","nativeSrc":"3346:2:22","nodeType":"YulLiteral","src":"3346:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"3331:3:22","nodeType":"YulIdentifier","src":"3331:3:22"},"nativeSrc":"3331:18:22","nodeType":"YulFunctionCall","src":"3331:18:22"},{"hexValue":"6520726967687473207468616e2074686973206164647265737320686173","kind":"string","nativeSrc":"3351:32:22","nodeType":"YulLiteral","src":"3351:32:22","type":"","value":"e rights than this address has"}],"functionName":{"name":"mstore","nativeSrc":"3324:6:22","nodeType":"YulIdentifier","src":"3324:6:22"},"nativeSrc":"3324:60:22","nodeType":"YulFunctionCall","src":"3324:60:22"},"nativeSrc":"3324:60:22","nodeType":"YulExpressionStatement","src":"3324:60:22"},{"nativeSrc":"3393:27:22","nodeType":"YulAssignment","src":"3393:27:22","value":{"arguments":[{"name":"headStart","nativeSrc":"3405:9:22","nodeType":"YulIdentifier","src":"3405:9:22"},{"kind":"number","nativeSrc":"3416:3:22","nodeType":"YulLiteral","src":"3416:3:22","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"3401:3:22","nodeType":"YulIdentifier","src":"3401:3:22"},"nativeSrc":"3401:19:22","nodeType":"YulFunctionCall","src":"3401:19:22"},"variableNames":[{"name":"tail","nativeSrc":"3393:4:22","nodeType":"YulIdentifier","src":"3393:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_cf76a2966d01617b66d1809ad15b5c6b51fe81173232aead78b823940f0b89b8__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"3000:426:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3151:9:22","nodeType":"YulTypedName","src":"3151:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3165:4:22","nodeType":"YulTypedName","src":"3165:4:22","type":""}],"src":"3000:426:22"},{"body":{"nativeSrc":"3463:95:22","nodeType":"YulBlock","src":"3463:95:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3480:1:22","nodeType":"YulLiteral","src":"3480:1:22","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"3487:3:22","nodeType":"YulLiteral","src":"3487:3:22","type":"","value":"224"},{"kind":"number","nativeSrc":"3492:10:22","nodeType":"YulLiteral","src":"3492:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"3483:3:22","nodeType":"YulIdentifier","src":"3483:3:22"},"nativeSrc":"3483:20:22","nodeType":"YulFunctionCall","src":"3483:20:22"}],"functionName":{"name":"mstore","nativeSrc":"3473:6:22","nodeType":"YulIdentifier","src":"3473:6:22"},"nativeSrc":"3473:31:22","nodeType":"YulFunctionCall","src":"3473:31:22"},"nativeSrc":"3473:31:22","nodeType":"YulExpressionStatement","src":"3473:31:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3520:1:22","nodeType":"YulLiteral","src":"3520:1:22","type":"","value":"4"},{"kind":"number","nativeSrc":"3523:4:22","nodeType":"YulLiteral","src":"3523:4:22","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"3513:6:22","nodeType":"YulIdentifier","src":"3513:6:22"},"nativeSrc":"3513:15:22","nodeType":"YulFunctionCall","src":"3513:15:22"},"nativeSrc":"3513:15:22","nodeType":"YulExpressionStatement","src":"3513:15:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3544:1:22","nodeType":"YulLiteral","src":"3544:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"3547:4:22","nodeType":"YulLiteral","src":"3547:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"3537:6:22","nodeType":"YulIdentifier","src":"3537:6:22"},"nativeSrc":"3537:15:22","nodeType":"YulFunctionCall","src":"3537:15:22"},"nativeSrc":"3537:15:22","nodeType":"YulExpressionStatement","src":"3537:15:22"}]},"name":"panic_error_0x11","nativeSrc":"3431:127:22","nodeType":"YulFunctionDefinition","src":"3431:127:22"},{"body":{"nativeSrc":"3610:104:22","nodeType":"YulBlock","src":"3610:104:22","statements":[{"nativeSrc":"3620:39:22","nodeType":"YulAssignment","src":"3620:39:22","value":{"arguments":[{"arguments":[{"name":"x","nativeSrc":"3636:1:22","nodeType":"YulIdentifier","src":"3636:1:22"},{"kind":"number","nativeSrc":"3639:4:22","nodeType":"YulLiteral","src":"3639:4:22","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"3632:3:22","nodeType":"YulIdentifier","src":"3632:3:22"},"nativeSrc":"3632:12:22","nodeType":"YulFunctionCall","src":"3632:12:22"},{"arguments":[{"name":"y","nativeSrc":"3650:1:22","nodeType":"YulIdentifier","src":"3650:1:22"},{"kind":"number","nativeSrc":"3653:4:22","nodeType":"YulLiteral","src":"3653:4:22","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"3646:3:22","nodeType":"YulIdentifier","src":"3646:3:22"},"nativeSrc":"3646:12:22","nodeType":"YulFunctionCall","src":"3646:12:22"}],"functionName":{"name":"sub","nativeSrc":"3628:3:22","nodeType":"YulIdentifier","src":"3628:3:22"},"nativeSrc":"3628:31:22","nodeType":"YulFunctionCall","src":"3628:31:22"},"variableNames":[{"name":"diff","nativeSrc":"3620:4:22","nodeType":"YulIdentifier","src":"3620:4:22"}]},{"body":{"nativeSrc":"3686:22:22","nodeType":"YulBlock","src":"3686:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"3688:16:22","nodeType":"YulIdentifier","src":"3688:16:22"},"nativeSrc":"3688:18:22","nodeType":"YulFunctionCall","src":"3688:18:22"},"nativeSrc":"3688:18:22","nodeType":"YulExpressionStatement","src":"3688:18:22"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"3674:4:22","nodeType":"YulIdentifier","src":"3674:4:22"},{"kind":"number","nativeSrc":"3680:4:22","nodeType":"YulLiteral","src":"3680:4:22","type":"","value":"0xff"}],"functionName":{"name":"gt","nativeSrc":"3671:2:22","nodeType":"YulIdentifier","src":"3671:2:22"},"nativeSrc":"3671:14:22","nodeType":"YulFunctionCall","src":"3671:14:22"},"nativeSrc":"3668:40:22","nodeType":"YulIf","src":"3668:40:22"}]},"name":"checked_sub_t_uint8","nativeSrc":"3563:151:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"3592:1:22","nodeType":"YulTypedName","src":"3592:1:22","type":""},{"name":"y","nativeSrc":"3595:1:22","nodeType":"YulTypedName","src":"3595:1:22","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"3601:4:22","nodeType":"YulTypedName","src":"3601:4:22","type":""}],"src":"3563:151:22"},{"body":{"nativeSrc":"3765:102:22","nodeType":"YulBlock","src":"3765:102:22","statements":[{"nativeSrc":"3775:38:22","nodeType":"YulAssignment","src":"3775:38:22","value":{"arguments":[{"arguments":[{"name":"x","nativeSrc":"3790:1:22","nodeType":"YulIdentifier","src":"3790:1:22"},{"kind":"number","nativeSrc":"3793:4:22","nodeType":"YulLiteral","src":"3793:4:22","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"3786:3:22","nodeType":"YulIdentifier","src":"3786:3:22"},"nativeSrc":"3786:12:22","nodeType":"YulFunctionCall","src":"3786:12:22"},{"arguments":[{"name":"y","nativeSrc":"3804:1:22","nodeType":"YulIdentifier","src":"3804:1:22"},{"kind":"number","nativeSrc":"3807:4:22","nodeType":"YulLiteral","src":"3807:4:22","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"3800:3:22","nodeType":"YulIdentifier","src":"3800:3:22"},"nativeSrc":"3800:12:22","nodeType":"YulFunctionCall","src":"3800:12:22"}],"functionName":{"name":"add","nativeSrc":"3782:3:22","nodeType":"YulIdentifier","src":"3782:3:22"},"nativeSrc":"3782:31:22","nodeType":"YulFunctionCall","src":"3782:31:22"},"variableNames":[{"name":"sum","nativeSrc":"3775:3:22","nodeType":"YulIdentifier","src":"3775:3:22"}]},{"body":{"nativeSrc":"3839:22:22","nodeType":"YulBlock","src":"3839:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"3841:16:22","nodeType":"YulIdentifier","src":"3841:16:22"},"nativeSrc":"3841:18:22","nodeType":"YulFunctionCall","src":"3841:18:22"},"nativeSrc":"3841:18:22","nodeType":"YulExpressionStatement","src":"3841:18:22"}]},"condition":{"arguments":[{"name":"sum","nativeSrc":"3828:3:22","nodeType":"YulIdentifier","src":"3828:3:22"},{"kind":"number","nativeSrc":"3833:4:22","nodeType":"YulLiteral","src":"3833:4:22","type":"","value":"0xff"}],"functionName":{"name":"gt","nativeSrc":"3825:2:22","nodeType":"YulIdentifier","src":"3825:2:22"},"nativeSrc":"3825:13:22","nodeType":"YulFunctionCall","src":"3825:13:22"},"nativeSrc":"3822:39:22","nodeType":"YulIf","src":"3822:39:22"}]},"name":"checked_add_t_uint8","nativeSrc":"3719:148:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"3748:1:22","nodeType":"YulTypedName","src":"3748:1:22","type":""},{"name":"y","nativeSrc":"3751:1:22","nodeType":"YulTypedName","src":"3751:1:22","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"3757:3:22","nodeType":"YulTypedName","src":"3757:3:22","type":""}],"src":"3719:148:22"},{"body":{"nativeSrc":"4046:314:22","nodeType":"YulBlock","src":"4046:314:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4063:9:22","nodeType":"YulIdentifier","src":"4063:9:22"},{"kind":"number","nativeSrc":"4074:2:22","nodeType":"YulLiteral","src":"4074:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"4056:6:22","nodeType":"YulIdentifier","src":"4056:6:22"},"nativeSrc":"4056:21:22","nodeType":"YulFunctionCall","src":"4056:21:22"},"nativeSrc":"4056:21:22","nodeType":"YulExpressionStatement","src":"4056:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4097:9:22","nodeType":"YulIdentifier","src":"4097:9:22"},{"kind":"number","nativeSrc":"4108:2:22","nodeType":"YulLiteral","src":"4108:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4093:3:22","nodeType":"YulIdentifier","src":"4093:3:22"},"nativeSrc":"4093:18:22","nodeType":"YulFunctionCall","src":"4093:18:22"},{"kind":"number","nativeSrc":"4113:2:22","nodeType":"YulLiteral","src":"4113:2:22","type":"","value":"84"}],"functionName":{"name":"mstore","nativeSrc":"4086:6:22","nodeType":"YulIdentifier","src":"4086:6:22"},"nativeSrc":"4086:30:22","nodeType":"YulFunctionCall","src":"4086:30:22"},"nativeSrc":"4086:30:22","nodeType":"YulExpressionStatement","src":"4086:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4136:9:22","nodeType":"YulIdentifier","src":"4136:9:22"},{"kind":"number","nativeSrc":"4147:2:22","nodeType":"YulLiteral","src":"4147:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4132:3:22","nodeType":"YulIdentifier","src":"4132:3:22"},"nativeSrc":"4132:18:22","nodeType":"YulFunctionCall","src":"4132:18:22"},{"hexValue":"54686520636f6e7472616374206973206e6f74207365616c65642e2054686973","kind":"string","nativeSrc":"4152:34:22","nodeType":"YulLiteral","src":"4152:34:22","type":"","value":"The contract is not sealed. This"}],"functionName":{"name":"mstore","nativeSrc":"4125:6:22","nodeType":"YulIdentifier","src":"4125:6:22"},"nativeSrc":"4125:62:22","nodeType":"YulFunctionCall","src":"4125:62:22"},"nativeSrc":"4125:62:22","nodeType":"YulExpressionStatement","src":"4125:62:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4207:9:22","nodeType":"YulIdentifier","src":"4207:9:22"},{"kind":"number","nativeSrc":"4218:2:22","nodeType":"YulLiteral","src":"4218:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"4203:3:22","nodeType":"YulIdentifier","src":"4203:3:22"},"nativeSrc":"4203:18:22","nodeType":"YulFunctionCall","src":"4203:18:22"},{"hexValue":"207472616e73616374696f6e2063616e206f6e6c7920626520646f6e65207769","kind":"string","nativeSrc":"4223:34:22","nodeType":"YulLiteral","src":"4223:34:22","type":"","value":" transaction can only be done wi"}],"functionName":{"name":"mstore","nativeSrc":"4196:6:22","nodeType":"YulIdentifier","src":"4196:6:22"},"nativeSrc":"4196:62:22","nodeType":"YulFunctionCall","src":"4196:62:22"},"nativeSrc":"4196:62:22","nodeType":"YulExpressionStatement","src":"4196:62:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4278:9:22","nodeType":"YulIdentifier","src":"4278:9:22"},{"kind":"number","nativeSrc":"4289:3:22","nodeType":"YulLiteral","src":"4289:3:22","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"4274:3:22","nodeType":"YulIdentifier","src":"4274:3:22"},"nativeSrc":"4274:19:22","nodeType":"YulFunctionCall","src":"4274:19:22"},{"hexValue":"74682061207365616c656420636f6e7472616374","kind":"string","nativeSrc":"4295:22:22","nodeType":"YulLiteral","src":"4295:22:22","type":"","value":"th a sealed contract"}],"functionName":{"name":"mstore","nativeSrc":"4267:6:22","nodeType":"YulIdentifier","src":"4267:6:22"},"nativeSrc":"4267:51:22","nodeType":"YulFunctionCall","src":"4267:51:22"},"nativeSrc":"4267:51:22","nodeType":"YulExpressionStatement","src":"4267:51:22"},{"nativeSrc":"4327:27:22","nodeType":"YulAssignment","src":"4327:27:22","value":{"arguments":[{"name":"headStart","nativeSrc":"4339:9:22","nodeType":"YulIdentifier","src":"4339:9:22"},{"kind":"number","nativeSrc":"4350:3:22","nodeType":"YulLiteral","src":"4350:3:22","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"4335:3:22","nodeType":"YulIdentifier","src":"4335:3:22"},"nativeSrc":"4335:19:22","nodeType":"YulFunctionCall","src":"4335:19:22"},"variableNames":[{"name":"tail","nativeSrc":"4327:4:22","nodeType":"YulIdentifier","src":"4327:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_035b512df0303c3c81b766e4199bc9ebb5c3b7e675aeebed76db1e1355e83003__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"3872:488:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4023:9:22","nodeType":"YulTypedName","src":"4023:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4037:4:22","nodeType":"YulTypedName","src":"4037:4:22","type":""}],"src":"3872:488:22"},{"body":{"nativeSrc":"4539:307:22","nodeType":"YulBlock","src":"4539:307:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4556:9:22","nodeType":"YulIdentifier","src":"4556:9:22"},{"kind":"number","nativeSrc":"4567:2:22","nodeType":"YulLiteral","src":"4567:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"4549:6:22","nodeType":"YulIdentifier","src":"4549:6:22"},"nativeSrc":"4549:21:22","nodeType":"YulFunctionCall","src":"4549:21:22"},"nativeSrc":"4549:21:22","nodeType":"YulExpressionStatement","src":"4549:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4590:9:22","nodeType":"YulIdentifier","src":"4590:9:22"},{"kind":"number","nativeSrc":"4601:2:22","nodeType":"YulLiteral","src":"4601:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4586:3:22","nodeType":"YulIdentifier","src":"4586:3:22"},"nativeSrc":"4586:18:22","nodeType":"YulFunctionCall","src":"4586:18:22"},{"kind":"number","nativeSrc":"4606:2:22","nodeType":"YulLiteral","src":"4606:2:22","type":"","value":"77"}],"functionName":{"name":"mstore","nativeSrc":"4579:6:22","nodeType":"YulIdentifier","src":"4579:6:22"},"nativeSrc":"4579:30:22","nodeType":"YulFunctionCall","src":"4579:30:22"},"nativeSrc":"4579:30:22","nodeType":"YulExpressionStatement","src":"4579:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4629:9:22","nodeType":"YulIdentifier","src":"4629:9:22"},{"kind":"number","nativeSrc":"4640:2:22","nodeType":"YulLiteral","src":"4640:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4625:3:22","nodeType":"YulIdentifier","src":"4625:3:22"},"nativeSrc":"4625:18:22","nodeType":"YulFunctionCall","src":"4625:18:22"},{"hexValue":"546869732066756e6374696f6e2063616e6e6f742062652063616c6c65642062","kind":"string","nativeSrc":"4645:34:22","nodeType":"YulLiteral","src":"4645:34:22","type":"","value":"This function cannot be called b"}],"functionName":{"name":"mstore","nativeSrc":"4618:6:22","nodeType":"YulIdentifier","src":"4618:6:22"},"nativeSrc":"4618:62:22","nodeType":"YulFunctionCall","src":"4618:62:22"},"nativeSrc":"4618:62:22","nodeType":"YulExpressionStatement","src":"4618:62:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4700:9:22","nodeType":"YulIdentifier","src":"4700:9:22"},{"kind":"number","nativeSrc":"4711:2:22","nodeType":"YulLiteral","src":"4711:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"4696:3:22","nodeType":"YulIdentifier","src":"4696:3:22"},"nativeSrc":"4696:18:22","nodeType":"YulFunctionCall","src":"4696:18:22"},{"hexValue":"7920616e796f6e652077686f20646f6573206e6f742068617665207269676874","kind":"string","nativeSrc":"4716:34:22","nodeType":"YulLiteral","src":"4716:34:22","type":"","value":"y anyone who does not have right"}],"functionName":{"name":"mstore","nativeSrc":"4689:6:22","nodeType":"YulIdentifier","src":"4689:6:22"},"nativeSrc":"4689:62:22","nodeType":"YulFunctionCall","src":"4689:62:22"},"nativeSrc":"4689:62:22","nodeType":"YulExpressionStatement","src":"4689:62:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4771:9:22","nodeType":"YulIdentifier","src":"4771:9:22"},{"kind":"number","nativeSrc":"4782:3:22","nodeType":"YulLiteral","src":"4782:3:22","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"4767:3:22","nodeType":"YulIdentifier","src":"4767:3:22"},"nativeSrc":"4767:19:22","nodeType":"YulFunctionCall","src":"4767:19:22"},{"hexValue":"7320746f2074686520736f6e67","kind":"string","nativeSrc":"4788:15:22","nodeType":"YulLiteral","src":"4788:15:22","type":"","value":"s to the song"}],"functionName":{"name":"mstore","nativeSrc":"4760:6:22","nodeType":"YulIdentifier","src":"4760:6:22"},"nativeSrc":"4760:44:22","nodeType":"YulFunctionCall","src":"4760:44:22"},"nativeSrc":"4760:44:22","nodeType":"YulExpressionStatement","src":"4760:44:22"},{"nativeSrc":"4813:27:22","nodeType":"YulAssignment","src":"4813:27:22","value":{"arguments":[{"name":"headStart","nativeSrc":"4825:9:22","nodeType":"YulIdentifier","src":"4825:9:22"},{"kind":"number","nativeSrc":"4836:3:22","nodeType":"YulLiteral","src":"4836:3:22","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"4821:3:22","nodeType":"YulIdentifier","src":"4821:3:22"},"nativeSrc":"4821:19:22","nodeType":"YulFunctionCall","src":"4821:19:22"},"variableNames":[{"name":"tail","nativeSrc":"4813:4:22","nodeType":"YulIdentifier","src":"4813:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_888a677fffff6c994ae843925886fd3ad03f257f1a2f6c3f94a5f52a42910183__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"4365:481:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4516:9:22","nodeType":"YulTypedName","src":"4516:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4530:4:22","nodeType":"YulTypedName","src":"4530:4:22","type":""}],"src":"4365:481:22"},{"body":{"nativeSrc":"5025:252:22","nodeType":"YulBlock","src":"5025:252:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5042:9:22","nodeType":"YulIdentifier","src":"5042:9:22"},{"kind":"number","nativeSrc":"5053:2:22","nodeType":"YulLiteral","src":"5053:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"5035:6:22","nodeType":"YulIdentifier","src":"5035:6:22"},"nativeSrc":"5035:21:22","nodeType":"YulFunctionCall","src":"5035:21:22"},"nativeSrc":"5035:21:22","nodeType":"YulExpressionStatement","src":"5035:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5076:9:22","nodeType":"YulIdentifier","src":"5076:9:22"},{"kind":"number","nativeSrc":"5087:2:22","nodeType":"YulLiteral","src":"5087:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5072:3:22","nodeType":"YulIdentifier","src":"5072:3:22"},"nativeSrc":"5072:18:22","nodeType":"YulFunctionCall","src":"5072:18:22"},{"kind":"number","nativeSrc":"5092:2:22","nodeType":"YulLiteral","src":"5092:2:22","type":"","value":"62"}],"functionName":{"name":"mstore","nativeSrc":"5065:6:22","nodeType":"YulIdentifier","src":"5065:6:22"},"nativeSrc":"5065:30:22","nodeType":"YulFunctionCall","src":"5065:30:22"},"nativeSrc":"5065:30:22","nodeType":"YulExpressionStatement","src":"5065:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5115:9:22","nodeType":"YulIdentifier","src":"5115:9:22"},{"kind":"number","nativeSrc":"5126:2:22","nodeType":"YulLiteral","src":"5126:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5111:3:22","nodeType":"YulIdentifier","src":"5111:3:22"},"nativeSrc":"5111:18:22","nodeType":"YulFunctionCall","src":"5111:18:22"},{"hexValue":"4e756d626572206f6620746f6b656e7320666f72207265717565737465642074","kind":"string","nativeSrc":"5131:34:22","nodeType":"YulLiteral","src":"5131:34:22","type":"","value":"Number of tokens for requested t"}],"functionName":{"name":"mstore","nativeSrc":"5104:6:22","nodeType":"YulIdentifier","src":"5104:6:22"},"nativeSrc":"5104:62:22","nodeType":"YulFunctionCall","src":"5104:62:22"},"nativeSrc":"5104:62:22","nodeType":"YulExpressionStatement","src":"5104:62:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5186:9:22","nodeType":"YulIdentifier","src":"5186:9:22"},{"kind":"number","nativeSrc":"5197:2:22","nodeType":"YulLiteral","src":"5197:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"5182:3:22","nodeType":"YulIdentifier","src":"5182:3:22"},"nativeSrc":"5182:18:22","nodeType":"YulFunctionCall","src":"5182:18:22"},{"hexValue":"72616e73666572206d7573742062652067726561746572207468616e2030","kind":"string","nativeSrc":"5202:32:22","nodeType":"YulLiteral","src":"5202:32:22","type":"","value":"ransfer must be greater than 0"}],"functionName":{"name":"mstore","nativeSrc":"5175:6:22","nodeType":"YulIdentifier","src":"5175:6:22"},"nativeSrc":"5175:60:22","nodeType":"YulFunctionCall","src":"5175:60:22"},"nativeSrc":"5175:60:22","nodeType":"YulExpressionStatement","src":"5175:60:22"},{"nativeSrc":"5244:27:22","nodeType":"YulAssignment","src":"5244:27:22","value":{"arguments":[{"name":"headStart","nativeSrc":"5256:9:22","nodeType":"YulIdentifier","src":"5256:9:22"},{"kind":"number","nativeSrc":"5267:3:22","nodeType":"YulLiteral","src":"5267:3:22","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"5252:3:22","nodeType":"YulIdentifier","src":"5252:3:22"},"nativeSrc":"5252:19:22","nodeType":"YulFunctionCall","src":"5252:19:22"},"variableNames":[{"name":"tail","nativeSrc":"5244:4:22","nodeType":"YulIdentifier","src":"5244:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_10ee263c07356aa89342d85eac7ad45f2615c99e8450dda756bc5e9ec583fd1c__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"4851:426:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5002:9:22","nodeType":"YulTypedName","src":"5002:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5016:4:22","nodeType":"YulTypedName","src":"5016:4:22","type":""}],"src":"4851:426:22"},{"body":{"nativeSrc":"5456:178:22","nodeType":"YulBlock","src":"5456:178:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5473:9:22","nodeType":"YulIdentifier","src":"5473:9:22"},{"kind":"number","nativeSrc":"5484:2:22","nodeType":"YulLiteral","src":"5484:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"5466:6:22","nodeType":"YulIdentifier","src":"5466:6:22"},"nativeSrc":"5466:21:22","nodeType":"YulFunctionCall","src":"5466:21:22"},"nativeSrc":"5466:21:22","nodeType":"YulExpressionStatement","src":"5466:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5507:9:22","nodeType":"YulIdentifier","src":"5507:9:22"},{"kind":"number","nativeSrc":"5518:2:22","nodeType":"YulLiteral","src":"5518:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5503:3:22","nodeType":"YulIdentifier","src":"5503:3:22"},"nativeSrc":"5503:18:22","nodeType":"YulFunctionCall","src":"5503:18:22"},{"kind":"number","nativeSrc":"5523:2:22","nodeType":"YulLiteral","src":"5523:2:22","type":"","value":"28"}],"functionName":{"name":"mstore","nativeSrc":"5496:6:22","nodeType":"YulIdentifier","src":"5496:6:22"},"nativeSrc":"5496:30:22","nodeType":"YulFunctionCall","src":"5496:30:22"},"nativeSrc":"5496:30:22","nodeType":"YulExpressionStatement","src":"5496:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5546:9:22","nodeType":"YulIdentifier","src":"5546:9:22"},{"kind":"number","nativeSrc":"5557:2:22","nodeType":"YulLiteral","src":"5557:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5542:3:22","nodeType":"YulIdentifier","src":"5542:3:22"},"nativeSrc":"5542:18:22","nodeType":"YulFunctionCall","src":"5542:18:22"},{"hexValue":"4e756d626572206f6620746f6b656e7320756e617661696c61626c65","kind":"string","nativeSrc":"5562:30:22","nodeType":"YulLiteral","src":"5562:30:22","type":"","value":"Number of tokens unavailable"}],"functionName":{"name":"mstore","nativeSrc":"5535:6:22","nodeType":"YulIdentifier","src":"5535:6:22"},"nativeSrc":"5535:58:22","nodeType":"YulFunctionCall","src":"5535:58:22"},"nativeSrc":"5535:58:22","nodeType":"YulExpressionStatement","src":"5535:58:22"},{"nativeSrc":"5602:26:22","nodeType":"YulAssignment","src":"5602:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"5614:9:22","nodeType":"YulIdentifier","src":"5614:9:22"},{"kind":"number","nativeSrc":"5625:2:22","nodeType":"YulLiteral","src":"5625:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"5610:3:22","nodeType":"YulIdentifier","src":"5610:3:22"},"nativeSrc":"5610:18:22","nodeType":"YulFunctionCall","src":"5610:18:22"},"variableNames":[{"name":"tail","nativeSrc":"5602:4:22","nodeType":"YulIdentifier","src":"5602:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_ff015140a35820efe946e6eca10609f6759241d73874b5516eef74c707161aec__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"5282:352:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5433:9:22","nodeType":"YulTypedName","src":"5433:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5447:4:22","nodeType":"YulTypedName","src":"5447:4:22","type":""}],"src":"5282:352:22"},{"body":{"nativeSrc":"5768:145:22","nodeType":"YulBlock","src":"5768:145:22","statements":[{"nativeSrc":"5778:26:22","nodeType":"YulAssignment","src":"5778:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"5790:9:22","nodeType":"YulIdentifier","src":"5790:9:22"},{"kind":"number","nativeSrc":"5801:2:22","nodeType":"YulLiteral","src":"5801:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5786:3:22","nodeType":"YulIdentifier","src":"5786:3:22"},"nativeSrc":"5786:18:22","nodeType":"YulFunctionCall","src":"5786:18:22"},"variableNames":[{"name":"tail","nativeSrc":"5778:4:22","nodeType":"YulIdentifier","src":"5778:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5820:9:22","nodeType":"YulIdentifier","src":"5820:9:22"},{"arguments":[{"name":"value0","nativeSrc":"5835:6:22","nodeType":"YulIdentifier","src":"5835:6:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"5851:3:22","nodeType":"YulLiteral","src":"5851:3:22","type":"","value":"160"},{"kind":"number","nativeSrc":"5856:1:22","nodeType":"YulLiteral","src":"5856:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"5847:3:22","nodeType":"YulIdentifier","src":"5847:3:22"},"nativeSrc":"5847:11:22","nodeType":"YulFunctionCall","src":"5847:11:22"},{"kind":"number","nativeSrc":"5860:1:22","nodeType":"YulLiteral","src":"5860:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"5843:3:22","nodeType":"YulIdentifier","src":"5843:3:22"},"nativeSrc":"5843:19:22","nodeType":"YulFunctionCall","src":"5843:19:22"}],"functionName":{"name":"and","nativeSrc":"5831:3:22","nodeType":"YulIdentifier","src":"5831:3:22"},"nativeSrc":"5831:32:22","nodeType":"YulFunctionCall","src":"5831:32:22"}],"functionName":{"name":"mstore","nativeSrc":"5813:6:22","nodeType":"YulIdentifier","src":"5813:6:22"},"nativeSrc":"5813:51:22","nodeType":"YulFunctionCall","src":"5813:51:22"},"nativeSrc":"5813:51:22","nodeType":"YulExpressionStatement","src":"5813:51:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5884:9:22","nodeType":"YulIdentifier","src":"5884:9:22"},{"kind":"number","nativeSrc":"5895:2:22","nodeType":"YulLiteral","src":"5895:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5880:3:22","nodeType":"YulIdentifier","src":"5880:3:22"},"nativeSrc":"5880:18:22","nodeType":"YulFunctionCall","src":"5880:18:22"},{"name":"value1","nativeSrc":"5900:6:22","nodeType":"YulIdentifier","src":"5900:6:22"}],"functionName":{"name":"mstore","nativeSrc":"5873:6:22","nodeType":"YulIdentifier","src":"5873:6:22"},"nativeSrc":"5873:34:22","nodeType":"YulFunctionCall","src":"5873:34:22"},"nativeSrc":"5873:34:22","nodeType":"YulExpressionStatement","src":"5873:34:22"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"5639:274:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5729:9:22","nodeType":"YulTypedName","src":"5729:9:22","type":""},{"name":"value1","nativeSrc":"5740:6:22","nodeType":"YulTypedName","src":"5740:6:22","type":""},{"name":"value0","nativeSrc":"5748:6:22","nodeType":"YulTypedName","src":"5748:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5759:4:22","nodeType":"YulTypedName","src":"5759:4:22","type":""}],"src":"5639:274:22"},{"body":{"nativeSrc":"5996:199:22","nodeType":"YulBlock","src":"5996:199:22","statements":[{"body":{"nativeSrc":"6042:16:22","nodeType":"YulBlock","src":"6042:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6051:1:22","nodeType":"YulLiteral","src":"6051:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"6054:1:22","nodeType":"YulLiteral","src":"6054:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6044:6:22","nodeType":"YulIdentifier","src":"6044:6:22"},"nativeSrc":"6044:12:22","nodeType":"YulFunctionCall","src":"6044:12:22"},"nativeSrc":"6044:12:22","nodeType":"YulExpressionStatement","src":"6044:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"6017:7:22","nodeType":"YulIdentifier","src":"6017:7:22"},{"name":"headStart","nativeSrc":"6026:9:22","nodeType":"YulIdentifier","src":"6026:9:22"}],"functionName":{"name":"sub","nativeSrc":"6013:3:22","nodeType":"YulIdentifier","src":"6013:3:22"},"nativeSrc":"6013:23:22","nodeType":"YulFunctionCall","src":"6013:23:22"},{"kind":"number","nativeSrc":"6038:2:22","nodeType":"YulLiteral","src":"6038:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"6009:3:22","nodeType":"YulIdentifier","src":"6009:3:22"},"nativeSrc":"6009:32:22","nodeType":"YulFunctionCall","src":"6009:32:22"},"nativeSrc":"6006:52:22","nodeType":"YulIf","src":"6006:52:22"},{"nativeSrc":"6067:29:22","nodeType":"YulVariableDeclaration","src":"6067:29:22","value":{"arguments":[{"name":"headStart","nativeSrc":"6086:9:22","nodeType":"YulIdentifier","src":"6086:9:22"}],"functionName":{"name":"mload","nativeSrc":"6080:5:22","nodeType":"YulIdentifier","src":"6080:5:22"},"nativeSrc":"6080:16:22","nodeType":"YulFunctionCall","src":"6080:16:22"},"variables":[{"name":"value","nativeSrc":"6071:5:22","nodeType":"YulTypedName","src":"6071:5:22","type":""}]},{"body":{"nativeSrc":"6149:16:22","nodeType":"YulBlock","src":"6149:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6158:1:22","nodeType":"YulLiteral","src":"6158:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"6161:1:22","nodeType":"YulLiteral","src":"6161:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6151:6:22","nodeType":"YulIdentifier","src":"6151:6:22"},"nativeSrc":"6151:12:22","nodeType":"YulFunctionCall","src":"6151:12:22"},"nativeSrc":"6151:12:22","nodeType":"YulExpressionStatement","src":"6151:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"6118:5:22","nodeType":"YulIdentifier","src":"6118:5:22"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"6139:5:22","nodeType":"YulIdentifier","src":"6139:5:22"}],"functionName":{"name":"iszero","nativeSrc":"6132:6:22","nodeType":"YulIdentifier","src":"6132:6:22"},"nativeSrc":"6132:13:22","nodeType":"YulFunctionCall","src":"6132:13:22"}],"functionName":{"name":"iszero","nativeSrc":"6125:6:22","nodeType":"YulIdentifier","src":"6125:6:22"},"nativeSrc":"6125:21:22","nodeType":"YulFunctionCall","src":"6125:21:22"}],"functionName":{"name":"eq","nativeSrc":"6115:2:22","nodeType":"YulIdentifier","src":"6115:2:22"},"nativeSrc":"6115:32:22","nodeType":"YulFunctionCall","src":"6115:32:22"}],"functionName":{"name":"iszero","nativeSrc":"6108:6:22","nodeType":"YulIdentifier","src":"6108:6:22"},"nativeSrc":"6108:40:22","nodeType":"YulFunctionCall","src":"6108:40:22"},"nativeSrc":"6105:60:22","nodeType":"YulIf","src":"6105:60:22"},{"nativeSrc":"6174:15:22","nodeType":"YulAssignment","src":"6174:15:22","value":{"name":"value","nativeSrc":"6184:5:22","nodeType":"YulIdentifier","src":"6184:5:22"},"variableNames":[{"name":"value0","nativeSrc":"6174:6:22","nodeType":"YulIdentifier","src":"6174:6:22"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nativeSrc":"5918:277:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5962:9:22","nodeType":"YulTypedName","src":"5962:9:22","type":""},{"name":"dataEnd","nativeSrc":"5973:7:22","nodeType":"YulTypedName","src":"5973:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5985:6:22","nodeType":"YulTypedName","src":"5985:6:22","type":""}],"src":"5918:277:22"},{"body":{"nativeSrc":"6249:79:22","nodeType":"YulBlock","src":"6249:79:22","statements":[{"nativeSrc":"6259:17:22","nodeType":"YulAssignment","src":"6259:17:22","value":{"arguments":[{"name":"x","nativeSrc":"6271:1:22","nodeType":"YulIdentifier","src":"6271:1:22"},{"name":"y","nativeSrc":"6274:1:22","nodeType":"YulIdentifier","src":"6274:1:22"}],"functionName":{"name":"sub","nativeSrc":"6267:3:22","nodeType":"YulIdentifier","src":"6267:3:22"},"nativeSrc":"6267:9:22","nodeType":"YulFunctionCall","src":"6267:9:22"},"variableNames":[{"name":"diff","nativeSrc":"6259:4:22","nodeType":"YulIdentifier","src":"6259:4:22"}]},{"body":{"nativeSrc":"6300:22:22","nodeType":"YulBlock","src":"6300:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"6302:16:22","nodeType":"YulIdentifier","src":"6302:16:22"},"nativeSrc":"6302:18:22","nodeType":"YulFunctionCall","src":"6302:18:22"},"nativeSrc":"6302:18:22","nodeType":"YulExpressionStatement","src":"6302:18:22"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"6291:4:22","nodeType":"YulIdentifier","src":"6291:4:22"},{"name":"x","nativeSrc":"6297:1:22","nodeType":"YulIdentifier","src":"6297:1:22"}],"functionName":{"name":"gt","nativeSrc":"6288:2:22","nodeType":"YulIdentifier","src":"6288:2:22"},"nativeSrc":"6288:11:22","nodeType":"YulFunctionCall","src":"6288:11:22"},"nativeSrc":"6285:37:22","nodeType":"YulIf","src":"6285:37:22"}]},"name":"checked_sub_t_uint256","nativeSrc":"6200:128:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"6231:1:22","nodeType":"YulTypedName","src":"6231:1:22","type":""},{"name":"y","nativeSrc":"6234:1:22","nodeType":"YulTypedName","src":"6234:1:22","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"6240:4:22","nodeType":"YulTypedName","src":"6240:4:22","type":""}],"src":"6200:128:22"},{"body":{"nativeSrc":"6385:116:22","nodeType":"YulBlock","src":"6385:116:22","statements":[{"nativeSrc":"6395:20:22","nodeType":"YulAssignment","src":"6395:20:22","value":{"arguments":[{"name":"x","nativeSrc":"6410:1:22","nodeType":"YulIdentifier","src":"6410:1:22"},{"name":"y","nativeSrc":"6413:1:22","nodeType":"YulIdentifier","src":"6413:1:22"}],"functionName":{"name":"mul","nativeSrc":"6406:3:22","nodeType":"YulIdentifier","src":"6406:3:22"},"nativeSrc":"6406:9:22","nodeType":"YulFunctionCall","src":"6406:9:22"},"variableNames":[{"name":"product","nativeSrc":"6395:7:22","nodeType":"YulIdentifier","src":"6395:7:22"}]},{"body":{"nativeSrc":"6473:22:22","nodeType":"YulBlock","src":"6473:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"6475:16:22","nodeType":"YulIdentifier","src":"6475:16:22"},"nativeSrc":"6475:18:22","nodeType":"YulFunctionCall","src":"6475:18:22"},"nativeSrc":"6475:18:22","nodeType":"YulExpressionStatement","src":"6475:18:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nativeSrc":"6444:1:22","nodeType":"YulIdentifier","src":"6444:1:22"}],"functionName":{"name":"iszero","nativeSrc":"6437:6:22","nodeType":"YulIdentifier","src":"6437:6:22"},"nativeSrc":"6437:9:22","nodeType":"YulFunctionCall","src":"6437:9:22"},{"arguments":[{"name":"y","nativeSrc":"6451:1:22","nodeType":"YulIdentifier","src":"6451:1:22"},{"arguments":[{"name":"product","nativeSrc":"6458:7:22","nodeType":"YulIdentifier","src":"6458:7:22"},{"name":"x","nativeSrc":"6467:1:22","nodeType":"YulIdentifier","src":"6467:1:22"}],"functionName":{"name":"div","nativeSrc":"6454:3:22","nodeType":"YulIdentifier","src":"6454:3:22"},"nativeSrc":"6454:15:22","nodeType":"YulFunctionCall","src":"6454:15:22"}],"functionName":{"name":"eq","nativeSrc":"6448:2:22","nodeType":"YulIdentifier","src":"6448:2:22"},"nativeSrc":"6448:22:22","nodeType":"YulFunctionCall","src":"6448:22:22"}],"functionName":{"name":"or","nativeSrc":"6434:2:22","nodeType":"YulIdentifier","src":"6434:2:22"},"nativeSrc":"6434:37:22","nodeType":"YulFunctionCall","src":"6434:37:22"}],"functionName":{"name":"iszero","nativeSrc":"6427:6:22","nodeType":"YulIdentifier","src":"6427:6:22"},"nativeSrc":"6427:45:22","nodeType":"YulFunctionCall","src":"6427:45:22"},"nativeSrc":"6424:71:22","nodeType":"YulIf","src":"6424:71:22"}]},"name":"checked_mul_t_uint256","nativeSrc":"6333:168:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"6364:1:22","nodeType":"YulTypedName","src":"6364:1:22","type":""},{"name":"y","nativeSrc":"6367:1:22","nodeType":"YulTypedName","src":"6367:1:22","type":""}],"returnVariables":[{"name":"product","nativeSrc":"6373:7:22","nodeType":"YulTypedName","src":"6373:7:22","type":""}],"src":"6333:168:22"},{"body":{"nativeSrc":"6680:235:22","nodeType":"YulBlock","src":"6680:235:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"6697:9:22","nodeType":"YulIdentifier","src":"6697:9:22"},{"kind":"number","nativeSrc":"6708:2:22","nodeType":"YulLiteral","src":"6708:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"6690:6:22","nodeType":"YulIdentifier","src":"6690:6:22"},"nativeSrc":"6690:21:22","nodeType":"YulFunctionCall","src":"6690:21:22"},"nativeSrc":"6690:21:22","nodeType":"YulExpressionStatement","src":"6690:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6731:9:22","nodeType":"YulIdentifier","src":"6731:9:22"},{"kind":"number","nativeSrc":"6742:2:22","nodeType":"YulLiteral","src":"6742:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6727:3:22","nodeType":"YulIdentifier","src":"6727:3:22"},"nativeSrc":"6727:18:22","nodeType":"YulFunctionCall","src":"6727:18:22"},{"kind":"number","nativeSrc":"6747:2:22","nodeType":"YulLiteral","src":"6747:2:22","type":"","value":"45"}],"functionName":{"name":"mstore","nativeSrc":"6720:6:22","nodeType":"YulIdentifier","src":"6720:6:22"},"nativeSrc":"6720:30:22","nodeType":"YulFunctionCall","src":"6720:30:22"},"nativeSrc":"6720:30:22","nodeType":"YulExpressionStatement","src":"6720:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6770:9:22","nodeType":"YulIdentifier","src":"6770:9:22"},{"kind":"number","nativeSrc":"6781:2:22","nodeType":"YulLiteral","src":"6781:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6766:3:22","nodeType":"YulIdentifier","src":"6766:3:22"},"nativeSrc":"6766:18:22","nodeType":"YulFunctionCall","src":"6766:18:22"},{"hexValue":"696e73756666696369656e742076616c756520746f206c697374656e20746865","kind":"string","nativeSrc":"6786:34:22","nodeType":"YulLiteral","src":"6786:34:22","type":"","value":"insufficient value to listen the"}],"functionName":{"name":"mstore","nativeSrc":"6759:6:22","nodeType":"YulIdentifier","src":"6759:6:22"},"nativeSrc":"6759:62:22","nodeType":"YulFunctionCall","src":"6759:62:22"},"nativeSrc":"6759:62:22","nodeType":"YulExpressionStatement","src":"6759:62:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6841:9:22","nodeType":"YulIdentifier","src":"6841:9:22"},{"kind":"number","nativeSrc":"6852:2:22","nodeType":"YulLiteral","src":"6852:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6837:3:22","nodeType":"YulIdentifier","src":"6837:3:22"},"nativeSrc":"6837:18:22","nodeType":"YulFunctionCall","src":"6837:18:22"},{"hexValue":"206d7573696320726967687473","kind":"string","nativeSrc":"6857:15:22","nodeType":"YulLiteral","src":"6857:15:22","type":"","value":" music rights"}],"functionName":{"name":"mstore","nativeSrc":"6830:6:22","nodeType":"YulIdentifier","src":"6830:6:22"},"nativeSrc":"6830:43:22","nodeType":"YulFunctionCall","src":"6830:43:22"},"nativeSrc":"6830:43:22","nodeType":"YulExpressionStatement","src":"6830:43:22"},{"nativeSrc":"6882:27:22","nodeType":"YulAssignment","src":"6882:27:22","value":{"arguments":[{"name":"headStart","nativeSrc":"6894:9:22","nodeType":"YulIdentifier","src":"6894:9:22"},{"kind":"number","nativeSrc":"6905:3:22","nodeType":"YulLiteral","src":"6905:3:22","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"6890:3:22","nodeType":"YulIdentifier","src":"6890:3:22"},"nativeSrc":"6890:19:22","nodeType":"YulFunctionCall","src":"6890:19:22"},"variableNames":[{"name":"tail","nativeSrc":"6882:4:22","nodeType":"YulIdentifier","src":"6882:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_449ba59efb4134ea4502563a81b53d2b67d0b309e434fc69970577cd2a7e9a7d__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"6506:409:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6657:9:22","nodeType":"YulTypedName","src":"6657:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6671:4:22","nodeType":"YulTypedName","src":"6671:4:22","type":""}],"src":"6506:409:22"},{"body":{"nativeSrc":"7094:233:22","nodeType":"YulBlock","src":"7094:233:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"7111:9:22","nodeType":"YulIdentifier","src":"7111:9:22"},{"kind":"number","nativeSrc":"7122:2:22","nodeType":"YulLiteral","src":"7122:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"7104:6:22","nodeType":"YulIdentifier","src":"7104:6:22"},"nativeSrc":"7104:21:22","nodeType":"YulFunctionCall","src":"7104:21:22"},"nativeSrc":"7104:21:22","nodeType":"YulExpressionStatement","src":"7104:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7145:9:22","nodeType":"YulIdentifier","src":"7145:9:22"},{"kind":"number","nativeSrc":"7156:2:22","nodeType":"YulLiteral","src":"7156:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7141:3:22","nodeType":"YulIdentifier","src":"7141:3:22"},"nativeSrc":"7141:18:22","nodeType":"YulFunctionCall","src":"7141:18:22"},{"kind":"number","nativeSrc":"7161:2:22","nodeType":"YulLiteral","src":"7161:2:22","type":"","value":"43"}],"functionName":{"name":"mstore","nativeSrc":"7134:6:22","nodeType":"YulIdentifier","src":"7134:6:22"},"nativeSrc":"7134:30:22","nodeType":"YulFunctionCall","src":"7134:30:22"},"nativeSrc":"7134:30:22","nodeType":"YulExpressionStatement","src":"7134:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7184:9:22","nodeType":"YulIdentifier","src":"7184:9:22"},{"kind":"number","nativeSrc":"7195:2:22","nodeType":"YulLiteral","src":"7195:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7180:3:22","nodeType":"YulIdentifier","src":"7180:3:22"},"nativeSrc":"7180:18:22","nodeType":"YulFunctionCall","src":"7180:18:22"},{"hexValue":"50657263656e74616765206f6620726967687473206d75737420626520677265","kind":"string","nativeSrc":"7200:34:22","nodeType":"YulLiteral","src":"7200:34:22","type":"","value":"Percentage of rights must be gre"}],"functionName":{"name":"mstore","nativeSrc":"7173:6:22","nodeType":"YulIdentifier","src":"7173:6:22"},"nativeSrc":"7173:62:22","nodeType":"YulFunctionCall","src":"7173:62:22"},"nativeSrc":"7173:62:22","nodeType":"YulExpressionStatement","src":"7173:62:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7255:9:22","nodeType":"YulIdentifier","src":"7255:9:22"},{"kind":"number","nativeSrc":"7266:2:22","nodeType":"YulLiteral","src":"7266:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"7251:3:22","nodeType":"YulIdentifier","src":"7251:3:22"},"nativeSrc":"7251:18:22","nodeType":"YulFunctionCall","src":"7251:18:22"},{"hexValue":"61746572207468616e2030","kind":"string","nativeSrc":"7271:13:22","nodeType":"YulLiteral","src":"7271:13:22","type":"","value":"ater than 0"}],"functionName":{"name":"mstore","nativeSrc":"7244:6:22","nodeType":"YulIdentifier","src":"7244:6:22"},"nativeSrc":"7244:41:22","nodeType":"YulFunctionCall","src":"7244:41:22"},"nativeSrc":"7244:41:22","nodeType":"YulExpressionStatement","src":"7244:41:22"},{"nativeSrc":"7294:27:22","nodeType":"YulAssignment","src":"7294:27:22","value":{"arguments":[{"name":"headStart","nativeSrc":"7306:9:22","nodeType":"YulIdentifier","src":"7306:9:22"},{"kind":"number","nativeSrc":"7317:3:22","nodeType":"YulLiteral","src":"7317:3:22","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"7302:3:22","nodeType":"YulIdentifier","src":"7302:3:22"},"nativeSrc":"7302:19:22","nodeType":"YulFunctionCall","src":"7302:19:22"},"variableNames":[{"name":"tail","nativeSrc":"7294:4:22","nodeType":"YulIdentifier","src":"7294:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_59548250c0c52fa555898b044e92abeaab02b814674a16ee51abb2007c9a83ed__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"6920:407:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7071:9:22","nodeType":"YulTypedName","src":"7071:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7085:4:22","nodeType":"YulTypedName","src":"7085:4:22","type":""}],"src":"6920:407:22"},{"body":{"nativeSrc":"7506:300:22","nodeType":"YulBlock","src":"7506:300:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"7523:9:22","nodeType":"YulIdentifier","src":"7523:9:22"},{"kind":"number","nativeSrc":"7534:2:22","nodeType":"YulLiteral","src":"7534:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"7516:6:22","nodeType":"YulIdentifier","src":"7516:6:22"},"nativeSrc":"7516:21:22","nodeType":"YulFunctionCall","src":"7516:21:22"},"nativeSrc":"7516:21:22","nodeType":"YulExpressionStatement","src":"7516:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7557:9:22","nodeType":"YulIdentifier","src":"7557:9:22"},{"kind":"number","nativeSrc":"7568:2:22","nodeType":"YulLiteral","src":"7568:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7553:3:22","nodeType":"YulIdentifier","src":"7553:3:22"},"nativeSrc":"7553:18:22","nodeType":"YulFunctionCall","src":"7553:18:22"},{"kind":"number","nativeSrc":"7573:2:22","nodeType":"YulLiteral","src":"7573:2:22","type":"","value":"70"}],"functionName":{"name":"mstore","nativeSrc":"7546:6:22","nodeType":"YulIdentifier","src":"7546:6:22"},"nativeSrc":"7546:30:22","nodeType":"YulFunctionCall","src":"7546:30:22"},"nativeSrc":"7546:30:22","nodeType":"YulExpressionStatement","src":"7546:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7596:9:22","nodeType":"YulIdentifier","src":"7596:9:22"},{"kind":"number","nativeSrc":"7607:2:22","nodeType":"YulLiteral","src":"7607:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7592:3:22","nodeType":"YulIdentifier","src":"7592:3:22"},"nativeSrc":"7592:18:22","nodeType":"YulFunctionCall","src":"7592:18:22"},{"hexValue":"70657263656e74616765206f6620656e7469746c656d656e74732072656d6169","kind":"string","nativeSrc":"7612:34:22","nodeType":"YulLiteral","src":"7612:34:22","type":"","value":"percentage of entitlements remai"}],"functionName":{"name":"mstore","nativeSrc":"7585:6:22","nodeType":"YulIdentifier","src":"7585:6:22"},"nativeSrc":"7585:62:22","nodeType":"YulFunctionCall","src":"7585:62:22"},"nativeSrc":"7585:62:22","nodeType":"YulExpressionStatement","src":"7585:62:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7667:9:22","nodeType":"YulIdentifier","src":"7667:9:22"},{"kind":"number","nativeSrc":"7678:2:22","nodeType":"YulLiteral","src":"7678:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"7663:3:22","nodeType":"YulIdentifier","src":"7663:3:22"},"nativeSrc":"7663:18:22","nodeType":"YulFunctionCall","src":"7663:18:22"},{"hexValue":"6e696e67206973206c657373207468616e207468652072657175657374656420","kind":"string","nativeSrc":"7683:34:22","nodeType":"YulLiteral","src":"7683:34:22","type":"","value":"ning is less than the requested "}],"functionName":{"name":"mstore","nativeSrc":"7656:6:22","nodeType":"YulIdentifier","src":"7656:6:22"},"nativeSrc":"7656:62:22","nodeType":"YulFunctionCall","src":"7656:62:22"},"nativeSrc":"7656:62:22","nodeType":"YulExpressionStatement","src":"7656:62:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7738:9:22","nodeType":"YulIdentifier","src":"7738:9:22"},{"kind":"number","nativeSrc":"7749:3:22","nodeType":"YulLiteral","src":"7749:3:22","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"7734:3:22","nodeType":"YulIdentifier","src":"7734:3:22"},"nativeSrc":"7734:19:22","nodeType":"YulFunctionCall","src":"7734:19:22"},{"hexValue":"616d6f756e74","kind":"string","nativeSrc":"7755:8:22","nodeType":"YulLiteral","src":"7755:8:22","type":"","value":"amount"}],"functionName":{"name":"mstore","nativeSrc":"7727:6:22","nodeType":"YulIdentifier","src":"7727:6:22"},"nativeSrc":"7727:37:22","nodeType":"YulFunctionCall","src":"7727:37:22"},"nativeSrc":"7727:37:22","nodeType":"YulExpressionStatement","src":"7727:37:22"},{"nativeSrc":"7773:27:22","nodeType":"YulAssignment","src":"7773:27:22","value":{"arguments":[{"name":"headStart","nativeSrc":"7785:9:22","nodeType":"YulIdentifier","src":"7785:9:22"},{"kind":"number","nativeSrc":"7796:3:22","nodeType":"YulLiteral","src":"7796:3:22","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"7781:3:22","nodeType":"YulIdentifier","src":"7781:3:22"},"nativeSrc":"7781:19:22","nodeType":"YulFunctionCall","src":"7781:19:22"},"variableNames":[{"name":"tail","nativeSrc":"7773:4:22","nodeType":"YulIdentifier","src":"7773:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_29dd189b09f51e6a215c7d90b9bc281fedbff2bce0a937c944c2d280eabe84d9__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"7332:474:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7483:9:22","nodeType":"YulTypedName","src":"7483:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7497:4:22","nodeType":"YulTypedName","src":"7497:4:22","type":""}],"src":"7332:474:22"},{"body":{"nativeSrc":"7985:237:22","nodeType":"YulBlock","src":"7985:237:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"8002:9:22","nodeType":"YulIdentifier","src":"8002:9:22"},{"kind":"number","nativeSrc":"8013:2:22","nodeType":"YulLiteral","src":"8013:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"7995:6:22","nodeType":"YulIdentifier","src":"7995:6:22"},"nativeSrc":"7995:21:22","nodeType":"YulFunctionCall","src":"7995:21:22"},"nativeSrc":"7995:21:22","nodeType":"YulExpressionStatement","src":"7995:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8036:9:22","nodeType":"YulIdentifier","src":"8036:9:22"},{"kind":"number","nativeSrc":"8047:2:22","nodeType":"YulLiteral","src":"8047:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8032:3:22","nodeType":"YulIdentifier","src":"8032:3:22"},"nativeSrc":"8032:18:22","nodeType":"YulFunctionCall","src":"8032:18:22"},{"kind":"number","nativeSrc":"8052:2:22","nodeType":"YulLiteral","src":"8052:2:22","type":"","value":"47"}],"functionName":{"name":"mstore","nativeSrc":"8025:6:22","nodeType":"YulIdentifier","src":"8025:6:22"},"nativeSrc":"8025:30:22","nodeType":"YulFunctionCall","src":"8025:30:22"},"nativeSrc":"8025:30:22","nodeType":"YulExpressionStatement","src":"8025:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8075:9:22","nodeType":"YulIdentifier","src":"8075:9:22"},{"kind":"number","nativeSrc":"8086:2:22","nodeType":"YulLiteral","src":"8086:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8071:3:22","nodeType":"YulIdentifier","src":"8071:3:22"},"nativeSrc":"8071:18:22","nodeType":"YulFunctionCall","src":"8071:18:22"},{"hexValue":"696e73756666696369656e742076616c756520746f2070757263686173652074","kind":"string","nativeSrc":"8091:34:22","nodeType":"YulLiteral","src":"8091:34:22","type":"","value":"insufficient value to purchase t"}],"functionName":{"name":"mstore","nativeSrc":"8064:6:22","nodeType":"YulIdentifier","src":"8064:6:22"},"nativeSrc":"8064:62:22","nodeType":"YulFunctionCall","src":"8064:62:22"},"nativeSrc":"8064:62:22","nodeType":"YulExpressionStatement","src":"8064:62:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8146:9:22","nodeType":"YulIdentifier","src":"8146:9:22"},{"kind":"number","nativeSrc":"8157:2:22","nodeType":"YulLiteral","src":"8157:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"8142:3:22","nodeType":"YulIdentifier","src":"8142:3:22"},"nativeSrc":"8142:18:22","nodeType":"YulFunctionCall","src":"8142:18:22"},{"hexValue":"6865206d7573696320726967687473","kind":"string","nativeSrc":"8162:17:22","nodeType":"YulLiteral","src":"8162:17:22","type":"","value":"he music rights"}],"functionName":{"name":"mstore","nativeSrc":"8135:6:22","nodeType":"YulIdentifier","src":"8135:6:22"},"nativeSrc":"8135:45:22","nodeType":"YulFunctionCall","src":"8135:45:22"},"nativeSrc":"8135:45:22","nodeType":"YulExpressionStatement","src":"8135:45:22"},{"nativeSrc":"8189:27:22","nodeType":"YulAssignment","src":"8189:27:22","value":{"arguments":[{"name":"headStart","nativeSrc":"8201:9:22","nodeType":"YulIdentifier","src":"8201:9:22"},{"kind":"number","nativeSrc":"8212:3:22","nodeType":"YulLiteral","src":"8212:3:22","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"8197:3:22","nodeType":"YulIdentifier","src":"8197:3:22"},"nativeSrc":"8197:19:22","nodeType":"YulFunctionCall","src":"8197:19:22"},"variableNames":[{"name":"tail","nativeSrc":"8189:4:22","nodeType":"YulIdentifier","src":"8189:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_b66c433229ecbc090d4615d47ec9e73470355743da96bc3174634127fc19c754__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"7811:411:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7962:9:22","nodeType":"YulTypedName","src":"7962:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7976:4:22","nodeType":"YulTypedName","src":"7976:4:22","type":""}],"src":"7811:411:22"},{"body":{"nativeSrc":"8401:295:22","nodeType":"YulBlock","src":"8401:295:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"8418:9:22","nodeType":"YulIdentifier","src":"8418:9:22"},{"kind":"number","nativeSrc":"8429:2:22","nodeType":"YulLiteral","src":"8429:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"8411:6:22","nodeType":"YulIdentifier","src":"8411:6:22"},"nativeSrc":"8411:21:22","nodeType":"YulFunctionCall","src":"8411:21:22"},"nativeSrc":"8411:21:22","nodeType":"YulExpressionStatement","src":"8411:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8452:9:22","nodeType":"YulIdentifier","src":"8452:9:22"},{"kind":"number","nativeSrc":"8463:2:22","nodeType":"YulLiteral","src":"8463:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8448:3:22","nodeType":"YulIdentifier","src":"8448:3:22"},"nativeSrc":"8448:18:22","nodeType":"YulFunctionCall","src":"8448:18:22"},{"kind":"number","nativeSrc":"8468:2:22","nodeType":"YulLiteral","src":"8468:2:22","type":"","value":"65"}],"functionName":{"name":"mstore","nativeSrc":"8441:6:22","nodeType":"YulIdentifier","src":"8441:6:22"},"nativeSrc":"8441:30:22","nodeType":"YulFunctionCall","src":"8441:30:22"},"nativeSrc":"8441:30:22","nodeType":"YulExpressionStatement","src":"8441:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8491:9:22","nodeType":"YulIdentifier","src":"8491:9:22"},{"kind":"number","nativeSrc":"8502:2:22","nodeType":"YulLiteral","src":"8502:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8487:3:22","nodeType":"YulIdentifier","src":"8487:3:22"},"nativeSrc":"8487:18:22","nodeType":"YulFunctionCall","src":"8487:18:22"},{"hexValue":"5468652072656d61696e696e67206469766973696f6e73206f66207269676874","kind":"string","nativeSrc":"8507:34:22","nodeType":"YulLiteral","src":"8507:34:22","type":"","value":"The remaining divisions of right"}],"functionName":{"name":"mstore","nativeSrc":"8480:6:22","nodeType":"YulIdentifier","src":"8480:6:22"},"nativeSrc":"8480:62:22","nodeType":"YulFunctionCall","src":"8480:62:22"},"nativeSrc":"8480:62:22","nodeType":"YulExpressionStatement","src":"8480:62:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8562:9:22","nodeType":"YulIdentifier","src":"8562:9:22"},{"kind":"number","nativeSrc":"8573:2:22","nodeType":"YulLiteral","src":"8573:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"8558:3:22","nodeType":"YulIdentifier","src":"8558:3:22"},"nativeSrc":"8558:18:22","nodeType":"YulFunctionCall","src":"8558:18:22"},{"hexValue":"73206d757374206265203020746f207365616c207468697320636f6e74726163","kind":"string","nativeSrc":"8578:34:22","nodeType":"YulLiteral","src":"8578:34:22","type":"","value":"s must be 0 to seal this contrac"}],"functionName":{"name":"mstore","nativeSrc":"8551:6:22","nodeType":"YulIdentifier","src":"8551:6:22"},"nativeSrc":"8551:62:22","nodeType":"YulFunctionCall","src":"8551:62:22"},"nativeSrc":"8551:62:22","nodeType":"YulExpressionStatement","src":"8551:62:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8633:9:22","nodeType":"YulIdentifier","src":"8633:9:22"},{"kind":"number","nativeSrc":"8644:3:22","nodeType":"YulLiteral","src":"8644:3:22","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"8629:3:22","nodeType":"YulIdentifier","src":"8629:3:22"},"nativeSrc":"8629:19:22","nodeType":"YulFunctionCall","src":"8629:19:22"},{"hexValue":"74","kind":"string","nativeSrc":"8650:3:22","nodeType":"YulLiteral","src":"8650:3:22","type":"","value":"t"}],"functionName":{"name":"mstore","nativeSrc":"8622:6:22","nodeType":"YulIdentifier","src":"8622:6:22"},"nativeSrc":"8622:32:22","nodeType":"YulFunctionCall","src":"8622:32:22"},"nativeSrc":"8622:32:22","nodeType":"YulExpressionStatement","src":"8622:32:22"},{"nativeSrc":"8663:27:22","nodeType":"YulAssignment","src":"8663:27:22","value":{"arguments":[{"name":"headStart","nativeSrc":"8675:9:22","nodeType":"YulIdentifier","src":"8675:9:22"},{"kind":"number","nativeSrc":"8686:3:22","nodeType":"YulLiteral","src":"8686:3:22","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"8671:3:22","nodeType":"YulIdentifier","src":"8671:3:22"},"nativeSrc":"8671:19:22","nodeType":"YulFunctionCall","src":"8671:19:22"},"variableNames":[{"name":"tail","nativeSrc":"8663:4:22","nodeType":"YulIdentifier","src":"8663:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_87d9762a6d93fc2b9c941e1ae13bb2fe779061bdcff987e2338ea0048a4e9011__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"8227:469:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8378:9:22","nodeType":"YulTypedName","src":"8378:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8392:4:22","nodeType":"YulTypedName","src":"8392:4:22","type":""}],"src":"8227:469:22"},{"body":{"nativeSrc":"8875:300:22","nodeType":"YulBlock","src":"8875:300:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"8892:9:22","nodeType":"YulIdentifier","src":"8892:9:22"},{"kind":"number","nativeSrc":"8903:2:22","nodeType":"YulLiteral","src":"8903:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"8885:6:22","nodeType":"YulIdentifier","src":"8885:6:22"},"nativeSrc":"8885:21:22","nodeType":"YulFunctionCall","src":"8885:21:22"},"nativeSrc":"8885:21:22","nodeType":"YulExpressionStatement","src":"8885:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8926:9:22","nodeType":"YulIdentifier","src":"8926:9:22"},{"kind":"number","nativeSrc":"8937:2:22","nodeType":"YulLiteral","src":"8937:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8922:3:22","nodeType":"YulIdentifier","src":"8922:3:22"},"nativeSrc":"8922:18:22","nodeType":"YulFunctionCall","src":"8922:18:22"},{"kind":"number","nativeSrc":"8942:2:22","nodeType":"YulLiteral","src":"8942:2:22","type":"","value":"70"}],"functionName":{"name":"mstore","nativeSrc":"8915:6:22","nodeType":"YulIdentifier","src":"8915:6:22"},"nativeSrc":"8915:30:22","nodeType":"YulFunctionCall","src":"8915:30:22"},"nativeSrc":"8915:30:22","nodeType":"YulExpressionStatement","src":"8915:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8965:9:22","nodeType":"YulIdentifier","src":"8965:9:22"},{"kind":"number","nativeSrc":"8976:2:22","nodeType":"YulLiteral","src":"8976:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8961:3:22","nodeType":"YulIdentifier","src":"8961:3:22"},"nativeSrc":"8961:18:22","nodeType":"YulFunctionCall","src":"8961:18:22"},{"hexValue":"496e73756666696369656e742045746865722073656e7420746f206275792074","kind":"string","nativeSrc":"8981:34:22","nodeType":"YulLiteral","src":"8981:34:22","type":"","value":"Insufficient Ether sent to buy t"}],"functionName":{"name":"mstore","nativeSrc":"8954:6:22","nodeType":"YulIdentifier","src":"8954:6:22"},"nativeSrc":"8954:62:22","nodeType":"YulFunctionCall","src":"8954:62:22"},"nativeSrc":"8954:62:22","nodeType":"YulExpressionStatement","src":"8954:62:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9036:9:22","nodeType":"YulIdentifier","src":"9036:9:22"},{"kind":"number","nativeSrc":"9047:2:22","nodeType":"YulLiteral","src":"9047:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"9032:3:22","nodeType":"YulIdentifier","src":"9032:3:22"},"nativeSrc":"9032:18:22","nodeType":"YulFunctionCall","src":"9032:18:22"},{"hexValue":"6f6b656e732e204d7573742068617665206174206c6561737420302e30303533","kind":"string","nativeSrc":"9052:34:22","nodeType":"YulLiteral","src":"9052:34:22","type":"","value":"okens. Must have at least 0.0053"}],"functionName":{"name":"mstore","nativeSrc":"9025:6:22","nodeType":"YulIdentifier","src":"9025:6:22"},"nativeSrc":"9025:62:22","nodeType":"YulFunctionCall","src":"9025:62:22"},"nativeSrc":"9025:62:22","nodeType":"YulExpressionStatement","src":"9025:62:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9107:9:22","nodeType":"YulIdentifier","src":"9107:9:22"},{"kind":"number","nativeSrc":"9118:3:22","nodeType":"YulLiteral","src":"9118:3:22","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"9103:3:22","nodeType":"YulIdentifier","src":"9103:3:22"},"nativeSrc":"9103:19:22","nodeType":"YulFunctionCall","src":"9103:19:22"},{"hexValue":"204574686572","kind":"string","nativeSrc":"9124:8:22","nodeType":"YulLiteral","src":"9124:8:22","type":"","value":" Ether"}],"functionName":{"name":"mstore","nativeSrc":"9096:6:22","nodeType":"YulIdentifier","src":"9096:6:22"},"nativeSrc":"9096:37:22","nodeType":"YulFunctionCall","src":"9096:37:22"},"nativeSrc":"9096:37:22","nodeType":"YulExpressionStatement","src":"9096:37:22"},{"nativeSrc":"9142:27:22","nodeType":"YulAssignment","src":"9142:27:22","value":{"arguments":[{"name":"headStart","nativeSrc":"9154:9:22","nodeType":"YulIdentifier","src":"9154:9:22"},{"kind":"number","nativeSrc":"9165:3:22","nodeType":"YulLiteral","src":"9165:3:22","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"9150:3:22","nodeType":"YulIdentifier","src":"9150:3:22"},"nativeSrc":"9150:19:22","nodeType":"YulFunctionCall","src":"9150:19:22"},"variableNames":[{"name":"tail","nativeSrc":"9142:4:22","nodeType":"YulIdentifier","src":"9142:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_0fc663d05a6bb57b3da0d21c1bcd326365e80a1353272fa5150359407637095a__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"8701:474:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8852:9:22","nodeType":"YulTypedName","src":"8852:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8866:4:22","nodeType":"YulTypedName","src":"8866:4:22","type":""}],"src":"8701:474:22"},{"body":{"nativeSrc":"9228:77:22","nodeType":"YulBlock","src":"9228:77:22","statements":[{"nativeSrc":"9238:16:22","nodeType":"YulAssignment","src":"9238:16:22","value":{"arguments":[{"name":"x","nativeSrc":"9249:1:22","nodeType":"YulIdentifier","src":"9249:1:22"},{"name":"y","nativeSrc":"9252:1:22","nodeType":"YulIdentifier","src":"9252:1:22"}],"functionName":{"name":"add","nativeSrc":"9245:3:22","nodeType":"YulIdentifier","src":"9245:3:22"},"nativeSrc":"9245:9:22","nodeType":"YulFunctionCall","src":"9245:9:22"},"variableNames":[{"name":"sum","nativeSrc":"9238:3:22","nodeType":"YulIdentifier","src":"9238:3:22"}]},{"body":{"nativeSrc":"9277:22:22","nodeType":"YulBlock","src":"9277:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"9279:16:22","nodeType":"YulIdentifier","src":"9279:16:22"},"nativeSrc":"9279:18:22","nodeType":"YulFunctionCall","src":"9279:18:22"},"nativeSrc":"9279:18:22","nodeType":"YulExpressionStatement","src":"9279:18:22"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"9269:1:22","nodeType":"YulIdentifier","src":"9269:1:22"},{"name":"sum","nativeSrc":"9272:3:22","nodeType":"YulIdentifier","src":"9272:3:22"}],"functionName":{"name":"gt","nativeSrc":"9266:2:22","nodeType":"YulIdentifier","src":"9266:2:22"},"nativeSrc":"9266:10:22","nodeType":"YulFunctionCall","src":"9266:10:22"},"nativeSrc":"9263:36:22","nodeType":"YulIf","src":"9263:36:22"}]},"name":"checked_add_t_uint256","nativeSrc":"9180:125:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"9211:1:22","nodeType":"YulTypedName","src":"9211:1:22","type":""},{"name":"y","nativeSrc":"9214:1:22","nodeType":"YulTypedName","src":"9214:1:22","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"9220:3:22","nodeType":"YulTypedName","src":"9220:3:22","type":""}],"src":"9180:125:22"},{"body":{"nativeSrc":"9342:95:22","nodeType":"YulBlock","src":"9342:95:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9359:1:22","nodeType":"YulLiteral","src":"9359:1:22","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"9366:3:22","nodeType":"YulLiteral","src":"9366:3:22","type":"","value":"224"},{"kind":"number","nativeSrc":"9371:10:22","nodeType":"YulLiteral","src":"9371:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"9362:3:22","nodeType":"YulIdentifier","src":"9362:3:22"},"nativeSrc":"9362:20:22","nodeType":"YulFunctionCall","src":"9362:20:22"}],"functionName":{"name":"mstore","nativeSrc":"9352:6:22","nodeType":"YulIdentifier","src":"9352:6:22"},"nativeSrc":"9352:31:22","nodeType":"YulFunctionCall","src":"9352:31:22"},"nativeSrc":"9352:31:22","nodeType":"YulExpressionStatement","src":"9352:31:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"9399:1:22","nodeType":"YulLiteral","src":"9399:1:22","type":"","value":"4"},{"kind":"number","nativeSrc":"9402:4:22","nodeType":"YulLiteral","src":"9402:4:22","type":"","value":"0x32"}],"functionName":{"name":"mstore","nativeSrc":"9392:6:22","nodeType":"YulIdentifier","src":"9392:6:22"},"nativeSrc":"9392:15:22","nodeType":"YulFunctionCall","src":"9392:15:22"},"nativeSrc":"9392:15:22","nodeType":"YulExpressionStatement","src":"9392:15:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"9423:1:22","nodeType":"YulLiteral","src":"9423:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"9426:4:22","nodeType":"YulLiteral","src":"9426:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"9416:6:22","nodeType":"YulIdentifier","src":"9416:6:22"},"nativeSrc":"9416:15:22","nodeType":"YulFunctionCall","src":"9416:15:22"},"nativeSrc":"9416:15:22","nodeType":"YulExpressionStatement","src":"9416:15:22"}]},"name":"panic_error_0x32","nativeSrc":"9310:127:22","nodeType":"YulFunctionDefinition","src":"9310:127:22"},{"body":{"nativeSrc":"9474:95:22","nodeType":"YulBlock","src":"9474:95:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9491:1:22","nodeType":"YulLiteral","src":"9491:1:22","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"9498:3:22","nodeType":"YulLiteral","src":"9498:3:22","type":"","value":"224"},{"kind":"number","nativeSrc":"9503:10:22","nodeType":"YulLiteral","src":"9503:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"9494:3:22","nodeType":"YulIdentifier","src":"9494:3:22"},"nativeSrc":"9494:20:22","nodeType":"YulFunctionCall","src":"9494:20:22"}],"functionName":{"name":"mstore","nativeSrc":"9484:6:22","nodeType":"YulIdentifier","src":"9484:6:22"},"nativeSrc":"9484:31:22","nodeType":"YulFunctionCall","src":"9484:31:22"},"nativeSrc":"9484:31:22","nodeType":"YulExpressionStatement","src":"9484:31:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"9531:1:22","nodeType":"YulLiteral","src":"9531:1:22","type":"","value":"4"},{"kind":"number","nativeSrc":"9534:4:22","nodeType":"YulLiteral","src":"9534:4:22","type":"","value":"0x31"}],"functionName":{"name":"mstore","nativeSrc":"9524:6:22","nodeType":"YulIdentifier","src":"9524:6:22"},"nativeSrc":"9524:15:22","nodeType":"YulFunctionCall","src":"9524:15:22"},"nativeSrc":"9524:15:22","nodeType":"YulExpressionStatement","src":"9524:15:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"9555:1:22","nodeType":"YulLiteral","src":"9555:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"9558:4:22","nodeType":"YulLiteral","src":"9558:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"9548:6:22","nodeType":"YulIdentifier","src":"9548:6:22"},"nativeSrc":"9548:15:22","nodeType":"YulFunctionCall","src":"9548:15:22"},"nativeSrc":"9548:15:22","nodeType":"YulExpressionStatement","src":"9548:15:22"}]},"name":"panic_error_0x31","nativeSrc":"9442:127:22","nodeType":"YulFunctionDefinition","src":"9442:127:22"},{"body":{"nativeSrc":"9673:87:22","nodeType":"YulBlock","src":"9673:87:22","statements":[{"nativeSrc":"9683:26:22","nodeType":"YulAssignment","src":"9683:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"9695:9:22","nodeType":"YulIdentifier","src":"9695:9:22"},{"kind":"number","nativeSrc":"9706:2:22","nodeType":"YulLiteral","src":"9706:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9691:3:22","nodeType":"YulIdentifier","src":"9691:3:22"},"nativeSrc":"9691:18:22","nodeType":"YulFunctionCall","src":"9691:18:22"},"variableNames":[{"name":"tail","nativeSrc":"9683:4:22","nodeType":"YulIdentifier","src":"9683:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"9725:9:22","nodeType":"YulIdentifier","src":"9725:9:22"},{"arguments":[{"name":"value0","nativeSrc":"9740:6:22","nodeType":"YulIdentifier","src":"9740:6:22"},{"kind":"number","nativeSrc":"9748:4:22","nodeType":"YulLiteral","src":"9748:4:22","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"9736:3:22","nodeType":"YulIdentifier","src":"9736:3:22"},"nativeSrc":"9736:17:22","nodeType":"YulFunctionCall","src":"9736:17:22"}],"functionName":{"name":"mstore","nativeSrc":"9718:6:22","nodeType":"YulIdentifier","src":"9718:6:22"},"nativeSrc":"9718:36:22","nodeType":"YulFunctionCall","src":"9718:36:22"},"nativeSrc":"9718:36:22","nodeType":"YulExpressionStatement","src":"9718:36:22"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint256__fromStack_reversed","nativeSrc":"9574:186:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9642:9:22","nodeType":"YulTypedName","src":"9642:9:22","type":""},{"name":"value0","nativeSrc":"9653:6:22","nodeType":"YulTypedName","src":"9653:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9664:4:22","nodeType":"YulTypedName","src":"9664:4:22","type":""}],"src":"9574:186:22"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_uint8(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_stringliteral_046732d5414f05ecf7eecf16cd2fa81fef56df3233d5bab3cae061b0d442ba1d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 53)\n        mstore(add(headStart, 64), \"This function can only be called\")\n        mstore(add(headStart, 96), \" by the owner address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_00e6c0e61855c07537c591862cc84232690f7fbd58ada30e5801a843b46d23e1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 69)\n        mstore(add(headStart, 64), \"The contract is already sealed, \")\n        mstore(add(headStart, 96), \"no modification of rights can be\")\n        mstore(add(headStart, 128), \" made\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_70663abecbb73251778bc3d21efd92dc5f7e553ae5bbf6ed615d3f6a93f02dec__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"No rights have been defined for \")\n        mstore(add(headStart, 96), \"this address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cf76a2966d01617b66d1809ad15b5c6b51fe81173232aead78b823940f0b89b8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 62)\n        mstore(add(headStart, 64), \"It is not possible to remove mor\")\n        mstore(add(headStart, 96), \"e rights than this address has\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint8(x, y) -> diff\n    {\n        diff := sub(and(x, 0xff), and(y, 0xff))\n        if gt(diff, 0xff) { panic_error_0x11() }\n    }\n    function checked_add_t_uint8(x, y) -> sum\n    {\n        sum := add(and(x, 0xff), and(y, 0xff))\n        if gt(sum, 0xff) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_035b512df0303c3c81b766e4199bc9ebb5c3b7e675aeebed76db1e1355e83003__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 84)\n        mstore(add(headStart, 64), \"The contract is not sealed. This\")\n        mstore(add(headStart, 96), \" transaction can only be done wi\")\n        mstore(add(headStart, 128), \"th a sealed contract\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_888a677fffff6c994ae843925886fd3ad03f257f1a2f6c3f94a5f52a42910183__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 77)\n        mstore(add(headStart, 64), \"This function cannot be called b\")\n        mstore(add(headStart, 96), \"y anyone who does not have right\")\n        mstore(add(headStart, 128), \"s to the song\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_10ee263c07356aa89342d85eac7ad45f2615c99e8450dda756bc5e9ec583fd1c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 62)\n        mstore(add(headStart, 64), \"Number of tokens for requested t\")\n        mstore(add(headStart, 96), \"ransfer must be greater than 0\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ff015140a35820efe946e6eca10609f6759241d73874b5516eef74c707161aec__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Number of tokens unavailable\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_449ba59efb4134ea4502563a81b53d2b67d0b309e434fc69970577cd2a7e9a7d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"insufficient value to listen the\")\n        mstore(add(headStart, 96), \" music rights\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_59548250c0c52fa555898b044e92abeaab02b814674a16ee51abb2007c9a83ed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Percentage of rights must be gre\")\n        mstore(add(headStart, 96), \"ater than 0\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_29dd189b09f51e6a215c7d90b9bc281fedbff2bce0a937c944c2d280eabe84d9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 70)\n        mstore(add(headStart, 64), \"percentage of entitlements remai\")\n        mstore(add(headStart, 96), \"ning is less than the requested \")\n        mstore(add(headStart, 128), \"amount\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_b66c433229ecbc090d4615d47ec9e73470355743da96bc3174634127fc19c754__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"insufficient value to purchase t\")\n        mstore(add(headStart, 96), \"he music rights\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_87d9762a6d93fc2b9c941e1ae13bb2fe779061bdcff987e2338ea0048a4e9011__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 65)\n        mstore(add(headStart, 64), \"The remaining divisions of right\")\n        mstore(add(headStart, 96), \"s must be 0 to seal this contrac\")\n        mstore(add(headStart, 128), \"t\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_0fc663d05a6bb57b3da0d21c1bcd326365e80a1353272fa5150359407637095a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 70)\n        mstore(add(headStart, 64), \"Insufficient Ether sent to buy t\")\n        mstore(add(headStart, 96), \"okens. Must have at least 0.0053\")\n        mstore(add(headStart, 128), \" Ether\")\n        tail := add(headStart, 160)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n}","id":22,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x102 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8E6B3AC4 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xBEE4F733 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xBEE4F733 EQ PUSH2 0x268 JUMPI DUP1 PUSH4 0xE4494A0F EQ PUSH2 0x2AA JUMPI DUP1 PUSH4 0xEBC1945B EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0xEFF13431 EQ PUSH2 0x2DA JUMPI DUP1 PUSH4 0xF7173526 EQ PUSH2 0x2F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8E6B3AC4 EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0x9650F289 EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0x98208484 EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0xB145FCD4 EQ PUSH2 0x260 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5E1B6191 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x5E1B6191 EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0x6BA5D079 EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0x76866222 EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x20D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3FF1E05B EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0x425432B1 EQ PUSH2 0x130 JUMPI DUP1 PUSH4 0x4B946CC9 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x5D0FAB84 EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x109 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SELFBALANCE JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11D PUSH2 0x14B CALLDATASIZE PUSH1 0x4 PUSH2 0x1185 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x169 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17D PUSH2 0x178 CALLDATASIZE PUSH1 0x4 PUSH2 0x11A7 JUMP JUMPDEST PUSH2 0x30A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x127 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x199 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AD PUSH2 0x1A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x11E4 JUMP JUMPDEST PUSH2 0x56C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x127 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17D PUSH2 0x1E0 CALLDATASIZE PUSH1 0x4 PUSH2 0x11E4 JUMP JUMPDEST PUSH2 0x596 JUMP JUMPDEST PUSH2 0x17D PUSH2 0x77E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17D PUSH2 0x208 CALLDATASIZE PUSH1 0x4 PUSH2 0x11A7 JUMP JUMPDEST PUSH2 0x89C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x219 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH2 0x1AD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x17D PUSH2 0xB14 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x241 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11D PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x257 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17D PUSH2 0xBF9 JUMP JUMPDEST PUSH2 0x17D PUSH2 0xCF4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x274 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x298 PUSH2 0x283 CALLDATASIZE PUSH1 0x4 PUSH2 0x1185 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x127 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11D PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH2 0x17D SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11D PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6 SLOAD PUSH2 0x298 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x340 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x337 SWAP1 PUSH2 0x11FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x363 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x337 SWAP1 PUSH2 0x1252 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 SUB PUSH2 0x3E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F207269676874732068617665206265656E20646566696E656420666F7220 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x746869732061646472657373 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x337 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF DUP1 DUP5 AND SWAP2 AND LT ISZERO PUSH2 0x476 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4974206973206E6F7420706F737369626C6520746F2072656D6F7665206D6F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6520726967687473207468616E20746869732061646472657373206861730000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x337 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x4A1 SWAP1 DUP5 SWAP1 PUSH1 0xFF AND PUSH2 0x12D3 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x4D7 SWAP2 SWAP1 PUSH2 0x12EC JUMP JUMPDEST DUP3 SLOAD PUSH2 0x100 SWAP3 SWAP1 SWAP3 EXP PUSH1 0xFF DUP2 DUP2 MUL NOT SWAP1 SWAP4 AND SWAP2 DUP4 AND MUL OR SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 AND SWAP1 SUB SWAP1 POP PUSH2 0x51E JUMPI PUSH2 0x51E DUP4 PUSH2 0xE83 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF DUP4 AND DUP2 MSTORE ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xE5C90D1F4D58FD7BC5C546521E874B223125D83F37BF4B35ADE1532E08A0FFF5 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x57C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND PUSH2 0x5BB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x337 SWAP1 PUSH2 0x1305 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 SUB PUSH2 0x5EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x337 SWAP1 PUSH2 0x137F JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x662 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E756D626572206F6620746F6B656E7320666F72207265717565737465642074 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x72616E73666572206D7573742062652067726561746572207468616E20300000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x337 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x6C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E756D626572206F6620746F6B656E7320756E617661696C61626C6500000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x337 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA3871EB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA3871EB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x712 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x736 SWAP2 SWAP1 PUSH2 0x13F2 JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x756 SWAP1 DUP5 SWAP1 PUSH2 0x1414 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x9 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x76F SWAP2 SWAP1 PUSH2 0x1414 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND PUSH2 0x7A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x337 SWAP1 PUSH2 0x1305 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD PUSH4 0x3B9ACA00 PUSH2 0x7B7 SWAP2 SWAP1 PUSH2 0x1427 JUMP JUMPDEST SWAP1 POP DUP1 CALLVALUE LT ISZERO PUSH2 0x81F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E73756666696369656E742076616C756520746F206C697374656E20746865 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x206D7573696320726967687473 PUSH1 0x98 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x337 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x82B DUP3 CALLVALUE PUSH2 0x1414 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE SWAP1 SWAP2 POP CALLER SWAP1 PUSH32 0x53F8FD6B05226233DE7AC193299B5CB02358FE734840D24F2631A5A07643CED5 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x40 MLOAD CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x892 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x337 SWAP1 PUSH2 0x11FD JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x8EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x337 SWAP1 PUSH2 0x1252 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0xFF AND GT PUSH2 0x953 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50657263656E74616765206F6620726967687473206D75737420626520677265 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x61746572207468616E203 PUSH1 0xAC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x337 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xFF SWAP1 DUP2 AND SWAP1 DUP4 AND GT ISZERO PUSH2 0x9E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x46 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x70657263656E74616765206F6620656E7469746C656D656E74732072656D6169 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E696E67206973206C657373207468616E207468652072657175657374656420 PUSH1 0x64 DUP3 ADD MSTORE PUSH6 0x185B5BDD5B9D PUSH1 0xD2 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x337 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 SUB PUSH2 0xA4F JUMPI PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xA7A SWAP1 DUP5 SWAP1 PUSH1 0xFF AND PUSH2 0x12EC JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xAB0 SWAP2 SWAP1 PUSH2 0x12D3 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x3DF476B3B37A3360A1B466487C0A06214A4E1D899E5C66A7AD379E503C2EA9E DUP5 PUSH1 0x40 MLOAD PUSH2 0x55A SWAP2 SWAP1 PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND PUSH2 0xB39 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x337 SWAP1 PUSH2 0x1305 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD PUSH4 0x3B9ACA00 PUSH2 0xB4D SWAP2 SWAP1 PUSH2 0x1427 JUMP JUMPDEST SWAP1 POP DUP1 CALLVALUE LT ISZERO PUSH2 0xBB7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E73756666696369656E742076616C756520746F2070757263686173652074 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x6865206D7573696320726967687473 PUSH1 0x88 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x337 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBC3 DUP3 CALLVALUE PUSH2 0x1414 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE SWAP1 SWAP2 POP CALLER SWAP1 PUSH32 0x4429633AB0A9F77B1BC61E2ED0E484B81B41823661C29DD1BA47C1B06882459D SWAP1 PUSH1 0x20 ADD PUSH2 0x85D JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC26 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x337 SWAP1 PUSH2 0x11FD JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xCA9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x41 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652072656D61696E696E67206469766973696F6E73206F66207269676874 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x73206D757374206265203020746F207365616C207468697320636F6E74726163 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0xFA SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x337 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE ADDRESS SWAP1 PUSH32 0x2BD58C1C32E360804CF66BB5628995E5689D64524F0203FDD547F47E1E4E6D71 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND PUSH2 0xD19 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x337 SWAP1 PUSH2 0x1305 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 SUB PUSH2 0xD4A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x337 SWAP1 PUSH2 0x137F JUMP JUMPDEST PUSH7 0x12D452694F4000 SELFBALANCE LT ISZERO PUSH2 0xDD6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x46 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742045746865722073656E7420746F206275792074 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F6B656E732E204D7573742068617665206174206C6561737420302E30303533 PUSH1 0x64 DUP3 ADD MSTORE PUSH6 0x1022BA3432B9 PUSH1 0xD1 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x337 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x917B1BF5 SELFBALANCE PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE29 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE4E SWAP2 SWAP1 PUSH2 0x13F2 JUMP JUMPDEST POP PUSH1 0x64 PUSH1 0x9 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE62 SWAP2 SWAP1 PUSH2 0x143E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xE72 SWAP1 POP PUSH1 0x64 PUSH2 0xF43 JUMP JUMPDEST POP PUSH2 0xE7B PUSH2 0xFC6 JUMP JUMPDEST POP PUSH1 0x1 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE8E DUP3 PUSH2 0x1111 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0xEA2 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1414 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xEB2 JUMPI PUSH2 0xEB2 PUSH2 0x1451 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0xEDE JUMPI PUSH2 0xEDE PUSH2 0x1451 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x7 DUP1 SLOAD DUP1 PUSH2 0xF1D JUMPI PUSH2 0xF1D PUSH2 0x1467 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF99 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFBD SWAP2 SWAP1 PUSH2 0x13F2 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0xE7B JUMPI PUSH1 0x5 PUSH1 0x0 PUSH1 0x7 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xFEB JUMPI PUSH2 0xFEB PUSH2 0x1451 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD DUP2 KECCAK256 SLOAD PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF SWAP1 SWAP3 AND SWAP3 PUSH1 0xA SWAP3 SWAP1 SWAP2 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0x1030 JUMPI PUSH2 0x1030 PUSH2 0x1451 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x1064 SWAP1 DUP5 SWAP1 PUSH2 0x143E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x7 DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0x107D JUMPI PUSH2 0x107D PUSH2 0x1451 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 PUSH32 0xF18C582FB18BAB8A0EFE761E8FDD548EAEF7B331B99E27696A6381ED38C451E SWAP3 PUSH1 0x5 SWAP3 SWAP1 DUP7 SWAP1 DUP2 LT PUSH2 0x10CE JUMPI PUSH2 0x10CE PUSH2 0x1451 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 ADD PUSH2 0xFCA JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x1164 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x113C JUMPI PUSH2 0x113C PUSH2 0x1451 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x115C JUMPI SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1115 JUMP JUMPDEST POP POP PUSH1 0x7 SLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x779 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1197 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11A0 DUP3 PUSH2 0x116E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11C3 DUP4 PUSH2 0x116E JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x11D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x35 SWAP1 DUP3 ADD MSTORE PUSH32 0x546869732066756E6374696F6E2063616E206F6E6C792062652063616C6C6564 PUSH1 0x40 DUP3 ADD MSTORE PUSH21 0x20627920746865206F776E65722061646472657373 PUSH1 0x58 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x45 SWAP1 DUP3 ADD MSTORE PUSH32 0x54686520636F6E747261637420697320616C7265616479207365616C65642C20 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6E6F206D6F64696669636174696F6E206F66207269676874732063616E206265 PUSH1 0x60 DUP3 ADD MSTORE PUSH5 0x206D616465 PUSH1 0xD8 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xFF DUP3 DUP2 AND DUP3 DUP3 AND SUB SWAP1 DUP2 GT ISZERO PUSH2 0x566 JUMPI PUSH2 0x566 PUSH2 0x12BD JUMP JUMPDEST PUSH1 0xFF DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP2 GT ISZERO PUSH2 0x566 JUMPI PUSH2 0x566 PUSH2 0x12BD JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x54 SWAP1 DUP3 ADD MSTORE PUSH32 0x54686520636F6E7472616374206973206E6F74207365616C65642E2054686973 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x207472616E73616374696F6E2063616E206F6E6C7920626520646F6E65207769 PUSH1 0x60 DUP3 ADD MSTORE PUSH20 0x1D1A0818481CD9585B19590818DBDB9D1C9858DD PUSH1 0x62 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x4D SWAP1 DUP3 ADD MSTORE PUSH32 0x546869732066756E6374696F6E2063616E6E6F742062652063616C6C65642062 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x7920616E796F6E652077686F20646F6573206E6F742068617665207269676874 PUSH1 0x60 DUP3 ADD MSTORE PUSH13 0x7320746F2074686520736F6E67 PUSH1 0x98 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1404 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x11A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x566 JUMPI PUSH2 0x566 PUSH2 0x12BD JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x566 JUMPI PUSH2 0x566 PUSH2 0x12BD JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x566 JUMPI PUSH2 0x566 PUSH2 0x12BD JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CHAINID CREATE SWAP5 SWAP9 TLOAD 0x27 BLOCKHASH 0xD6 BLOBBASEFEE PUSH17 0x9658E3DFC00DB94A64DD91AA078E30321 0xBD 0xEC 0xD0 DUP2 0x1F PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"86:7466:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7449:100;;;;;;;;;;-1:-1:-1;7521:21:20;7449:100;;;160:25:22;;;148:2;133:18;7449:100:20;;;;;;;;511:51;;;;;;;;;;-1:-1:-1;511:51:20;;;;;:::i;:::-;;;;;;;;;;;;;;2841:790;;;;;;;;;;-1:-1:-1;2841:790:20;;;;;:::i;:::-;;:::i;:::-;;;1078:14:22;;1071:22;1053:41;;1041:2;1026:18;2841:790:20;913:187:22;404:29:20;;;;;;;;;;-1:-1:-1;404:29:20;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1454:32:22;;;1436:51;;1424:2;1409:18;404:29:20;1290:203:22;5909:567:20;;;;;;;;;;-1:-1:-1;5909:567:20;;;;;:::i;:::-;;:::i;6985:410::-;;;:::i;1995:776::-;;;;;;;;;;-1:-1:-1;1995:776:20;;;;;:::i;:::-;;:::i;281:20::-;;;;;;;;;;-1:-1:-1;281:20:20;;;;-1:-1:-1;;;;;281:20:20;;;6521:424;;;:::i;236:38::-;;;;;;;;;;;;;;;;4329:295;;;;;;;;;;;;;:::i;4676:538::-;;;:::i;307:49::-;;;;;;;;;;-1:-1:-1;307:49:20;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1670:4:22;1658:17;;;1640:36;;1628:2;1613:18;307:49:20;1498:184:22;477:28:20;;;;;;;;;;;;;;;;439:32;;;;;;;;;;-1:-1:-1;439:32:20;;;;;;;;191:39;;;;;;;;;;;;;;;;362:36;;;;;;;;;;-1:-1:-1;362:36:20;;;;;;;;2841:790;1197:5;;2941:4;;-1:-1:-1;;;;;1197:5:20;1183:10;:19;1175:85;;;;-1:-1:-1;;;1175:85:20;;;;;;;:::i;:::-;;;;;;;;;2966:20:::1;::::0;::::1;;2965:21;2957:103;;;;-1:-1:-1::0;;;2957:103:20::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;3078:30:20;::::1;;::::0;;;:16:::1;:30;::::0;;;;;::::1;;:35:::0;;3070:92:::1;;;::::0;-1:-1:-1;;;3070:92:20;;2789:2:22;3070:92:20::1;::::0;::::1;2771:21:22::0;2828:2;2808:18;;;2801:30;2867:34;2847:18;;;2840:62;-1:-1:-1;;;2918:18:22;;;2911:42;2970:19;;3070:92:20::1;2587:408:22::0;3070:92:20::1;-1:-1:-1::0;;;;;3180:30:20;::::1;;::::0;;;:16:::1;:30;::::0;;;;;:52:::1;::::0;;::::1;:30:::0;::::1;:52;;3172:127;;;::::0;-1:-1:-1;;;3172:127:20;;3202:2:22;3172:127:20::1;::::0;::::1;3184:21:22::0;3241:2;3221:18;;;3214:30;3280:34;3260:18;;;3253:62;3351:32;3331:18;;;3324:60;3401:19;;3172:127:20::1;3000:426:22::0;3172:127:20::1;-1:-1:-1::0;;;;;3310:30:20;::::1;;::::0;;;:16:::1;:30;::::0;;;;:52;;3344:18;;3310:30;:52:::1;::::0;3344:18;;3310:52:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3399:18;3372:23;;:45;;;;;;;;;;;;;;;;:::i;:::-;::::0;;::::1;::::0;;;::::1;;::::0;;::::1;;::::0;;::::1;::::0;;::::1;;;::::0;;;-1:-1:-1;;;;;3431:30:20;::::1;-1:-1:-1::0;3431:30:20;;;:16:::1;:30;::::0;;;;;;;::::1;:35:::0;;;-1:-1:-1;3428:96:20::1;;3482:31;3500:12;3482:17;:31::i;:::-;3539:64;::::0;1670:4:22;1658:17;;1640:36;;3577:4:20::1;::::0;-1:-1:-1;;;;;3539:64:20;::::1;::::0;::::1;::::0;1628:2:22;1613:18;3539:64:20::1;;;;;;;;-1:-1:-1::0;3620:4:20::1;1270:1;2841:790:::0;;;;:::o;404:29::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;404:29:20;;-1:-1:-1;404:29:20;:::o;5909:567::-;1321:20;;5977:4;;1321:20;;1313:117;;;;-1:-1:-1;;;1313:117:20;;;;;;;:::i;:::-;6018:10:::1;6001:28;::::0;;;:16:::1;:28;::::0;;;;;::::1;;:33:::0;;5993:123:::1;;;;-1:-1:-1::0;;;5993:123:20::1;;;;;;;:::i;:::-;6143:1;6134:6;:10;6126:85;;;::::0;-1:-1:-1;;;6126:85:20;;5053:2:22;6126:85:20::1;::::0;::::1;5035:21:22::0;5092:2;5072:18;;;5065:30;5131:34;5111:18;;;5104:62;5202:32;5182:18;;;5175:60;5252:19;;6126:85:20::1;4851:426:22::0;6126:85:20::1;6246:10;6229:28;::::0;;;:16:::1;:28;::::0;;;;;:38;-1:-1:-1;6229:38:20::1;6221:79;;;::::0;-1:-1:-1;;;6221:79:20;;5484:2:22;6221:79:20::1;::::0;::::1;5466:21:22::0;5523:2;5503:18;;;5496:30;5562;5542:18;;;5535:58;5610:18;;6221:79:20::1;5282:352:22::0;6221:79:20::1;6311:19;::::0;:55:::1;::::0;-1:-1:-1;;;6311:55:20;;6347:10:::1;6311:55;::::0;::::1;5813:51:22::0;5880:18;;;5873:34;;;-1:-1:-1;;;;;6311:19:20;;::::1;::::0;:35:::1;::::0;5786:18:22;;6311:55:20::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;6393:10:20::1;6376:28;::::0;;;:16:::1;:28;::::0;;;;:38;;6408:6;;6376:28;:38:::1;::::0;6408:6;;6376:38:::1;:::i;:::-;;;;;;;;6441:6;6424:13;;:23;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;6465:4:20::1;::::0;-1:-1:-1;;1440:1:20::1;5909:567:::0;;;:::o;6985:410::-;1321:20;;7043:4;;1321:20;;1313:117;;;;-1:-1:-1;;;1313:117:20;;;;;;;:::i;:::-;7059:19:::1;7081:23;;7107:3;7081:29;;;;:::i;:::-;7059:51;;7141:11;7128:9;:24;;7120:82;;;::::0;-1:-1:-1;;;7120:82:20;;6708:2:22;7120:82:20::1;::::0;::::1;6690:21:22::0;6747:2;6727:18;;;6720:30;6786:34;6766:18;;;6759:62;-1:-1:-1;;;6837:18:22;;;6830:43;6890:19;;7120:82:20::1;6506:409:22::0;7120:82:20::1;7213:22;7238:23;7250:11:::0;7238:9:::1;:23;:::i;:::-;7276:28;::::0;7299:4:::1;1053:41:22::0;;7213:48:20;;-1:-1:-1;7287:10:20::1;::::0;7276:28:::1;::::0;1041:2:22;1026:18;7276:28:20::1;;;;;;;;7314:44;::::0;7322:10:::1;::::0;7314:44;::::1;;;::::0;7343:14;;7314:44:::1;::::0;;;7343:14;7322:10;7314:44;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;7384:4;7377:11;;;;6985:410:::0;:::o;1995:776::-;1197:5;;2093:4;;-1:-1:-1;;;;;1197:5:20;1183:10;:19;1175:85;;;;-1:-1:-1;;;1175:85:20;;;;;;;:::i;:::-;2118:20:::1;::::0;::::1;;2117:21;2109:103;;;;-1:-1:-1::0;;;2109:103:20::1;;;;;;;:::i;:::-;2251:1;2230:18;:22;;;2222:78;;;::::0;-1:-1:-1;;;2222:78:20;;7122:2:22;2222:78:20::1;::::0;::::1;7104:21:22::0;7161:2;7141:18;;;7134:30;7200:34;7180:18;;;7173:62;-1:-1:-1;;;7251:18:22;;;7244:41;7302:19;;2222:78:20::1;6920:407:22::0;2222:78:20::1;2340:23;::::0;::::1;::::0;;::::1;2318:45:::0;;::::1;;;2310:128;;;::::0;-1:-1:-1;;;2310:128:20;;7534:2:22;2310:128:20::1;::::0;::::1;7516:21:22::0;7573:2;7553:18;;;7546:30;7612:34;7592:18;;;7585:62;7683:34;7663:18;;;7656:62;-1:-1:-1;;;7734:19:22;;;7727:37;7781:19;;2310:128:20::1;7332:474:22::0;2310:128:20::1;-1:-1:-1::0;;;;;2453:30:20;::::1;;::::0;;;:16:::1;:30;::::0;;;;;::::1;;:35:::0;;2449:97:::1;;2504:12;:31:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;2504:31:20;;;;;::::1;::::0;;-1:-1:-1;;;;;;2504:31:20::1;-1:-1:-1::0;;;;;2504:31:20;::::1;;::::0;;2449:97:::1;-1:-1:-1::0;;;;;2557:30:20;::::1;;::::0;;;:16:::1;:30;::::0;;;;:52;;2591:18;;2557:30;:52:::1;::::0;2591:18;;2557:52:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2646:18;2619:23;;:45;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2716:4;-1:-1:-1::0;;;;;2680:62:20::1;2694:12;-1:-1:-1::0;;;;;2680:62:20::1;;2723:18;2680:62;;;;;1670:4:22::0;1658:17;;;;1640:36;;1628:2;1613:18;;1498:184;6521:424:20;1321:20;;6582:4;;1321:20;;1313:117;;;;-1:-1:-1;;;1313:117:20;;;;;;;:::i;:::-;6598:21:::1;6622:24;;6649:3;6622:30;;;;:::i;:::-;6598:54;;6683:13;6670:9;:26;;6662:86;;;::::0;-1:-1:-1;;;6662:86:20;;8013:2:22;6662:86:20::1;::::0;::::1;7995:21:22::0;8052:2;8032:18;;;8025:30;8091:34;8071:18;;;8064:62;-1:-1:-1;;;8142:18:22;;;8135:45;8197:19;;6662:86:20::1;7811:411:22::0;6662:86:20::1;6759:22;6784:25;6796:13:::0;6784:9:::1;:25;:::i;:::-;6824:30;::::0;6849:4:::1;1053:41:22::0;;6759:50:20;;-1:-1:-1;6837:10:20::1;::::0;6824:30:::1;::::0;1041:2:22;1026:18;6824:30:20::1;913:187:22::0;4329:295:20;1197:5;;4379:4;;-1:-1:-1;;;;;1197:5:20;1183:10;:19;1175:85;;;;-1:-1:-1;;;1175:85:20;;;;;;;:::i;:::-;4403:23:::1;::::0;::::1;;:28:::0;4395:106:::1;;;::::0;-1:-1:-1;;;4395:106:20;;8429:2:22;4395:106:20::1;::::0;::::1;8411:21:22::0;8468:2;8448:18;;;8441:30;8507:34;8487:18;;;8480:62;8578:34;8558:18;;;8551:62;-1:-1:-1;;;8629:19:22;;;8622:32;8671:19;;4395:106:20::1;8227:469:22::0;4395:106:20::1;4512:20;:27:::0;;-1:-1:-1;;4512:27:20::1;4535:4;4512:27:::0;;::::1;::::0;;;4554:42:::1;::::0;1053:41:22;;;4584:4:20::1;::::0;4554:42:::1;::::0;1041:2:22;1026:18;4554:42:20::1;;;;;;;-1:-1:-1::0;4613:4:20::1;4329:295:::0;:::o;4676:538::-;1321:20;;4740:4;;1321:20;;1313:117;;;;-1:-1:-1;;;1313:117:20;;;;;;;:::i;:::-;4781:10:::1;4764:28;::::0;;;:16:::1;:28;::::0;;;;;::::1;;:33:::0;;4756:123:::1;;;;-1:-1:-1::0;;;4756:123:20::1;;;;;;;:::i;:::-;4922:13;4897:21;:38;;4889:121;;;::::0;-1:-1:-1;;;4889:121:20;;8903:2:22;4889:121:20::1;::::0;::::1;8885:21:22::0;8942:2;8922:18;;;8915:30;8981:34;8961:18;;;8954:62;9052:34;9032:18;;;9025:62;-1:-1:-1;;;9103:19:22;;;9096:37;9150:19;;4889:121:20::1;8701:474:22::0;4889:121:20::1;5021:19;::::0;::::1;;;;;;-1:-1:-1::0;;;;;5021:19:20::1;-1:-1:-1::0;;;;;5021:44:20::1;;5073:21;5021:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5125:3;5108:13;;:20;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;5138:25:20::1;::::0;-1:-1:-1;5159:3:20::1;5138:20;:25::i;:::-;;5173:12;:10;:12::i;:::-;;5203:4;5196:11;;4676:538:::0;:::o;3689:205::-;3753:13;3769:19;3779:8;3769:9;:19::i;:::-;3821:12;3834:19;;3753:35;;-1:-1:-1;3821:12:20;3834:23;;3856:1;;3834:23;:::i;:::-;3821:37;;;;;;;;:::i;:::-;;;;;;;;;;;3799:12;:19;;-1:-1:-1;;;;;3821:37:20;;;;3812:5;;3799:19;;;;;;:::i;:::-;;;;;;;;;:59;;;;;-1:-1:-1;;;;;3799:59:20;;;;;-1:-1:-1;;;;;3799:59:20;;;;;;3869:12;:18;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;3869:18:20;;;;;-1:-1:-1;;;;;;3869:18:20;;;;;;-1:-1:-1;;3689:205:20:o;5285:173::-;5349:4;5365:19;;;5401;5365:65;;-1:-1:-1;;;5365:65:20;;-1:-1:-1;;;;;5401:19:20;;;5365:65;;;5813:51:22;5880:18;;;5873:34;;;5365:19:20;;;:27;;5786:18:22;;5365:65:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5447:4:20;;5285:173;-1:-1:-1;;5285:173:20:o;5542:320::-;5582:4;;5599:235;5623:12;:19;5619:23;;5599:235;;;5700:16;:33;5717:12;5730:1;5717:15;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;5717:15:20;5700:33;;;;;;;;;;;;;5680:12;:15;;5700:33;;;;;5663:16;;5717:15;;5680:12;5693:1;;5680:15;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;5680:15:20;5663:33;;;;;;;;;;;;:70;;:33;;5680:15;5663:70;;;;;:::i;:::-;;;;-1:-1:-1;;5772:12:20;:15;;5785:1;;5772:15;;;;;;:::i;:::-;;;;;;;;;;5806:12;:15;;-1:-1:-1;;;;;5772:15:20;;;;5758:65;;5789:16;;5806:12;5819:1;;5806:15;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;5806:15:20;5789:33;;;;;;;;;;;;;;;;5758:65;;5789:33;;;;1640:36:22;;1613:18;5758:65:20;;;;;;;5644:3;;5599:235;;3979:270;4039:7;;4058:148;4082:12;:19;4078:23;;4058:148;;;4145:8;-1:-1:-1;;;;;4126:27:20;:12;4139:1;4126:15;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;4126:15:20;:27;4122:74;;4180:1;3979:270;-1:-1:-1;;3979:270:20:o;4122:74::-;4103:3;;4058:148;;;-1:-1:-1;;4223:12:20;:19;;3979:270;-1:-1:-1;3979:270:20:o;196:173:22:-;264:20;;-1:-1:-1;;;;;313:31:22;;303:42;;293:70;;359:1;356;349:12;374:186;433:6;486:2;474:9;465:7;461:23;457:32;454:52;;;502:1;499;492:12;454:52;525:29;544:9;525:29;:::i;:::-;515:39;374:186;-1:-1:-1;;;374:186:22:o;565:343::-;631:6;639;692:2;680:9;671:7;667:23;663:32;660:52;;;708:1;705;698:12;660:52;731:29;750:9;731:29;:::i;:::-;721:39;;810:2;799:9;795:18;782:32;854:4;847:5;843:16;836:5;833:27;823:55;;874:1;871;864:12;823:55;897:5;887:15;;;565:343;;;;;:::o;1105:180::-;1164:6;1217:2;1205:9;1196:7;1192:23;1188:32;1185:52;;;1233:1;1230;1223:12;1185:52;-1:-1:-1;1256:23:22;;1105:180;-1:-1:-1;1105:180:22:o;1687:417::-;1889:2;1871:21;;;1928:2;1908:18;;;1901:30;1967:34;1962:2;1947:18;;1940:62;-1:-1:-1;;;2033:2:22;2018:18;;2011:51;2094:3;2079:19;;1687:417::o;2109:473::-;2311:2;2293:21;;;2350:2;2330:18;;;2323:30;2389:34;2384:2;2369:18;;2362:62;2460:34;2455:2;2440:18;;2433:62;-1:-1:-1;;;2526:3:22;2511:19;;2504:36;2572:3;2557:19;;2109:473::o;3431:127::-;3492:10;3487:3;3483:20;3480:1;3473:31;3523:4;3520:1;3513:15;3547:4;3544:1;3537:15;3563:151;3653:4;3646:12;;;3632;;;3628:31;;3671:14;;3668:40;;;3688:18;;:::i;3719:148::-;3807:4;3786:12;;;3800;;;3782:31;;3825:13;;3822:39;;;3841:18;;:::i;3872:488::-;4074:2;4056:21;;;4113:2;4093:18;;;4086:30;4152:34;4147:2;4132:18;;4125:62;4223:34;4218:2;4203:18;;4196:62;-1:-1:-1;;;4289:3:22;4274:19;;4267:51;4350:3;4335:19;;3872:488::o;4365:481::-;4567:2;4549:21;;;4606:2;4586:18;;;4579:30;4645:34;4640:2;4625:18;;4618:62;4716:34;4711:2;4696:18;;4689:62;-1:-1:-1;;;4782:3:22;4767:19;;4760:44;4836:3;4821:19;;4365:481::o;5918:277::-;5985:6;6038:2;6026:9;6017:7;6013:23;6009:32;6006:52;;;6054:1;6051;6044:12;6006:52;6086:9;6080:16;6139:5;6132:13;6125:21;6118:5;6115:32;6105:60;;6161:1;6158;6151:12;6200:128;6267:9;;;6288:11;;;6285:37;;;6302:18;;:::i;6333:168::-;6406:9;;;6437;;6454:15;;;6448:22;;6434:37;6424:71;;6475:18;;:::i;9180:125::-;9245:9;;;9266:10;;;9263:36;;;9279:18;;:::i;9310:127::-;9371:10;9366:3;9362:20;9359:1;9352:31;9402:4;9399:1;9392:15;9426:4;9423:1;9416:15;9442:127;9503:10;9498:3;9494:20;9491:1;9484:31;9534:4;9531:1;9524:15;9558:4;9555:1;9548:15"},"methodIdentifiers":{"assignRights(address,uint8)":"76866222","balanceTokens()":"e4494a0f","buy100OysterToken()":"b145fcd4","buyRightsMusic()":"8e6b3ac4","divisionOfRights(address)":"bee4f733","listenMusic()":"6ba5d079","musicContactIsSealed()":"ebc1945b","owner()":"8da5cb5b","remainingRightsDivision()":"f7173526","rightHolders(uint256)":"5d0fab84","rightPurchaseValueInGwei()":"eff13431","sealRights()":"98208484","sellOysterToken(uint256)":"5e1b6191","tokensPerAddress(address)":"425432b1","valueForListeningInGwei()":"9650f289","viewBalance()":"3ff1e05b","withdrawRights(address,uint8)":"4b946cc9"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract OysterToken\",\"name\":\"_oysterTokenContract\",\"type\":\"address\"},{\"internalType\":\"contract OysterVault\",\"name\":\"_oysterVaultContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_rightPurchaseValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_valueForListening\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addressRight\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addressThisMusicContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"percentageOfRights\",\"type\":\"uint8\"}],\"name\":\"assignedRight\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"hearAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"confirm\",\"type\":\"bool\"}],\"name\":\"musicHeard\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addressThisMusicContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"musicContactIsSealed\",\"type\":\"bool\"}],\"name\":\"musicWithSealedRights\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"purchaseAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"activated\",\"type\":\"bool\"}],\"name\":\"purchaseMade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addressHolderToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"}],\"name\":\"tokenAssigned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addressRight\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addressThisMusicContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"percentageOfRights\",\"type\":\"uint8\"}],\"name\":\"withdrawalRight\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addressRight\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"percentageOfRights\",\"type\":\"uint8\"}],\"name\":\"assignRights\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"balanceTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buy100OysterToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyRightsMusic\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"divisionOfRights\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listenMusic\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"musicContactIsSealed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"remainingRightsDivision\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rightHolders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rightPurchaseValueInGwei\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sealRights\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sellOysterToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokensPerAddress\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"valueForListeningInGwei\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"viewBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addressRight\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"percentageOfRights\",\"type\":\"uint8\"}],\"name\":\"withdrawRights\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MusicContract.sol\":\"MusicContract\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xaa7f0646f49ebe2606eeca169f85c56451bbaeeeb06265fa076a03369a25d1d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee931d4e832385765967efe6366dcc6d00d6a2d794f9c66ee38283c03882de9c\",\"dweb:/ipfs/QmR6SkuJGYxpQeLz38rBdghqaWqEPfzUsL9kBoXgEXKtbD\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x27dbc90e5136ffe46c04f7596fc2dbcc3acebd8d504da3d93fdb8496e6de04f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea8b92e4245d75a5579c10f22f118f7b4ba07c57341f181f0b2a85ff8663de3\",\"dweb:/ipfs/Qme3Ss5ByjmkxxkMdLpyu7fQ1PCtjNFH1wEFszt2BZePiG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a\",\"dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x10eb97d047f8d84fe263a02bb4a656ac6674f6679d74532cc37546289e073a9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e41287d40b0c46982f1083d40d32de2761f009c5c51627fe79a7feb0ab1cf5c\",\"dweb:/ipfs/Qme7dbh6HX3ZvUJdbQAcVqXkmyXyfcLiUZRhhon3cU6K8p\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/MusicContract.sol\":{\"keccak256\":\"0x89c98497af5af71d03e130b1891eb88e371d6056a70a8c4abecb7502d75831c5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d80a78bb10af468dc05e05e7485a5ce650d39df1287694d93c9d720bea4a13e\",\"dweb:/ipfs/QmSbAEGJMp4hBq6KBQASXx3buBt3KCz8BG3zAXM1tXYvpG\"]},\"contracts/OysterToken.sol\":{\"keccak256\":\"0x20584105d921d1d35c0820e7d6d888eb1d7c9934c74ca81a4dc3a78ec4570ad9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f1d35eb36921ee7ff351c7dcbb70d412498c4f0fcb85368726bf6c8d4f17c929\",\"dweb:/ipfs/QmZQsmrnfPjsNtTnKg1Ao7wngKNyefyemdsPd4z7q1BqDg\"]}},\"version\":1}"}},"contracts/OysterToken.sol":{"OysterToken":{"abi":[{"inputs":[{"internalType":"address","name":"initialOwner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"weiAmount","type":"uint256"}],"name":"WeiRefunded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"weiAmount","type":"uint256"}],"name":"transferViaTokenSale","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_address","type":"address"},{"indexed":false,"internalType":"bool","name":"valid","type":"bool"}],"name":"validatedMusicContract","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"buy100OSTToMusicContract","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mintToVault","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"holder","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"sellOysterToken","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"contract OysterVault","name":"_vault","type":"address"}],"name":"setVault","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"validMusicContracts","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"addressMusicContract","type":"address"}],"name":"validateMusicContracts","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"vault","outputs":[{"internalType":"contract OysterVault","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_3254":{"entryPoint":null,"id":3254,"parameterSlots":2,"returnSlots":0},"@_361":{"entryPoint":null,"id":361,"parameterSlots":2,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_7679":{"entryPoint":null,"id":7679,"parameterSlots":1,"returnSlots":0},"@_951":{"entryPoint":null,"id":951,"parameterSlots":1,"returnSlots":0},"@_buildDomainSeparator_3301":{"entryPoint":null,"id":3301,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_146":{"entryPoint":448,"id":146,"parameterSlots":1,"returnSlots":0},"@getStringSlot_1586":{"entryPoint":null,"id":1586,"parameterSlots":1,"returnSlots":1},"@toShortStringWithFallback_1426":{"entryPoint":530,"id":1426,"parameterSlots":2,"returnSlots":1},"@toShortString_1328":{"entryPoint":581,"id":1328,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":643,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1040,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":771,"id":null,"parameterSlots":3,"returnSlots":0},"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32":{"entryPoint":1118,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":850,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":713,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":691,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:4483:22","nodeType":"YulBlock","src":"0:4483:22","statements":[{"nativeSrc":"6:3:22","nodeType":"YulBlock","src":"6:3:22","statements":[]},{"body":{"nativeSrc":"95:209:22","nodeType":"YulBlock","src":"95:209:22","statements":[{"body":{"nativeSrc":"141:16:22","nodeType":"YulBlock","src":"141:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"150:1:22","nodeType":"YulLiteral","src":"150:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"153:1:22","nodeType":"YulLiteral","src":"153:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"143:6:22","nodeType":"YulIdentifier","src":"143:6:22"},"nativeSrc":"143:12:22","nodeType":"YulFunctionCall","src":"143:12:22"},"nativeSrc":"143:12:22","nodeType":"YulExpressionStatement","src":"143:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"116:7:22","nodeType":"YulIdentifier","src":"116:7:22"},{"name":"headStart","nativeSrc":"125:9:22","nodeType":"YulIdentifier","src":"125:9:22"}],"functionName":{"name":"sub","nativeSrc":"112:3:22","nodeType":"YulIdentifier","src":"112:3:22"},"nativeSrc":"112:23:22","nodeType":"YulFunctionCall","src":"112:23:22"},{"kind":"number","nativeSrc":"137:2:22","nodeType":"YulLiteral","src":"137:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"108:3:22","nodeType":"YulIdentifier","src":"108:3:22"},"nativeSrc":"108:32:22","nodeType":"YulFunctionCall","src":"108:32:22"},"nativeSrc":"105:52:22","nodeType":"YulIf","src":"105:52:22"},{"nativeSrc":"166:29:22","nodeType":"YulVariableDeclaration","src":"166:29:22","value":{"arguments":[{"name":"headStart","nativeSrc":"185:9:22","nodeType":"YulIdentifier","src":"185:9:22"}],"functionName":{"name":"mload","nativeSrc":"179:5:22","nodeType":"YulIdentifier","src":"179:5:22"},"nativeSrc":"179:16:22","nodeType":"YulFunctionCall","src":"179:16:22"},"variables":[{"name":"value","nativeSrc":"170:5:22","nodeType":"YulTypedName","src":"170:5:22","type":""}]},{"body":{"nativeSrc":"258:16:22","nodeType":"YulBlock","src":"258:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"267:1:22","nodeType":"YulLiteral","src":"267:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"270:1:22","nodeType":"YulLiteral","src":"270:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"260:6:22","nodeType":"YulIdentifier","src":"260:6:22"},"nativeSrc":"260:12:22","nodeType":"YulFunctionCall","src":"260:12:22"},"nativeSrc":"260:12:22","nodeType":"YulExpressionStatement","src":"260:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"217:5:22","nodeType":"YulIdentifier","src":"217:5:22"},{"arguments":[{"name":"value","nativeSrc":"228:5:22","nodeType":"YulIdentifier","src":"228:5:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"243:3:22","nodeType":"YulLiteral","src":"243:3:22","type":"","value":"160"},{"kind":"number","nativeSrc":"248:1:22","nodeType":"YulLiteral","src":"248:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"239:3:22","nodeType":"YulIdentifier","src":"239:3:22"},"nativeSrc":"239:11:22","nodeType":"YulFunctionCall","src":"239:11:22"},{"kind":"number","nativeSrc":"252:1:22","nodeType":"YulLiteral","src":"252:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"235:3:22","nodeType":"YulIdentifier","src":"235:3:22"},"nativeSrc":"235:19:22","nodeType":"YulFunctionCall","src":"235:19:22"}],"functionName":{"name":"and","nativeSrc":"224:3:22","nodeType":"YulIdentifier","src":"224:3:22"},"nativeSrc":"224:31:22","nodeType":"YulFunctionCall","src":"224:31:22"}],"functionName":{"name":"eq","nativeSrc":"214:2:22","nodeType":"YulIdentifier","src":"214:2:22"},"nativeSrc":"214:42:22","nodeType":"YulFunctionCall","src":"214:42:22"}],"functionName":{"name":"iszero","nativeSrc":"207:6:22","nodeType":"YulIdentifier","src":"207:6:22"},"nativeSrc":"207:50:22","nodeType":"YulFunctionCall","src":"207:50:22"},"nativeSrc":"204:70:22","nodeType":"YulIf","src":"204:70:22"},{"nativeSrc":"283:15:22","nodeType":"YulAssignment","src":"283:15:22","value":{"name":"value","nativeSrc":"293:5:22","nodeType":"YulIdentifier","src":"293:5:22"},"variableNames":[{"name":"value0","nativeSrc":"283:6:22","nodeType":"YulIdentifier","src":"283:6:22"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nativeSrc":"14:290:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"61:9:22","nodeType":"YulTypedName","src":"61:9:22","type":""},{"name":"dataEnd","nativeSrc":"72:7:22","nodeType":"YulTypedName","src":"72:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"84:6:22","nodeType":"YulTypedName","src":"84:6:22","type":""}],"src":"14:290:22"},{"body":{"nativeSrc":"341:95:22","nodeType":"YulBlock","src":"341:95:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"358:1:22","nodeType":"YulLiteral","src":"358:1:22","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"365:3:22","nodeType":"YulLiteral","src":"365:3:22","type":"","value":"224"},{"kind":"number","nativeSrc":"370:10:22","nodeType":"YulLiteral","src":"370:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"361:3:22","nodeType":"YulIdentifier","src":"361:3:22"},"nativeSrc":"361:20:22","nodeType":"YulFunctionCall","src":"361:20:22"}],"functionName":{"name":"mstore","nativeSrc":"351:6:22","nodeType":"YulIdentifier","src":"351:6:22"},"nativeSrc":"351:31:22","nodeType":"YulFunctionCall","src":"351:31:22"},"nativeSrc":"351:31:22","nodeType":"YulExpressionStatement","src":"351:31:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"398:1:22","nodeType":"YulLiteral","src":"398:1:22","type":"","value":"4"},{"kind":"number","nativeSrc":"401:4:22","nodeType":"YulLiteral","src":"401:4:22","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"391:6:22","nodeType":"YulIdentifier","src":"391:6:22"},"nativeSrc":"391:15:22","nodeType":"YulFunctionCall","src":"391:15:22"},"nativeSrc":"391:15:22","nodeType":"YulExpressionStatement","src":"391:15:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"422:1:22","nodeType":"YulLiteral","src":"422:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"425:4:22","nodeType":"YulLiteral","src":"425:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"415:6:22","nodeType":"YulIdentifier","src":"415:6:22"},"nativeSrc":"415:15:22","nodeType":"YulFunctionCall","src":"415:15:22"},"nativeSrc":"415:15:22","nodeType":"YulExpressionStatement","src":"415:15:22"}]},"name":"panic_error_0x41","nativeSrc":"309:127:22","nodeType":"YulFunctionDefinition","src":"309:127:22"},{"body":{"nativeSrc":"496:325:22","nodeType":"YulBlock","src":"496:325:22","statements":[{"nativeSrc":"506:22:22","nodeType":"YulAssignment","src":"506:22:22","value":{"arguments":[{"kind":"number","nativeSrc":"520:1:22","nodeType":"YulLiteral","src":"520:1:22","type":"","value":"1"},{"name":"data","nativeSrc":"523:4:22","nodeType":"YulIdentifier","src":"523:4:22"}],"functionName":{"name":"shr","nativeSrc":"516:3:22","nodeType":"YulIdentifier","src":"516:3:22"},"nativeSrc":"516:12:22","nodeType":"YulFunctionCall","src":"516:12:22"},"variableNames":[{"name":"length","nativeSrc":"506:6:22","nodeType":"YulIdentifier","src":"506:6:22"}]},{"nativeSrc":"537:38:22","nodeType":"YulVariableDeclaration","src":"537:38:22","value":{"arguments":[{"name":"data","nativeSrc":"567:4:22","nodeType":"YulIdentifier","src":"567:4:22"},{"kind":"number","nativeSrc":"573:1:22","nodeType":"YulLiteral","src":"573:1:22","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"563:3:22","nodeType":"YulIdentifier","src":"563:3:22"},"nativeSrc":"563:12:22","nodeType":"YulFunctionCall","src":"563:12:22"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"541:18:22","nodeType":"YulTypedName","src":"541:18:22","type":""}]},{"body":{"nativeSrc":"614:31:22","nodeType":"YulBlock","src":"614:31:22","statements":[{"nativeSrc":"616:27:22","nodeType":"YulAssignment","src":"616:27:22","value":{"arguments":[{"name":"length","nativeSrc":"630:6:22","nodeType":"YulIdentifier","src":"630:6:22"},{"kind":"number","nativeSrc":"638:4:22","nodeType":"YulLiteral","src":"638:4:22","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"626:3:22","nodeType":"YulIdentifier","src":"626:3:22"},"nativeSrc":"626:17:22","nodeType":"YulFunctionCall","src":"626:17:22"},"variableNames":[{"name":"length","nativeSrc":"616:6:22","nodeType":"YulIdentifier","src":"616:6:22"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"594:18:22","nodeType":"YulIdentifier","src":"594:18:22"}],"functionName":{"name":"iszero","nativeSrc":"587:6:22","nodeType":"YulIdentifier","src":"587:6:22"},"nativeSrc":"587:26:22","nodeType":"YulFunctionCall","src":"587:26:22"},"nativeSrc":"584:61:22","nodeType":"YulIf","src":"584:61:22"},{"body":{"nativeSrc":"704:111:22","nodeType":"YulBlock","src":"704:111:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"725:1:22","nodeType":"YulLiteral","src":"725:1:22","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"732:3:22","nodeType":"YulLiteral","src":"732:3:22","type":"","value":"224"},{"kind":"number","nativeSrc":"737:10:22","nodeType":"YulLiteral","src":"737:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"728:3:22","nodeType":"YulIdentifier","src":"728:3:22"},"nativeSrc":"728:20:22","nodeType":"YulFunctionCall","src":"728:20:22"}],"functionName":{"name":"mstore","nativeSrc":"718:6:22","nodeType":"YulIdentifier","src":"718:6:22"},"nativeSrc":"718:31:22","nodeType":"YulFunctionCall","src":"718:31:22"},"nativeSrc":"718:31:22","nodeType":"YulExpressionStatement","src":"718:31:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"769:1:22","nodeType":"YulLiteral","src":"769:1:22","type":"","value":"4"},{"kind":"number","nativeSrc":"772:4:22","nodeType":"YulLiteral","src":"772:4:22","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"762:6:22","nodeType":"YulIdentifier","src":"762:6:22"},"nativeSrc":"762:15:22","nodeType":"YulFunctionCall","src":"762:15:22"},"nativeSrc":"762:15:22","nodeType":"YulExpressionStatement","src":"762:15:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"797:1:22","nodeType":"YulLiteral","src":"797:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"800:4:22","nodeType":"YulLiteral","src":"800:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"790:6:22","nodeType":"YulIdentifier","src":"790:6:22"},"nativeSrc":"790:15:22","nodeType":"YulFunctionCall","src":"790:15:22"},"nativeSrc":"790:15:22","nodeType":"YulExpressionStatement","src":"790:15:22"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"660:18:22","nodeType":"YulIdentifier","src":"660:18:22"},{"arguments":[{"name":"length","nativeSrc":"683:6:22","nodeType":"YulIdentifier","src":"683:6:22"},{"kind":"number","nativeSrc":"691:2:22","nodeType":"YulLiteral","src":"691:2:22","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"680:2:22","nodeType":"YulIdentifier","src":"680:2:22"},"nativeSrc":"680:14:22","nodeType":"YulFunctionCall","src":"680:14:22"}],"functionName":{"name":"eq","nativeSrc":"657:2:22","nodeType":"YulIdentifier","src":"657:2:22"},"nativeSrc":"657:38:22","nodeType":"YulFunctionCall","src":"657:38:22"},"nativeSrc":"654:161:22","nodeType":"YulIf","src":"654:161:22"}]},"name":"extract_byte_array_length","nativeSrc":"441:380:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"476:4:22","nodeType":"YulTypedName","src":"476:4:22","type":""}],"returnVariables":[{"name":"length","nativeSrc":"485:6:22","nodeType":"YulTypedName","src":"485:6:22","type":""}],"src":"441:380:22"},{"body":{"nativeSrc":"882:65:22","nodeType":"YulBlock","src":"882:65:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"899:1:22","nodeType":"YulLiteral","src":"899:1:22","type":"","value":"0"},{"name":"ptr","nativeSrc":"902:3:22","nodeType":"YulIdentifier","src":"902:3:22"}],"functionName":{"name":"mstore","nativeSrc":"892:6:22","nodeType":"YulIdentifier","src":"892:6:22"},"nativeSrc":"892:14:22","nodeType":"YulFunctionCall","src":"892:14:22"},"nativeSrc":"892:14:22","nodeType":"YulExpressionStatement","src":"892:14:22"},{"nativeSrc":"915:26:22","nodeType":"YulAssignment","src":"915:26:22","value":{"arguments":[{"kind":"number","nativeSrc":"933:1:22","nodeType":"YulLiteral","src":"933:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"936:4:22","nodeType":"YulLiteral","src":"936:4:22","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"923:9:22","nodeType":"YulIdentifier","src":"923:9:22"},"nativeSrc":"923:18:22","nodeType":"YulFunctionCall","src":"923:18:22"},"variableNames":[{"name":"data","nativeSrc":"915:4:22","nodeType":"YulIdentifier","src":"915:4:22"}]}]},"name":"array_dataslot_string_storage","nativeSrc":"826:121:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"865:3:22","nodeType":"YulTypedName","src":"865:3:22","type":""}],"returnVariables":[{"name":"data","nativeSrc":"873:4:22","nodeType":"YulTypedName","src":"873:4:22","type":""}],"src":"826:121:22"},{"body":{"nativeSrc":"1033:437:22","nodeType":"YulBlock","src":"1033:437:22","statements":[{"body":{"nativeSrc":"1066:398:22","nodeType":"YulBlock","src":"1066:398:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1087:1:22","nodeType":"YulLiteral","src":"1087:1:22","type":"","value":"0"},{"name":"array","nativeSrc":"1090:5:22","nodeType":"YulIdentifier","src":"1090:5:22"}],"functionName":{"name":"mstore","nativeSrc":"1080:6:22","nodeType":"YulIdentifier","src":"1080:6:22"},"nativeSrc":"1080:16:22","nodeType":"YulFunctionCall","src":"1080:16:22"},"nativeSrc":"1080:16:22","nodeType":"YulExpressionStatement","src":"1080:16:22"},{"nativeSrc":"1109:30:22","nodeType":"YulVariableDeclaration","src":"1109:30:22","value":{"arguments":[{"kind":"number","nativeSrc":"1131:1:22","nodeType":"YulLiteral","src":"1131:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"1134:4:22","nodeType":"YulLiteral","src":"1134:4:22","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"1121:9:22","nodeType":"YulIdentifier","src":"1121:9:22"},"nativeSrc":"1121:18:22","nodeType":"YulFunctionCall","src":"1121:18:22"},"variables":[{"name":"data","nativeSrc":"1113:4:22","nodeType":"YulTypedName","src":"1113:4:22","type":""}]},{"nativeSrc":"1152:57:22","nodeType":"YulVariableDeclaration","src":"1152:57:22","value":{"arguments":[{"name":"data","nativeSrc":"1175:4:22","nodeType":"YulIdentifier","src":"1175:4:22"},{"arguments":[{"kind":"number","nativeSrc":"1185:1:22","nodeType":"YulLiteral","src":"1185:1:22","type":"","value":"5"},{"arguments":[{"name":"startIndex","nativeSrc":"1192:10:22","nodeType":"YulIdentifier","src":"1192:10:22"},{"kind":"number","nativeSrc":"1204:2:22","nodeType":"YulLiteral","src":"1204:2:22","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"1188:3:22","nodeType":"YulIdentifier","src":"1188:3:22"},"nativeSrc":"1188:19:22","nodeType":"YulFunctionCall","src":"1188:19:22"}],"functionName":{"name":"shr","nativeSrc":"1181:3:22","nodeType":"YulIdentifier","src":"1181:3:22"},"nativeSrc":"1181:27:22","nodeType":"YulFunctionCall","src":"1181:27:22"}],"functionName":{"name":"add","nativeSrc":"1171:3:22","nodeType":"YulIdentifier","src":"1171:3:22"},"nativeSrc":"1171:38:22","nodeType":"YulFunctionCall","src":"1171:38:22"},"variables":[{"name":"deleteStart","nativeSrc":"1156:11:22","nodeType":"YulTypedName","src":"1156:11:22","type":""}]},{"body":{"nativeSrc":"1246:23:22","nodeType":"YulBlock","src":"1246:23:22","statements":[{"nativeSrc":"1248:19:22","nodeType":"YulAssignment","src":"1248:19:22","value":{"name":"data","nativeSrc":"1263:4:22","nodeType":"YulIdentifier","src":"1263:4:22"},"variableNames":[{"name":"deleteStart","nativeSrc":"1248:11:22","nodeType":"YulIdentifier","src":"1248:11:22"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"1228:10:22","nodeType":"YulIdentifier","src":"1228:10:22"},{"kind":"number","nativeSrc":"1240:4:22","nodeType":"YulLiteral","src":"1240:4:22","type":"","value":"0x20"}],"functionName":{"name":"lt","nativeSrc":"1225:2:22","nodeType":"YulIdentifier","src":"1225:2:22"},"nativeSrc":"1225:20:22","nodeType":"YulFunctionCall","src":"1225:20:22"},"nativeSrc":"1222:47:22","nodeType":"YulIf","src":"1222:47:22"},{"nativeSrc":"1282:41:22","nodeType":"YulVariableDeclaration","src":"1282:41:22","value":{"arguments":[{"name":"data","nativeSrc":"1296:4:22","nodeType":"YulIdentifier","src":"1296:4:22"},{"arguments":[{"kind":"number","nativeSrc":"1306:1:22","nodeType":"YulLiteral","src":"1306:1:22","type":"","value":"5"},{"arguments":[{"name":"len","nativeSrc":"1313:3:22","nodeType":"YulIdentifier","src":"1313:3:22"},{"kind":"number","nativeSrc":"1318:2:22","nodeType":"YulLiteral","src":"1318:2:22","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"1309:3:22","nodeType":"YulIdentifier","src":"1309:3:22"},"nativeSrc":"1309:12:22","nodeType":"YulFunctionCall","src":"1309:12:22"}],"functionName":{"name":"shr","nativeSrc":"1302:3:22","nodeType":"YulIdentifier","src":"1302:3:22"},"nativeSrc":"1302:20:22","nodeType":"YulFunctionCall","src":"1302:20:22"}],"functionName":{"name":"add","nativeSrc":"1292:3:22","nodeType":"YulIdentifier","src":"1292:3:22"},"nativeSrc":"1292:31:22","nodeType":"YulFunctionCall","src":"1292:31:22"},"variables":[{"name":"_1","nativeSrc":"1286:2:22","nodeType":"YulTypedName","src":"1286:2:22","type":""}]},{"nativeSrc":"1336:24:22","nodeType":"YulVariableDeclaration","src":"1336:24:22","value":{"name":"deleteStart","nativeSrc":"1349:11:22","nodeType":"YulIdentifier","src":"1349:11:22"},"variables":[{"name":"start","nativeSrc":"1340:5:22","nodeType":"YulTypedName","src":"1340:5:22","type":""}]},{"body":{"nativeSrc":"1434:20:22","nodeType":"YulBlock","src":"1434:20:22","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"1443:5:22","nodeType":"YulIdentifier","src":"1443:5:22"},{"kind":"number","nativeSrc":"1450:1:22","nodeType":"YulLiteral","src":"1450:1:22","type":"","value":"0"}],"functionName":{"name":"sstore","nativeSrc":"1436:6:22","nodeType":"YulIdentifier","src":"1436:6:22"},"nativeSrc":"1436:16:22","nodeType":"YulFunctionCall","src":"1436:16:22"},"nativeSrc":"1436:16:22","nodeType":"YulExpressionStatement","src":"1436:16:22"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"1384:5:22","nodeType":"YulIdentifier","src":"1384:5:22"},{"name":"_1","nativeSrc":"1391:2:22","nodeType":"YulIdentifier","src":"1391:2:22"}],"functionName":{"name":"lt","nativeSrc":"1381:2:22","nodeType":"YulIdentifier","src":"1381:2:22"},"nativeSrc":"1381:13:22","nodeType":"YulFunctionCall","src":"1381:13:22"},"nativeSrc":"1373:81:22","nodeType":"YulForLoop","post":{"nativeSrc":"1395:26:22","nodeType":"YulBlock","src":"1395:26:22","statements":[{"nativeSrc":"1397:22:22","nodeType":"YulAssignment","src":"1397:22:22","value":{"arguments":[{"name":"start","nativeSrc":"1410:5:22","nodeType":"YulIdentifier","src":"1410:5:22"},{"kind":"number","nativeSrc":"1417:1:22","nodeType":"YulLiteral","src":"1417:1:22","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"1406:3:22","nodeType":"YulIdentifier","src":"1406:3:22"},"nativeSrc":"1406:13:22","nodeType":"YulFunctionCall","src":"1406:13:22"},"variableNames":[{"name":"start","nativeSrc":"1397:5:22","nodeType":"YulIdentifier","src":"1397:5:22"}]}]},"pre":{"nativeSrc":"1377:3:22","nodeType":"YulBlock","src":"1377:3:22","statements":[]},"src":"1373:81:22"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"1049:3:22","nodeType":"YulIdentifier","src":"1049:3:22"},{"kind":"number","nativeSrc":"1054:2:22","nodeType":"YulLiteral","src":"1054:2:22","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"1046:2:22","nodeType":"YulIdentifier","src":"1046:2:22"},"nativeSrc":"1046:11:22","nodeType":"YulFunctionCall","src":"1046:11:22"},"nativeSrc":"1043:421:22","nodeType":"YulIf","src":"1043:421:22"}]},"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"952:518:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"1005:5:22","nodeType":"YulTypedName","src":"1005:5:22","type":""},{"name":"len","nativeSrc":"1012:3:22","nodeType":"YulTypedName","src":"1012:3:22","type":""},{"name":"startIndex","nativeSrc":"1017:10:22","nodeType":"YulTypedName","src":"1017:10:22","type":""}],"src":"952:518:22"},{"body":{"nativeSrc":"1560:81:22","nodeType":"YulBlock","src":"1560:81:22","statements":[{"nativeSrc":"1570:65:22","nodeType":"YulAssignment","src":"1570:65:22","value":{"arguments":[{"arguments":[{"name":"data","nativeSrc":"1585:4:22","nodeType":"YulIdentifier","src":"1585:4:22"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1603:1:22","nodeType":"YulLiteral","src":"1603:1:22","type":"","value":"3"},{"name":"len","nativeSrc":"1606:3:22","nodeType":"YulIdentifier","src":"1606:3:22"}],"functionName":{"name":"shl","nativeSrc":"1599:3:22","nodeType":"YulIdentifier","src":"1599:3:22"},"nativeSrc":"1599:11:22","nodeType":"YulFunctionCall","src":"1599:11:22"},{"arguments":[{"kind":"number","nativeSrc":"1616:1:22","nodeType":"YulLiteral","src":"1616:1:22","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"1612:3:22","nodeType":"YulIdentifier","src":"1612:3:22"},"nativeSrc":"1612:6:22","nodeType":"YulFunctionCall","src":"1612:6:22"}],"functionName":{"name":"shr","nativeSrc":"1595:3:22","nodeType":"YulIdentifier","src":"1595:3:22"},"nativeSrc":"1595:24:22","nodeType":"YulFunctionCall","src":"1595:24:22"}],"functionName":{"name":"not","nativeSrc":"1591:3:22","nodeType":"YulIdentifier","src":"1591:3:22"},"nativeSrc":"1591:29:22","nodeType":"YulFunctionCall","src":"1591:29:22"}],"functionName":{"name":"and","nativeSrc":"1581:3:22","nodeType":"YulIdentifier","src":"1581:3:22"},"nativeSrc":"1581:40:22","nodeType":"YulFunctionCall","src":"1581:40:22"},{"arguments":[{"kind":"number","nativeSrc":"1627:1:22","nodeType":"YulLiteral","src":"1627:1:22","type":"","value":"1"},{"name":"len","nativeSrc":"1630:3:22","nodeType":"YulIdentifier","src":"1630:3:22"}],"functionName":{"name":"shl","nativeSrc":"1623:3:22","nodeType":"YulIdentifier","src":"1623:3:22"},"nativeSrc":"1623:11:22","nodeType":"YulFunctionCall","src":"1623:11:22"}],"functionName":{"name":"or","nativeSrc":"1578:2:22","nodeType":"YulIdentifier","src":"1578:2:22"},"nativeSrc":"1578:57:22","nodeType":"YulFunctionCall","src":"1578:57:22"},"variableNames":[{"name":"used","nativeSrc":"1570:4:22","nodeType":"YulIdentifier","src":"1570:4:22"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"1475:166:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"1537:4:22","nodeType":"YulTypedName","src":"1537:4:22","type":""},{"name":"len","nativeSrc":"1543:3:22","nodeType":"YulTypedName","src":"1543:3:22","type":""}],"returnVariables":[{"name":"used","nativeSrc":"1551:4:22","nodeType":"YulTypedName","src":"1551:4:22","type":""}],"src":"1475:166:22"},{"body":{"nativeSrc":"1742:1203:22","nodeType":"YulBlock","src":"1742:1203:22","statements":[{"nativeSrc":"1752:24:22","nodeType":"YulVariableDeclaration","src":"1752:24:22","value":{"arguments":[{"name":"src","nativeSrc":"1772:3:22","nodeType":"YulIdentifier","src":"1772:3:22"}],"functionName":{"name":"mload","nativeSrc":"1766:5:22","nodeType":"YulIdentifier","src":"1766:5:22"},"nativeSrc":"1766:10:22","nodeType":"YulFunctionCall","src":"1766:10:22"},"variables":[{"name":"newLen","nativeSrc":"1756:6:22","nodeType":"YulTypedName","src":"1756:6:22","type":""}]},{"body":{"nativeSrc":"1819:22:22","nodeType":"YulBlock","src":"1819:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"1821:16:22","nodeType":"YulIdentifier","src":"1821:16:22"},"nativeSrc":"1821:18:22","nodeType":"YulFunctionCall","src":"1821:18:22"},"nativeSrc":"1821:18:22","nodeType":"YulExpressionStatement","src":"1821:18:22"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"1791:6:22","nodeType":"YulIdentifier","src":"1791:6:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1807:2:22","nodeType":"YulLiteral","src":"1807:2:22","type":"","value":"64"},{"kind":"number","nativeSrc":"1811:1:22","nodeType":"YulLiteral","src":"1811:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1803:3:22","nodeType":"YulIdentifier","src":"1803:3:22"},"nativeSrc":"1803:10:22","nodeType":"YulFunctionCall","src":"1803:10:22"},{"kind":"number","nativeSrc":"1815:1:22","nodeType":"YulLiteral","src":"1815:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1799:3:22","nodeType":"YulIdentifier","src":"1799:3:22"},"nativeSrc":"1799:18:22","nodeType":"YulFunctionCall","src":"1799:18:22"}],"functionName":{"name":"gt","nativeSrc":"1788:2:22","nodeType":"YulIdentifier","src":"1788:2:22"},"nativeSrc":"1788:30:22","nodeType":"YulFunctionCall","src":"1788:30:22"},"nativeSrc":"1785:56:22","nodeType":"YulIf","src":"1785:56:22"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"1894:4:22","nodeType":"YulIdentifier","src":"1894:4:22"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"1932:4:22","nodeType":"YulIdentifier","src":"1932:4:22"}],"functionName":{"name":"sload","nativeSrc":"1926:5:22","nodeType":"YulIdentifier","src":"1926:5:22"},"nativeSrc":"1926:11:22","nodeType":"YulFunctionCall","src":"1926:11:22"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"1900:25:22","nodeType":"YulIdentifier","src":"1900:25:22"},"nativeSrc":"1900:38:22","nodeType":"YulFunctionCall","src":"1900:38:22"},{"name":"newLen","nativeSrc":"1940:6:22","nodeType":"YulIdentifier","src":"1940:6:22"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"1850:43:22","nodeType":"YulIdentifier","src":"1850:43:22"},"nativeSrc":"1850:97:22","nodeType":"YulFunctionCall","src":"1850:97:22"},"nativeSrc":"1850:97:22","nodeType":"YulExpressionStatement","src":"1850:97:22"},{"nativeSrc":"1956:18:22","nodeType":"YulVariableDeclaration","src":"1956:18:22","value":{"kind":"number","nativeSrc":"1973:1:22","nodeType":"YulLiteral","src":"1973:1:22","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"1960:9:22","nodeType":"YulTypedName","src":"1960:9:22","type":""}]},{"nativeSrc":"1983:17:22","nodeType":"YulAssignment","src":"1983:17:22","value":{"kind":"number","nativeSrc":"1996:4:22","nodeType":"YulLiteral","src":"1996:4:22","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"1983:9:22","nodeType":"YulIdentifier","src":"1983:9:22"}]},{"cases":[{"body":{"nativeSrc":"2046:642:22","nodeType":"YulBlock","src":"2046:642:22","statements":[{"nativeSrc":"2060:35:22","nodeType":"YulVariableDeclaration","src":"2060:35:22","value":{"arguments":[{"name":"newLen","nativeSrc":"2079:6:22","nodeType":"YulIdentifier","src":"2079:6:22"},{"arguments":[{"kind":"number","nativeSrc":"2091:2:22","nodeType":"YulLiteral","src":"2091:2:22","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"2087:3:22","nodeType":"YulIdentifier","src":"2087:3:22"},"nativeSrc":"2087:7:22","nodeType":"YulFunctionCall","src":"2087:7:22"}],"functionName":{"name":"and","nativeSrc":"2075:3:22","nodeType":"YulIdentifier","src":"2075:3:22"},"nativeSrc":"2075:20:22","nodeType":"YulFunctionCall","src":"2075:20:22"},"variables":[{"name":"loopEnd","nativeSrc":"2064:7:22","nodeType":"YulTypedName","src":"2064:7:22","type":""}]},{"nativeSrc":"2108:49:22","nodeType":"YulVariableDeclaration","src":"2108:49:22","value":{"arguments":[{"name":"slot","nativeSrc":"2152:4:22","nodeType":"YulIdentifier","src":"2152:4:22"}],"functionName":{"name":"array_dataslot_string_storage","nativeSrc":"2122:29:22","nodeType":"YulIdentifier","src":"2122:29:22"},"nativeSrc":"2122:35:22","nodeType":"YulFunctionCall","src":"2122:35:22"},"variables":[{"name":"dstPtr","nativeSrc":"2112:6:22","nodeType":"YulTypedName","src":"2112:6:22","type":""}]},{"nativeSrc":"2170:10:22","nodeType":"YulVariableDeclaration","src":"2170:10:22","value":{"kind":"number","nativeSrc":"2179:1:22","nodeType":"YulLiteral","src":"2179:1:22","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"2174:1:22","nodeType":"YulTypedName","src":"2174:1:22","type":""}]},{"body":{"nativeSrc":"2250:165:22","nodeType":"YulBlock","src":"2250:165:22","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"2275:6:22","nodeType":"YulIdentifier","src":"2275:6:22"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"2293:3:22","nodeType":"YulIdentifier","src":"2293:3:22"},{"name":"srcOffset","nativeSrc":"2298:9:22","nodeType":"YulIdentifier","src":"2298:9:22"}],"functionName":{"name":"add","nativeSrc":"2289:3:22","nodeType":"YulIdentifier","src":"2289:3:22"},"nativeSrc":"2289:19:22","nodeType":"YulFunctionCall","src":"2289:19:22"}],"functionName":{"name":"mload","nativeSrc":"2283:5:22","nodeType":"YulIdentifier","src":"2283:5:22"},"nativeSrc":"2283:26:22","nodeType":"YulFunctionCall","src":"2283:26:22"}],"functionName":{"name":"sstore","nativeSrc":"2268:6:22","nodeType":"YulIdentifier","src":"2268:6:22"},"nativeSrc":"2268:42:22","nodeType":"YulFunctionCall","src":"2268:42:22"},"nativeSrc":"2268:42:22","nodeType":"YulExpressionStatement","src":"2268:42:22"},{"nativeSrc":"2327:24:22","nodeType":"YulAssignment","src":"2327:24:22","value":{"arguments":[{"name":"dstPtr","nativeSrc":"2341:6:22","nodeType":"YulIdentifier","src":"2341:6:22"},{"kind":"number","nativeSrc":"2349:1:22","nodeType":"YulLiteral","src":"2349:1:22","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"2337:3:22","nodeType":"YulIdentifier","src":"2337:3:22"},"nativeSrc":"2337:14:22","nodeType":"YulFunctionCall","src":"2337:14:22"},"variableNames":[{"name":"dstPtr","nativeSrc":"2327:6:22","nodeType":"YulIdentifier","src":"2327:6:22"}]},{"nativeSrc":"2368:33:22","nodeType":"YulAssignment","src":"2368:33:22","value":{"arguments":[{"name":"srcOffset","nativeSrc":"2385:9:22","nodeType":"YulIdentifier","src":"2385:9:22"},{"kind":"number","nativeSrc":"2396:4:22","nodeType":"YulLiteral","src":"2396:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2381:3:22","nodeType":"YulIdentifier","src":"2381:3:22"},"nativeSrc":"2381:20:22","nodeType":"YulFunctionCall","src":"2381:20:22"},"variableNames":[{"name":"srcOffset","nativeSrc":"2368:9:22","nodeType":"YulIdentifier","src":"2368:9:22"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"2204:1:22","nodeType":"YulIdentifier","src":"2204:1:22"},{"name":"loopEnd","nativeSrc":"2207:7:22","nodeType":"YulIdentifier","src":"2207:7:22"}],"functionName":{"name":"lt","nativeSrc":"2201:2:22","nodeType":"YulIdentifier","src":"2201:2:22"},"nativeSrc":"2201:14:22","nodeType":"YulFunctionCall","src":"2201:14:22"},"nativeSrc":"2193:222:22","nodeType":"YulForLoop","post":{"nativeSrc":"2216:21:22","nodeType":"YulBlock","src":"2216:21:22","statements":[{"nativeSrc":"2218:17:22","nodeType":"YulAssignment","src":"2218:17:22","value":{"arguments":[{"name":"i","nativeSrc":"2227:1:22","nodeType":"YulIdentifier","src":"2227:1:22"},{"kind":"number","nativeSrc":"2230:4:22","nodeType":"YulLiteral","src":"2230:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2223:3:22","nodeType":"YulIdentifier","src":"2223:3:22"},"nativeSrc":"2223:12:22","nodeType":"YulFunctionCall","src":"2223:12:22"},"variableNames":[{"name":"i","nativeSrc":"2218:1:22","nodeType":"YulIdentifier","src":"2218:1:22"}]}]},"pre":{"nativeSrc":"2197:3:22","nodeType":"YulBlock","src":"2197:3:22","statements":[]},"src":"2193:222:22"},{"body":{"nativeSrc":"2463:166:22","nodeType":"YulBlock","src":"2463:166:22","statements":[{"nativeSrc":"2481:43:22","nodeType":"YulVariableDeclaration","src":"2481:43:22","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"2508:3:22","nodeType":"YulIdentifier","src":"2508:3:22"},{"name":"srcOffset","nativeSrc":"2513:9:22","nodeType":"YulIdentifier","src":"2513:9:22"}],"functionName":{"name":"add","nativeSrc":"2504:3:22","nodeType":"YulIdentifier","src":"2504:3:22"},"nativeSrc":"2504:19:22","nodeType":"YulFunctionCall","src":"2504:19:22"}],"functionName":{"name":"mload","nativeSrc":"2498:5:22","nodeType":"YulIdentifier","src":"2498:5:22"},"nativeSrc":"2498:26:22","nodeType":"YulFunctionCall","src":"2498:26:22"},"variables":[{"name":"lastValue","nativeSrc":"2485:9:22","nodeType":"YulTypedName","src":"2485:9:22","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"2548:6:22","nodeType":"YulIdentifier","src":"2548:6:22"},{"arguments":[{"name":"lastValue","nativeSrc":"2560:9:22","nodeType":"YulIdentifier","src":"2560:9:22"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2587:1:22","nodeType":"YulLiteral","src":"2587:1:22","type":"","value":"3"},{"name":"newLen","nativeSrc":"2590:6:22","nodeType":"YulIdentifier","src":"2590:6:22"}],"functionName":{"name":"shl","nativeSrc":"2583:3:22","nodeType":"YulIdentifier","src":"2583:3:22"},"nativeSrc":"2583:14:22","nodeType":"YulFunctionCall","src":"2583:14:22"},{"kind":"number","nativeSrc":"2599:3:22","nodeType":"YulLiteral","src":"2599:3:22","type":"","value":"248"}],"functionName":{"name":"and","nativeSrc":"2579:3:22","nodeType":"YulIdentifier","src":"2579:3:22"},"nativeSrc":"2579:24:22","nodeType":"YulFunctionCall","src":"2579:24:22"},{"arguments":[{"kind":"number","nativeSrc":"2609:1:22","nodeType":"YulLiteral","src":"2609:1:22","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"2605:3:22","nodeType":"YulIdentifier","src":"2605:3:22"},"nativeSrc":"2605:6:22","nodeType":"YulFunctionCall","src":"2605:6:22"}],"functionName":{"name":"shr","nativeSrc":"2575:3:22","nodeType":"YulIdentifier","src":"2575:3:22"},"nativeSrc":"2575:37:22","nodeType":"YulFunctionCall","src":"2575:37:22"}],"functionName":{"name":"not","nativeSrc":"2571:3:22","nodeType":"YulIdentifier","src":"2571:3:22"},"nativeSrc":"2571:42:22","nodeType":"YulFunctionCall","src":"2571:42:22"}],"functionName":{"name":"and","nativeSrc":"2556:3:22","nodeType":"YulIdentifier","src":"2556:3:22"},"nativeSrc":"2556:58:22","nodeType":"YulFunctionCall","src":"2556:58:22"}],"functionName":{"name":"sstore","nativeSrc":"2541:6:22","nodeType":"YulIdentifier","src":"2541:6:22"},"nativeSrc":"2541:74:22","nodeType":"YulFunctionCall","src":"2541:74:22"},"nativeSrc":"2541:74:22","nodeType":"YulExpressionStatement","src":"2541:74:22"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"2434:7:22","nodeType":"YulIdentifier","src":"2434:7:22"},{"name":"newLen","nativeSrc":"2443:6:22","nodeType":"YulIdentifier","src":"2443:6:22"}],"functionName":{"name":"lt","nativeSrc":"2431:2:22","nodeType":"YulIdentifier","src":"2431:2:22"},"nativeSrc":"2431:19:22","nodeType":"YulFunctionCall","src":"2431:19:22"},"nativeSrc":"2428:201:22","nodeType":"YulIf","src":"2428:201:22"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"2649:4:22","nodeType":"YulIdentifier","src":"2649:4:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2663:1:22","nodeType":"YulLiteral","src":"2663:1:22","type":"","value":"1"},{"name":"newLen","nativeSrc":"2666:6:22","nodeType":"YulIdentifier","src":"2666:6:22"}],"functionName":{"name":"shl","nativeSrc":"2659:3:22","nodeType":"YulIdentifier","src":"2659:3:22"},"nativeSrc":"2659:14:22","nodeType":"YulFunctionCall","src":"2659:14:22"},{"kind":"number","nativeSrc":"2675:1:22","nodeType":"YulLiteral","src":"2675:1:22","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"2655:3:22","nodeType":"YulIdentifier","src":"2655:3:22"},"nativeSrc":"2655:22:22","nodeType":"YulFunctionCall","src":"2655:22:22"}],"functionName":{"name":"sstore","nativeSrc":"2642:6:22","nodeType":"YulIdentifier","src":"2642:6:22"},"nativeSrc":"2642:36:22","nodeType":"YulFunctionCall","src":"2642:36:22"},"nativeSrc":"2642:36:22","nodeType":"YulExpressionStatement","src":"2642:36:22"}]},"nativeSrc":"2039:649:22","nodeType":"YulCase","src":"2039:649:22","value":{"kind":"number","nativeSrc":"2044:1:22","nodeType":"YulLiteral","src":"2044:1:22","type":"","value":"1"}},{"body":{"nativeSrc":"2705:234:22","nodeType":"YulBlock","src":"2705:234:22","statements":[{"nativeSrc":"2719:14:22","nodeType":"YulVariableDeclaration","src":"2719:14:22","value":{"kind":"number","nativeSrc":"2732:1:22","nodeType":"YulLiteral","src":"2732:1:22","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"2723:5:22","nodeType":"YulTypedName","src":"2723:5:22","type":""}]},{"body":{"nativeSrc":"2768:67:22","nodeType":"YulBlock","src":"2768:67:22","statements":[{"nativeSrc":"2786:35:22","nodeType":"YulAssignment","src":"2786:35:22","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"2805:3:22","nodeType":"YulIdentifier","src":"2805:3:22"},{"name":"srcOffset","nativeSrc":"2810:9:22","nodeType":"YulIdentifier","src":"2810:9:22"}],"functionName":{"name":"add","nativeSrc":"2801:3:22","nodeType":"YulIdentifier","src":"2801:3:22"},"nativeSrc":"2801:19:22","nodeType":"YulFunctionCall","src":"2801:19:22"}],"functionName":{"name":"mload","nativeSrc":"2795:5:22","nodeType":"YulIdentifier","src":"2795:5:22"},"nativeSrc":"2795:26:22","nodeType":"YulFunctionCall","src":"2795:26:22"},"variableNames":[{"name":"value","nativeSrc":"2786:5:22","nodeType":"YulIdentifier","src":"2786:5:22"}]}]},"condition":{"name":"newLen","nativeSrc":"2749:6:22","nodeType":"YulIdentifier","src":"2749:6:22"},"nativeSrc":"2746:89:22","nodeType":"YulIf","src":"2746:89:22"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"2855:4:22","nodeType":"YulIdentifier","src":"2855:4:22"},{"arguments":[{"name":"value","nativeSrc":"2914:5:22","nodeType":"YulIdentifier","src":"2914:5:22"},{"name":"newLen","nativeSrc":"2921:6:22","nodeType":"YulIdentifier","src":"2921:6:22"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"2861:52:22","nodeType":"YulIdentifier","src":"2861:52:22"},"nativeSrc":"2861:67:22","nodeType":"YulFunctionCall","src":"2861:67:22"}],"functionName":{"name":"sstore","nativeSrc":"2848:6:22","nodeType":"YulIdentifier","src":"2848:6:22"},"nativeSrc":"2848:81:22","nodeType":"YulFunctionCall","src":"2848:81:22"},"nativeSrc":"2848:81:22","nodeType":"YulExpressionStatement","src":"2848:81:22"}]},"nativeSrc":"2697:242:22","nodeType":"YulCase","src":"2697:242:22","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"2019:6:22","nodeType":"YulIdentifier","src":"2019:6:22"},{"kind":"number","nativeSrc":"2027:2:22","nodeType":"YulLiteral","src":"2027:2:22","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"2016:2:22","nodeType":"YulIdentifier","src":"2016:2:22"},"nativeSrc":"2016:14:22","nodeType":"YulFunctionCall","src":"2016:14:22"},"nativeSrc":"2009:930:22","nodeType":"YulSwitch","src":"2009:930:22"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"1646:1299:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"1727:4:22","nodeType":"YulTypedName","src":"1727:4:22","type":""},{"name":"src","nativeSrc":"1733:3:22","nodeType":"YulTypedName","src":"1733:3:22","type":""}],"src":"1646:1299:22"},{"body":{"nativeSrc":"3051:102:22","nodeType":"YulBlock","src":"3051:102:22","statements":[{"nativeSrc":"3061:26:22","nodeType":"YulAssignment","src":"3061:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"3073:9:22","nodeType":"YulIdentifier","src":"3073:9:22"},{"kind":"number","nativeSrc":"3084:2:22","nodeType":"YulLiteral","src":"3084:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3069:3:22","nodeType":"YulIdentifier","src":"3069:3:22"},"nativeSrc":"3069:18:22","nodeType":"YulFunctionCall","src":"3069:18:22"},"variableNames":[{"name":"tail","nativeSrc":"3061:4:22","nodeType":"YulIdentifier","src":"3061:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3103:9:22","nodeType":"YulIdentifier","src":"3103:9:22"},{"arguments":[{"name":"value0","nativeSrc":"3118:6:22","nodeType":"YulIdentifier","src":"3118:6:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3134:3:22","nodeType":"YulLiteral","src":"3134:3:22","type":"","value":"160"},{"kind":"number","nativeSrc":"3139:1:22","nodeType":"YulLiteral","src":"3139:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"3130:3:22","nodeType":"YulIdentifier","src":"3130:3:22"},"nativeSrc":"3130:11:22","nodeType":"YulFunctionCall","src":"3130:11:22"},{"kind":"number","nativeSrc":"3143:1:22","nodeType":"YulLiteral","src":"3143:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"3126:3:22","nodeType":"YulIdentifier","src":"3126:3:22"},"nativeSrc":"3126:19:22","nodeType":"YulFunctionCall","src":"3126:19:22"}],"functionName":{"name":"and","nativeSrc":"3114:3:22","nodeType":"YulIdentifier","src":"3114:3:22"},"nativeSrc":"3114:32:22","nodeType":"YulFunctionCall","src":"3114:32:22"}],"functionName":{"name":"mstore","nativeSrc":"3096:6:22","nodeType":"YulIdentifier","src":"3096:6:22"},"nativeSrc":"3096:51:22","nodeType":"YulFunctionCall","src":"3096:51:22"},"nativeSrc":"3096:51:22","nodeType":"YulExpressionStatement","src":"3096:51:22"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"2950:203:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3020:9:22","nodeType":"YulTypedName","src":"3020:9:22","type":""},{"name":"value0","nativeSrc":"3031:6:22","nodeType":"YulTypedName","src":"3031:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3042:4:22","nodeType":"YulTypedName","src":"3042:4:22","type":""}],"src":"2950:203:22"},{"body":{"nativeSrc":"3371:276:22","nodeType":"YulBlock","src":"3371:276:22","statements":[{"nativeSrc":"3381:27:22","nodeType":"YulAssignment","src":"3381:27:22","value":{"arguments":[{"name":"headStart","nativeSrc":"3393:9:22","nodeType":"YulIdentifier","src":"3393:9:22"},{"kind":"number","nativeSrc":"3404:3:22","nodeType":"YulLiteral","src":"3404:3:22","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"3389:3:22","nodeType":"YulIdentifier","src":"3389:3:22"},"nativeSrc":"3389:19:22","nodeType":"YulFunctionCall","src":"3389:19:22"},"variableNames":[{"name":"tail","nativeSrc":"3381:4:22","nodeType":"YulIdentifier","src":"3381:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3424:9:22","nodeType":"YulIdentifier","src":"3424:9:22"},{"name":"value0","nativeSrc":"3435:6:22","nodeType":"YulIdentifier","src":"3435:6:22"}],"functionName":{"name":"mstore","nativeSrc":"3417:6:22","nodeType":"YulIdentifier","src":"3417:6:22"},"nativeSrc":"3417:25:22","nodeType":"YulFunctionCall","src":"3417:25:22"},"nativeSrc":"3417:25:22","nodeType":"YulExpressionStatement","src":"3417:25:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3462:9:22","nodeType":"YulIdentifier","src":"3462:9:22"},{"kind":"number","nativeSrc":"3473:2:22","nodeType":"YulLiteral","src":"3473:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3458:3:22","nodeType":"YulIdentifier","src":"3458:3:22"},"nativeSrc":"3458:18:22","nodeType":"YulFunctionCall","src":"3458:18:22"},{"name":"value1","nativeSrc":"3478:6:22","nodeType":"YulIdentifier","src":"3478:6:22"}],"functionName":{"name":"mstore","nativeSrc":"3451:6:22","nodeType":"YulIdentifier","src":"3451:6:22"},"nativeSrc":"3451:34:22","nodeType":"YulFunctionCall","src":"3451:34:22"},"nativeSrc":"3451:34:22","nodeType":"YulExpressionStatement","src":"3451:34:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3505:9:22","nodeType":"YulIdentifier","src":"3505:9:22"},{"kind":"number","nativeSrc":"3516:2:22","nodeType":"YulLiteral","src":"3516:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3501:3:22","nodeType":"YulIdentifier","src":"3501:3:22"},"nativeSrc":"3501:18:22","nodeType":"YulFunctionCall","src":"3501:18:22"},{"name":"value2","nativeSrc":"3521:6:22","nodeType":"YulIdentifier","src":"3521:6:22"}],"functionName":{"name":"mstore","nativeSrc":"3494:6:22","nodeType":"YulIdentifier","src":"3494:6:22"},"nativeSrc":"3494:34:22","nodeType":"YulFunctionCall","src":"3494:34:22"},"nativeSrc":"3494:34:22","nodeType":"YulExpressionStatement","src":"3494:34:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3548:9:22","nodeType":"YulIdentifier","src":"3548:9:22"},{"kind":"number","nativeSrc":"3559:2:22","nodeType":"YulLiteral","src":"3559:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"3544:3:22","nodeType":"YulIdentifier","src":"3544:3:22"},"nativeSrc":"3544:18:22","nodeType":"YulFunctionCall","src":"3544:18:22"},{"name":"value3","nativeSrc":"3564:6:22","nodeType":"YulIdentifier","src":"3564:6:22"}],"functionName":{"name":"mstore","nativeSrc":"3537:6:22","nodeType":"YulIdentifier","src":"3537:6:22"},"nativeSrc":"3537:34:22","nodeType":"YulFunctionCall","src":"3537:34:22"},"nativeSrc":"3537:34:22","nodeType":"YulExpressionStatement","src":"3537:34:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3591:9:22","nodeType":"YulIdentifier","src":"3591:9:22"},{"kind":"number","nativeSrc":"3602:3:22","nodeType":"YulLiteral","src":"3602:3:22","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"3587:3:22","nodeType":"YulIdentifier","src":"3587:3:22"},"nativeSrc":"3587:19:22","nodeType":"YulFunctionCall","src":"3587:19:22"},{"arguments":[{"name":"value4","nativeSrc":"3612:6:22","nodeType":"YulIdentifier","src":"3612:6:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3628:3:22","nodeType":"YulLiteral","src":"3628:3:22","type":"","value":"160"},{"kind":"number","nativeSrc":"3633:1:22","nodeType":"YulLiteral","src":"3633:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"3624:3:22","nodeType":"YulIdentifier","src":"3624:3:22"},"nativeSrc":"3624:11:22","nodeType":"YulFunctionCall","src":"3624:11:22"},{"kind":"number","nativeSrc":"3637:1:22","nodeType":"YulLiteral","src":"3637:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"3620:3:22","nodeType":"YulIdentifier","src":"3620:3:22"},"nativeSrc":"3620:19:22","nodeType":"YulFunctionCall","src":"3620:19:22"}],"functionName":{"name":"and","nativeSrc":"3608:3:22","nodeType":"YulIdentifier","src":"3608:3:22"},"nativeSrc":"3608:32:22","nodeType":"YulFunctionCall","src":"3608:32:22"}],"functionName":{"name":"mstore","nativeSrc":"3580:6:22","nodeType":"YulIdentifier","src":"3580:6:22"},"nativeSrc":"3580:61:22","nodeType":"YulFunctionCall","src":"3580:61:22"},"nativeSrc":"3580:61:22","nodeType":"YulExpressionStatement","src":"3580:61:22"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nativeSrc":"3158:489:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3308:9:22","nodeType":"YulTypedName","src":"3308:9:22","type":""},{"name":"value4","nativeSrc":"3319:6:22","nodeType":"YulTypedName","src":"3319:6:22","type":""},{"name":"value3","nativeSrc":"3327:6:22","nodeType":"YulTypedName","src":"3327:6:22","type":""},{"name":"value2","nativeSrc":"3335:6:22","nodeType":"YulTypedName","src":"3335:6:22","type":""},{"name":"value1","nativeSrc":"3343:6:22","nodeType":"YulTypedName","src":"3343:6:22","type":""},{"name":"value0","nativeSrc":"3351:6:22","nodeType":"YulTypedName","src":"3351:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3362:4:22","nodeType":"YulTypedName","src":"3362:4:22","type":""}],"src":"3158:489:22"},{"body":{"nativeSrc":"3773:406:22","nodeType":"YulBlock","src":"3773:406:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3790:9:22","nodeType":"YulIdentifier","src":"3790:9:22"},{"kind":"number","nativeSrc":"3801:2:22","nodeType":"YulLiteral","src":"3801:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"3783:6:22","nodeType":"YulIdentifier","src":"3783:6:22"},"nativeSrc":"3783:21:22","nodeType":"YulFunctionCall","src":"3783:21:22"},"nativeSrc":"3783:21:22","nodeType":"YulExpressionStatement","src":"3783:21:22"},{"nativeSrc":"3813:27:22","nodeType":"YulVariableDeclaration","src":"3813:27:22","value":{"arguments":[{"name":"value0","nativeSrc":"3833:6:22","nodeType":"YulIdentifier","src":"3833:6:22"}],"functionName":{"name":"mload","nativeSrc":"3827:5:22","nodeType":"YulIdentifier","src":"3827:5:22"},"nativeSrc":"3827:13:22","nodeType":"YulFunctionCall","src":"3827:13:22"},"variables":[{"name":"length","nativeSrc":"3817:6:22","nodeType":"YulTypedName","src":"3817:6:22","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3860:9:22","nodeType":"YulIdentifier","src":"3860:9:22"},{"kind":"number","nativeSrc":"3871:2:22","nodeType":"YulLiteral","src":"3871:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3856:3:22","nodeType":"YulIdentifier","src":"3856:3:22"},"nativeSrc":"3856:18:22","nodeType":"YulFunctionCall","src":"3856:18:22"},{"name":"length","nativeSrc":"3876:6:22","nodeType":"YulIdentifier","src":"3876:6:22"}],"functionName":{"name":"mstore","nativeSrc":"3849:6:22","nodeType":"YulIdentifier","src":"3849:6:22"},"nativeSrc":"3849:34:22","nodeType":"YulFunctionCall","src":"3849:34:22"},"nativeSrc":"3849:34:22","nodeType":"YulExpressionStatement","src":"3849:34:22"},{"nativeSrc":"3892:10:22","nodeType":"YulVariableDeclaration","src":"3892:10:22","value":{"kind":"number","nativeSrc":"3901:1:22","nodeType":"YulLiteral","src":"3901:1:22","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"3896:1:22","nodeType":"YulTypedName","src":"3896:1:22","type":""}]},{"body":{"nativeSrc":"3961:90:22","nodeType":"YulBlock","src":"3961:90:22","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3990:9:22","nodeType":"YulIdentifier","src":"3990:9:22"},{"name":"i","nativeSrc":"4001:1:22","nodeType":"YulIdentifier","src":"4001:1:22"}],"functionName":{"name":"add","nativeSrc":"3986:3:22","nodeType":"YulIdentifier","src":"3986:3:22"},"nativeSrc":"3986:17:22","nodeType":"YulFunctionCall","src":"3986:17:22"},{"kind":"number","nativeSrc":"4005:2:22","nodeType":"YulLiteral","src":"4005:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3982:3:22","nodeType":"YulIdentifier","src":"3982:3:22"},"nativeSrc":"3982:26:22","nodeType":"YulFunctionCall","src":"3982:26:22"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"4024:6:22","nodeType":"YulIdentifier","src":"4024:6:22"},{"name":"i","nativeSrc":"4032:1:22","nodeType":"YulIdentifier","src":"4032:1:22"}],"functionName":{"name":"add","nativeSrc":"4020:3:22","nodeType":"YulIdentifier","src":"4020:3:22"},"nativeSrc":"4020:14:22","nodeType":"YulFunctionCall","src":"4020:14:22"},{"kind":"number","nativeSrc":"4036:2:22","nodeType":"YulLiteral","src":"4036:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4016:3:22","nodeType":"YulIdentifier","src":"4016:3:22"},"nativeSrc":"4016:23:22","nodeType":"YulFunctionCall","src":"4016:23:22"}],"functionName":{"name":"mload","nativeSrc":"4010:5:22","nodeType":"YulIdentifier","src":"4010:5:22"},"nativeSrc":"4010:30:22","nodeType":"YulFunctionCall","src":"4010:30:22"}],"functionName":{"name":"mstore","nativeSrc":"3975:6:22","nodeType":"YulIdentifier","src":"3975:6:22"},"nativeSrc":"3975:66:22","nodeType":"YulFunctionCall","src":"3975:66:22"},"nativeSrc":"3975:66:22","nodeType":"YulExpressionStatement","src":"3975:66:22"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"3922:1:22","nodeType":"YulIdentifier","src":"3922:1:22"},{"name":"length","nativeSrc":"3925:6:22","nodeType":"YulIdentifier","src":"3925:6:22"}],"functionName":{"name":"lt","nativeSrc":"3919:2:22","nodeType":"YulIdentifier","src":"3919:2:22"},"nativeSrc":"3919:13:22","nodeType":"YulFunctionCall","src":"3919:13:22"},"nativeSrc":"3911:140:22","nodeType":"YulForLoop","post":{"nativeSrc":"3933:19:22","nodeType":"YulBlock","src":"3933:19:22","statements":[{"nativeSrc":"3935:15:22","nodeType":"YulAssignment","src":"3935:15:22","value":{"arguments":[{"name":"i","nativeSrc":"3944:1:22","nodeType":"YulIdentifier","src":"3944:1:22"},{"kind":"number","nativeSrc":"3947:2:22","nodeType":"YulLiteral","src":"3947:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3940:3:22","nodeType":"YulIdentifier","src":"3940:3:22"},"nativeSrc":"3940:10:22","nodeType":"YulFunctionCall","src":"3940:10:22"},"variableNames":[{"name":"i","nativeSrc":"3935:1:22","nodeType":"YulIdentifier","src":"3935:1:22"}]}]},"pre":{"nativeSrc":"3915:3:22","nodeType":"YulBlock","src":"3915:3:22","statements":[]},"src":"3911:140:22"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4075:9:22","nodeType":"YulIdentifier","src":"4075:9:22"},{"name":"length","nativeSrc":"4086:6:22","nodeType":"YulIdentifier","src":"4086:6:22"}],"functionName":{"name":"add","nativeSrc":"4071:3:22","nodeType":"YulIdentifier","src":"4071:3:22"},"nativeSrc":"4071:22:22","nodeType":"YulFunctionCall","src":"4071:22:22"},{"kind":"number","nativeSrc":"4095:2:22","nodeType":"YulLiteral","src":"4095:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4067:3:22","nodeType":"YulIdentifier","src":"4067:3:22"},"nativeSrc":"4067:31:22","nodeType":"YulFunctionCall","src":"4067:31:22"},{"kind":"number","nativeSrc":"4100:1:22","nodeType":"YulLiteral","src":"4100:1:22","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"4060:6:22","nodeType":"YulIdentifier","src":"4060:6:22"},"nativeSrc":"4060:42:22","nodeType":"YulFunctionCall","src":"4060:42:22"},"nativeSrc":"4060:42:22","nodeType":"YulExpressionStatement","src":"4060:42:22"},{"nativeSrc":"4111:62:22","nodeType":"YulAssignment","src":"4111:62:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4127:9:22","nodeType":"YulIdentifier","src":"4127:9:22"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"4146:6:22","nodeType":"YulIdentifier","src":"4146:6:22"},{"kind":"number","nativeSrc":"4154:2:22","nodeType":"YulLiteral","src":"4154:2:22","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"4142:3:22","nodeType":"YulIdentifier","src":"4142:3:22"},"nativeSrc":"4142:15:22","nodeType":"YulFunctionCall","src":"4142:15:22"},{"arguments":[{"kind":"number","nativeSrc":"4163:2:22","nodeType":"YulLiteral","src":"4163:2:22","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"4159:3:22","nodeType":"YulIdentifier","src":"4159:3:22"},"nativeSrc":"4159:7:22","nodeType":"YulFunctionCall","src":"4159:7:22"}],"functionName":{"name":"and","nativeSrc":"4138:3:22","nodeType":"YulIdentifier","src":"4138:3:22"},"nativeSrc":"4138:29:22","nodeType":"YulFunctionCall","src":"4138:29:22"}],"functionName":{"name":"add","nativeSrc":"4123:3:22","nodeType":"YulIdentifier","src":"4123:3:22"},"nativeSrc":"4123:45:22","nodeType":"YulFunctionCall","src":"4123:45:22"},{"kind":"number","nativeSrc":"4170:2:22","nodeType":"YulLiteral","src":"4170:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4119:3:22","nodeType":"YulIdentifier","src":"4119:3:22"},"nativeSrc":"4119:54:22","nodeType":"YulFunctionCall","src":"4119:54:22"},"variableNames":[{"name":"tail","nativeSrc":"4111:4:22","nodeType":"YulIdentifier","src":"4111:4:22"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"3652:527:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3742:9:22","nodeType":"YulTypedName","src":"3742:9:22","type":""},{"name":"value0","nativeSrc":"3753:6:22","nodeType":"YulTypedName","src":"3753:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3764:4:22","nodeType":"YulTypedName","src":"3764:4:22","type":""}],"src":"3652:527:22"},{"body":{"nativeSrc":"4278:203:22","nodeType":"YulBlock","src":"4278:203:22","statements":[{"nativeSrc":"4288:26:22","nodeType":"YulVariableDeclaration","src":"4288:26:22","value":{"arguments":[{"name":"array","nativeSrc":"4308:5:22","nodeType":"YulIdentifier","src":"4308:5:22"}],"functionName":{"name":"mload","nativeSrc":"4302:5:22","nodeType":"YulIdentifier","src":"4302:5:22"},"nativeSrc":"4302:12:22","nodeType":"YulFunctionCall","src":"4302:12:22"},"variables":[{"name":"length","nativeSrc":"4292:6:22","nodeType":"YulTypedName","src":"4292:6:22","type":""}]},{"nativeSrc":"4323:32:22","nodeType":"YulAssignment","src":"4323:32:22","value":{"arguments":[{"arguments":[{"name":"array","nativeSrc":"4342:5:22","nodeType":"YulIdentifier","src":"4342:5:22"},{"kind":"number","nativeSrc":"4349:4:22","nodeType":"YulLiteral","src":"4349:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4338:3:22","nodeType":"YulIdentifier","src":"4338:3:22"},"nativeSrc":"4338:16:22","nodeType":"YulFunctionCall","src":"4338:16:22"}],"functionName":{"name":"mload","nativeSrc":"4332:5:22","nodeType":"YulIdentifier","src":"4332:5:22"},"nativeSrc":"4332:23:22","nodeType":"YulFunctionCall","src":"4332:23:22"},"variableNames":[{"name":"value","nativeSrc":"4323:5:22","nodeType":"YulIdentifier","src":"4323:5:22"}]},{"body":{"nativeSrc":"4392:83:22","nodeType":"YulBlock","src":"4392:83:22","statements":[{"nativeSrc":"4406:59:22","nodeType":"YulAssignment","src":"4406:59:22","value":{"arguments":[{"name":"value","nativeSrc":"4419:5:22","nodeType":"YulIdentifier","src":"4419:5:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4434:1:22","nodeType":"YulLiteral","src":"4434:1:22","type":"","value":"3"},{"arguments":[{"kind":"number","nativeSrc":"4441:4:22","nodeType":"YulLiteral","src":"4441:4:22","type":"","value":"0x20"},{"name":"length","nativeSrc":"4447:6:22","nodeType":"YulIdentifier","src":"4447:6:22"}],"functionName":{"name":"sub","nativeSrc":"4437:3:22","nodeType":"YulIdentifier","src":"4437:3:22"},"nativeSrc":"4437:17:22","nodeType":"YulFunctionCall","src":"4437:17:22"}],"functionName":{"name":"shl","nativeSrc":"4430:3:22","nodeType":"YulIdentifier","src":"4430:3:22"},"nativeSrc":"4430:25:22","nodeType":"YulFunctionCall","src":"4430:25:22"},{"arguments":[{"kind":"number","nativeSrc":"4461:1:22","nodeType":"YulLiteral","src":"4461:1:22","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"4457:3:22","nodeType":"YulIdentifier","src":"4457:3:22"},"nativeSrc":"4457:6:22","nodeType":"YulFunctionCall","src":"4457:6:22"}],"functionName":{"name":"shl","nativeSrc":"4426:3:22","nodeType":"YulIdentifier","src":"4426:3:22"},"nativeSrc":"4426:38:22","nodeType":"YulFunctionCall","src":"4426:38:22"}],"functionName":{"name":"and","nativeSrc":"4415:3:22","nodeType":"YulIdentifier","src":"4415:3:22"},"nativeSrc":"4415:50:22","nodeType":"YulFunctionCall","src":"4415:50:22"},"variableNames":[{"name":"value","nativeSrc":"4406:5:22","nodeType":"YulIdentifier","src":"4406:5:22"}]}]},"condition":{"arguments":[{"name":"length","nativeSrc":"4370:6:22","nodeType":"YulIdentifier","src":"4370:6:22"},{"kind":"number","nativeSrc":"4378:4:22","nodeType":"YulLiteral","src":"4378:4:22","type":"","value":"0x20"}],"functionName":{"name":"lt","nativeSrc":"4367:2:22","nodeType":"YulIdentifier","src":"4367:2:22"},"nativeSrc":"4367:16:22","nodeType":"YulFunctionCall","src":"4367:16:22"},"nativeSrc":"4364:111:22","nodeType":"YulIf","src":"4364:111:22"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32","nativeSrc":"4184:297:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"4258:5:22","nodeType":"YulTypedName","src":"4258:5:22","type":""}],"returnVariables":[{"name":"value","nativeSrc":"4268:5:22","nodeType":"YulTypedName","src":"4268:5:22","type":""}],"src":"4184:297:22"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), 32)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value\n    {\n        let length := mload(array)\n        value := mload(add(array, 0x20))\n        if lt(length, 0x20)\n        {\n            value := and(value, shl(shl(3, sub(0x20, length)), not(0)))\n        }\n    }\n}","id":22,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"61016060405234801561001157600080fd5b50604051611e57380380611e5783398101604081905261003091610283565b6040518060400160405280600b81526020016a27bcb9ba32b92a37b5b2b760a91b81525080604051806040016040528060018152602001603160f81b815250836040518060400160405280600b81526020016a27bcb9ba32b92a37b5b2b760a91b8152506040518060400160405280600381526020016213d4d560ea1b81525081600390816100bf9190610352565b5060046100cc8282610352565b5050506001600160a01b0381166100fe57604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b610107816101c0565b50610113826006610212565b61012052610122816007610212565b61014052815160208084019190912060e052815190820120610100524660a0526101af60e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c052506104829050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600060208351101561022e5761022783610245565b905061023f565b816102398482610352565b5060ff90505b92915050565b600080829050601f81511115610270578260405163305a27a960e01b81526004016100f59190610410565b805161027b8261045e565b179392505050565b60006020828403121561029557600080fd5b81516001600160a01b03811681146102ac57600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806102dd57607f821691505b6020821081036102fd57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561034d57806000526020600020601f840160051c8101602085101561032a5750805b601f840160051c820191505b8181101561034a5760008155600101610336565b50505b505050565b81516001600160401b0381111561036b5761036b6102b3565b61037f8161037984546102c9565b84610303565b6020601f8211600181146103b3576000831561039b5750848201515b600019600385901b1c1916600184901b17845561034a565b600084815260208120601f198516915b828110156103e357878501518255602094850194600190920191016103c3565b50848210156104015786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b602081526000825180602084015260005b8181101561043e5760208186018101516040868401015201610421565b506000604082850101526040601f19601f83011684010191505092915050565b805160208083015191908110156102fd5760001960209190910360031b1b16919050565b60805160a05160c05160e05161010051610120516101405161197b6104dc60003960006110840152600061105701526000610fad01526000610f8501526000610ee001526000610f0a01526000610f34015261197b6000f3fe6080604052600436106101405760003560e01c80637eb4cde7116100b6578063a9059cbb1161006f578063a9059cbb14610367578063d505accf14610387578063dd62ed3e146103a7578063f2fde38b146103ed578063f89fbe6a1461040d578063fbfa77cf1461043d57600080fd5b80637eb4cde7146102b05780637ecebe00146102d057806384b0196e146102f05780638da5cb5b14610318578063917b1bf51461034a57806395d89b411461035257600080fd5b806324c938371161010857806324c93837146101f2578063313ce567146102145780633644e515146102305780636817031b1461024557806370a0823114610265578063715018a61461029b57600080fd5b806306fdde0314610145578063095ea7b3146101705780630a3871eb146101a057806318160ddd146101b357806323b872dd146101d2575b600080fd5b34801561015157600080fd5b5061015a61045d565b60405161016791906115e4565b60405180910390f35b34801561017c57600080fd5b5061019061018b366004611613565b6104ef565b6040519015158152602001610167565b6101906101ae366004611613565b610509565b3480156101bf57600080fd5b506002545b604051908152602001610167565b3480156101de57600080fd5b506101906101ed36600461163f565b6106a2565b3480156101fe57600080fd5b5061021261020d366004611680565b6106c6565b005b34801561022057600080fd5b5060405160128152602001610167565b34801561023c57600080fd5b506101c4610737565b34801561025157600080fd5b50610212610260366004611699565b610746565b34801561027157600080fd5b506101c4610280366004611699565b6001600160a01b031660009081526020819052604090205490565b3480156102a757600080fd5b5061021261080b565b3480156102bc57600080fd5b506101906102cb366004611699565b61081f565b3480156102dc57600080fd5b506101c46102eb366004611699565b61088b565b3480156102fc57600080fd5b506103056108a9565b60405161016797969594939291906116b6565b34801561032457600080fd5b506005546001600160a01b03165b6040516001600160a01b039091168152602001610167565b6101906108ef565b34801561035e57600080fd5b5061015a610bea565b34801561037357600080fd5b50610190610382366004611613565b610bf9565b34801561039357600080fd5b506102126103a236600461174e565b610c07565b3480156103b357600080fd5b506101c46103c23660046117c5565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3480156103f957600080fd5b50610212610408366004611699565b610d41565b34801561041957600080fd5b50610190610428366004611699565b600a6020526000908152604090205460ff1681565b34801561044957600080fd5b50600954610332906001600160a01b031681565b60606003805461046c906117fe565b80601f0160208091040260200160405190810160405280929190818152602001828054610498906117fe565b80156104e55780601f106104ba576101008083540402835291602001916104e5565b820191906000526020600020905b8154815290600101906020018083116104c857829003601f168201915b5050505050905090565b6000336104fd818585610d7c565b60019150505b92915050565b336000908152600a602052604081205460ff166105415760405162461bcd60e51b815260040161053890611838565b60405180910390fd5b600082116105915760405162461bcd60e51b815260206004820181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f6044820152606401610538565b600954604051630357291360e41b8152336004820152602481018490526001600160a01b03909116906335729130906044016020604051808303816000875af11580156105e2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060691906118a1565b50652d79883d2000600061061a84836118d9565b6040519091506001600160a01b0386169082156108fc029083906000818181858888f19350505050158015610653573d6000803e3d6000fd5b50846001600160a01b03167f66002148a13b0a635b2dd6a9f2f5f8dd5a438fc69cb89f096b1cb6facf14b2ea8260405161068f91815260200190565b60405180910390a2506001949350505050565b6000336106b0858285610d8e565b6106bb858585610e0d565b506001949350505050565b6106ce610e6c565b6009546001600160a01b031661071e5760405162461bcd60e51b815260206004820152601560248201527415985d5b1d081859191c995cdcc81b9bdd081cd95d605a1b6044820152606401610538565b600954610734906001600160a01b031682610e99565b50565b6000610741610ed3565b905090565b61074e610e6c565b6001600160a01b03811661079c5760405162461bcd60e51b8152602060048201526015602482015274496e76616c6964207661756c74206164647265737360581b6044820152606401610538565b6009546001600160a01b0316156107e95760405162461bcd60e51b815260206004820152601160248201527015985d5b1d08185b1c9958591e481cd95d607a1b6044820152606401610538565b600980546001600160a01b0319166001600160a01b0392909216919091179055565b610813610e6c565b61081d6000610ffe565b565b6000610829610e6c565b6001600160a01b0382166000818152600a6020908152604091829020805460ff1916600190811790915591519182527f8828c88ef46029fc10c19655c4c67e16d76903c9fbd9170b8298d51194ed7508910160405180910390a2506001919050565b6001600160a01b038116600090815260086020526040812054610503565b6000606080600080600060606108bd611050565b6108c561107d565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b336000908152600a602052604081205460ff1661091e5760405162461bcd60e51b815260040161053890611838565b65b5e620f48000606461c35060008361093783856118d9565b61094590633b9aca006118d9565b61094f91906118f0565b9050803410156109ad5760405162461bcd60e51b815260206004820152602360248201527f496e73756666696369656e74205765692073656e7420746f2062757920746f6b604482015262656e7360e81b6064820152608401610538565b60006109b98234611903565b905083600960009054906101000a90046001600160a01b03166001600160a01b0316631f4aad2a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a0f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a339190611916565b1015610a935760405162461bcd60e51b815260206004820152602960248201527f4e6f7420656e6f75676820746f6b656e7320696e204f7973746572546f6b656e6044820152680818dbdb9d1c9858dd60ba1b6064820152608401610538565b8015610b3357604051600090339083908381818185875af1925050503d8060008114610adb576040519150601f19603f3d011682016040523d82523d6000602084013e610ae0565b606091505b5050905080610b315760405162461bcd60e51b815260206004820152601e60248201527f4661696c656420746f2073656e642072656d61696e696e6720457468657200006044820152606401610538565b505b600954604051632093325760e11b8152336004820152602481018690526001600160a01b039091169063412664ae906044016020604051808303816000875af1158015610b84573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba891906118a1565b5060405181815233907ffec51bd7a12167abbae91302df382bf09c27aab7a4fddd88f056c6ab1c9b8e209060200160405180910390a260019550505050505090565b60606004805461046c906117fe565b6000336104fd818585610e0d565b83421115610c2b5760405163313c898160e11b815260048101859052602401610538565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610c788c6001600160a01b0316600090815260086020526040902080546001810190915590565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610cd3826110aa565b90506000610ce3828787876110d7565b9050896001600160a01b0316816001600160a01b031614610d2a576040516325c0072360e11b81526001600160a01b0380831660048301528b166024820152604401610538565b610d358a8a8a610d7c565b50505050505050505050565b610d49610e6c565b6001600160a01b038116610d7357604051631e4fbdf760e01b815260006004820152602401610538565b61073481610ffe565b610d898383836001611105565b505050565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811015610e075781811015610df857604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610538565b610e0784848484036000611105565b50505050565b6001600160a01b038316610e3757604051634b637e8f60e11b815260006004820152602401610538565b6001600160a01b038216610e615760405163ec442f0560e01b815260006004820152602401610538565b610d898383836111da565b6005546001600160a01b0316331461081d5760405163118cdaa760e01b8152336004820152602401610538565b6001600160a01b038216610ec35760405163ec442f0560e01b815260006004820152602401610538565b610ecf600083836111da565b5050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015610f2c57507f000000000000000000000000000000000000000000000000000000000000000046145b15610f5657507f000000000000000000000000000000000000000000000000000000000000000090565b610741604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60606107417f00000000000000000000000000000000000000000000000000000000000000006006611304565b60606107417f00000000000000000000000000000000000000000000000000000000000000006007611304565b60006105036110b7610ed3565b8360405161190160f01b8152600281019290925260228201526042902090565b6000806000806110e9888888886113af565b9250925092506110f9828261147e565b50909695505050505050565b6001600160a01b03841661112f5760405163e602df0560e01b815260006004820152602401610538565b6001600160a01b03831661115957604051634a1406b160e11b815260006004820152602401610538565b6001600160a01b0380851660009081526001602090815260408083209387168352929052208290558015610e0757826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516111cc91815260200190565b60405180910390a350505050565b6001600160a01b0383166112055780600260008282546111fa91906118f0565b909155506112779050565b6001600160a01b038316600090815260208190526040902054818110156112585760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610538565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216611293576002805482900390556112b2565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516112f791815260200190565b60405180910390a3505050565b606060ff831461131e5761131783611537565b9050610503565b81805461132a906117fe565b80601f0160208091040260200160405190810160405280929190818152602001828054611356906117fe565b80156113a35780601f10611378576101008083540402835291602001916113a3565b820191906000526020600020905b81548152906001019060200180831161138657829003601f168201915b50505050509050610503565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411156113ea5750600091506003905082611474565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa15801561143e573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661146a57506000925060019150829050611474565b9250600091508190505b9450945094915050565b60008260038111156114925761149261192f565b0361149b575050565b60018260038111156114af576114af61192f565b036114cd5760405163f645eedf60e01b815260040160405180910390fd5b60028260038111156114e1576114e161192f565b036115025760405163fce698f760e01b815260048101829052602401610538565b60038260038111156115165761151661192f565b03610ecf576040516335e2f38360e21b815260048101829052602401610538565b6060600061154483611576565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b600060ff8216601f81111561050357604051632cd44ac360e21b815260040160405180910390fd5b6000815180845260005b818110156115c4576020818501810151868301820152016115a8565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006115f7602083018461159e565b9392505050565b6001600160a01b038116811461073457600080fd5b6000806040838503121561162657600080fd5b8235611631816115fe565b946020939093013593505050565b60008060006060848603121561165457600080fd5b833561165f816115fe565b9250602084013561166f816115fe565b929592945050506040919091013590565b60006020828403121561169257600080fd5b5035919050565b6000602082840312156116ab57600080fd5b81356115f7816115fe565b60ff60f81b8816815260e0602082015260006116d560e083018961159e565b82810360408401526116e7818961159e565b606084018890526001600160a01b038716608085015260a0840186905283810360c08501528451808252602080870193509091019060005b8181101561173d57835183526020938401939092019160010161171f565b50909b9a5050505050505050505050565b600080600080600080600060e0888a03121561176957600080fd5b8735611774816115fe565b96506020880135611784816115fe565b95506040880135945060608801359350608088013560ff811681146117a857600080fd5b9699959850939692959460a0840135945060c09093013592915050565b600080604083850312156117d857600080fd5b82356117e3816115fe565b915060208301356117f3816115fe565b809150509250929050565b600181811c9082168061181257607f821691505b60208210810361183257634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526043908201527f546869732066756e6374696f6e2063616e206f6e6c792062652063616c6c656460408201527f206279207468652076616c6964204d75736963436f6e7472616374206164647260608201526265737360e81b608082015260a00190565b6000602082840312156118b357600080fd5b815180151581146115f757600080fd5b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417610503576105036118c3565b80820180821115610503576105036118c3565b81810381811115610503576105036118c3565b60006020828403121561192857600080fd5b5051919050565b634e487b7160e01b600052602160045260246000fdfea264697066735822122053f4badff65e53809a299932d84bd5d10a0203321fae391d76ea2b49e0d1359964736f6c634300081c0033","opcodes":"PUSH2 0x160 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1E57 CODESIZE SUB DUP1 PUSH2 0x1E57 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x30 SWAP2 PUSH2 0x283 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH11 0x27BCB9BA32B92A37B5B2B7 PUSH1 0xA9 SHL DUP2 MSTORE POP DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x31 PUSH1 0xF8 SHL DUP2 MSTORE POP DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH11 0x27BCB9BA32B92A37B5B2B7 PUSH1 0xA9 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x13D4D5 PUSH1 0xEA SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xBF SWAP2 SWAP1 PUSH2 0x352 JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0xCC DUP3 DUP3 PUSH2 0x352 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xFE JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x107 DUP2 PUSH2 0x1C0 JUMP JUMPDEST POP PUSH2 0x113 DUP3 PUSH1 0x6 PUSH2 0x212 JUMP JUMPDEST PUSH2 0x120 MSTORE PUSH2 0x122 DUP2 PUSH1 0x7 PUSH2 0x212 JUMP JUMPDEST PUSH2 0x140 MSTORE DUP2 MLOAD PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0xE0 MSTORE DUP2 MLOAD SWAP1 DUP3 ADD KECCAK256 PUSH2 0x100 MSTORE CHAINID PUSH1 0xA0 MSTORE PUSH2 0x1AF PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x80 MSTORE POP POP ADDRESS PUSH1 0xC0 MSTORE POP PUSH2 0x482 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 MLOAD LT ISZERO PUSH2 0x22E JUMPI PUSH2 0x227 DUP4 PUSH2 0x245 JUMP JUMPDEST SWAP1 POP PUSH2 0x23F JUMP JUMPDEST DUP2 PUSH2 0x239 DUP5 DUP3 PUSH2 0x352 JUMP JUMPDEST POP PUSH1 0xFF SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x1F DUP2 MLOAD GT ISZERO PUSH2 0x270 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH4 0x305A27A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF5 SWAP2 SWAP1 PUSH2 0x410 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x27B DUP3 PUSH2 0x45E JUMP JUMPDEST OR SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x295 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2DD JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2FD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x34D JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x32A JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x34A JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x336 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x36B JUMPI PUSH2 0x36B PUSH2 0x2B3 JUMP JUMPDEST PUSH2 0x37F DUP2 PUSH2 0x379 DUP5 SLOAD PUSH2 0x2C9 JUMP JUMPDEST DUP5 PUSH2 0x303 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x3B3 JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0x39B JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x34A JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3E3 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x3C3 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x401 JUMPI DUP7 DUP5 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x43E JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD PUSH1 0x40 DUP7 DUP5 ADD ADD MSTORE ADD PUSH2 0x421 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP1 DUP4 ADD MLOAD SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x2FD JUMPI PUSH1 0x0 NOT PUSH1 0x20 SWAP2 SWAP1 SWAP2 SUB PUSH1 0x3 SHL SHL AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x197B PUSH2 0x4DC PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x1084 ADD MSTORE PUSH1 0x0 PUSH2 0x1057 ADD MSTORE PUSH1 0x0 PUSH2 0xFAD ADD MSTORE PUSH1 0x0 PUSH2 0xF85 ADD MSTORE PUSH1 0x0 PUSH2 0xEE0 ADD MSTORE PUSH1 0x0 PUSH2 0xF0A ADD MSTORE PUSH1 0x0 PUSH2 0xF34 ADD MSTORE PUSH2 0x197B PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x140 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7EB4CDE7 GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x367 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x387 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3A7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3ED JUMPI DUP1 PUSH4 0xF89FBE6A EQ PUSH2 0x40D JUMPI DUP1 PUSH4 0xFBFA77CF EQ PUSH2 0x43D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7EB4CDE7 EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x318 JUMPI DUP1 PUSH4 0x917B1BF5 EQ PUSH2 0x34A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x352 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x24C93837 GT PUSH2 0x108 JUMPI DUP1 PUSH4 0x24C93837 EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x6817031B EQ PUSH2 0x245 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x29B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0xA3871EB EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1D2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x151 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15A PUSH2 0x45D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x15E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x190 PUSH2 0x18B CALLDATASIZE PUSH1 0x4 PUSH2 0x1613 JUMP JUMPDEST PUSH2 0x4EF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x167 JUMP JUMPDEST PUSH2 0x190 PUSH2 0x1AE CALLDATASIZE PUSH1 0x4 PUSH2 0x1613 JUMP JUMPDEST PUSH2 0x509 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x167 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x190 PUSH2 0x1ED CALLDATASIZE PUSH1 0x4 PUSH2 0x163F JUMP JUMPDEST PUSH2 0x6A2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x212 PUSH2 0x20D CALLDATASIZE PUSH1 0x4 PUSH2 0x1680 JUMP JUMPDEST PUSH2 0x6C6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x167 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C4 PUSH2 0x737 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x251 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x212 PUSH2 0x260 CALLDATASIZE PUSH1 0x4 PUSH2 0x1699 JUMP JUMPDEST PUSH2 0x746 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x271 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C4 PUSH2 0x280 CALLDATASIZE PUSH1 0x4 PUSH2 0x1699 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x212 PUSH2 0x80B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x190 PUSH2 0x2CB CALLDATASIZE PUSH1 0x4 PUSH2 0x1699 JUMP JUMPDEST PUSH2 0x81F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C4 PUSH2 0x2EB CALLDATASIZE PUSH1 0x4 PUSH2 0x1699 JUMP JUMPDEST PUSH2 0x88B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x305 PUSH2 0x8A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x167 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x16B6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x324 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x167 JUMP JUMPDEST PUSH2 0x190 PUSH2 0x8EF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15A PUSH2 0xBEA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x373 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x190 PUSH2 0x382 CALLDATASIZE PUSH1 0x4 PUSH2 0x1613 JUMP JUMPDEST PUSH2 0xBF9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x393 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x212 PUSH2 0x3A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x174E JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C4 PUSH2 0x3C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x17C5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x212 PUSH2 0x408 CALLDATASIZE PUSH1 0x4 PUSH2 0x1699 JUMP JUMPDEST PUSH2 0xD41 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x419 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x190 PUSH2 0x428 CALLDATASIZE PUSH1 0x4 PUSH2 0x1699 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x449 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x9 SLOAD PUSH2 0x332 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x46C SWAP1 PUSH2 0x17FE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x498 SWAP1 PUSH2 0x17FE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4E5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4BA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4E5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4C8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x4FD DUP2 DUP6 DUP6 PUSH2 0xD7C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x541 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x538 SWAP1 PUSH2 0x1838 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x591 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x538 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0x3572913 PUSH1 0xE4 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x35729130 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5E2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x606 SWAP2 SWAP1 PUSH2 0x18A1 JUMP JUMPDEST POP PUSH6 0x2D79883D2000 PUSH1 0x0 PUSH2 0x61A DUP5 DUP4 PUSH2 0x18D9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x653 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x66002148A13B0A635B2DD6A9F2F5F8DD5A438FC69CB89F096B1CB6FACF14B2EA DUP3 PUSH1 0x40 MLOAD PUSH2 0x68F SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x6B0 DUP6 DUP3 DUP6 PUSH2 0xD8E JUMP JUMPDEST PUSH2 0x6BB DUP6 DUP6 DUP6 PUSH2 0xE0D JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x6CE PUSH2 0xE6C JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x71E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x15985D5B1D081859191C995CDCC81B9BDD081CD95D PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x538 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x734 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH2 0xE99 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x741 PUSH2 0xED3 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x74E PUSH2 0xE6C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x79C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x496E76616C6964207661756C742061646472657373 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x538 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x7E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x15985D5B1D08185B1C9958591E481CD95D PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x538 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x813 PUSH2 0xE6C JUMP JUMPDEST PUSH2 0x81D PUSH1 0x0 PUSH2 0xFFE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x829 PUSH2 0xE6C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x8828C88EF46029FC10C19655C4C67E16D76903C9FBD9170B8298D51194ED7508 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x503 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0x8BD PUSH2 0x1050 JUMP JUMPDEST PUSH2 0x8C5 PUSH2 0x107D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0xF PUSH1 0xF8 SHL SWAP12 SWAP4 SWAP11 POP SWAP2 SWAP9 POP CHAINID SWAP8 POP ADDRESS SWAP7 POP SWAP5 POP SWAP3 POP SWAP1 POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x91E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x538 SWAP1 PUSH2 0x1838 JUMP JUMPDEST PUSH6 0xB5E620F48000 PUSH1 0x64 PUSH2 0xC350 PUSH1 0x0 DUP4 PUSH2 0x937 DUP4 DUP6 PUSH2 0x18D9 JUMP JUMPDEST PUSH2 0x945 SWAP1 PUSH4 0x3B9ACA00 PUSH2 0x18D9 JUMP JUMPDEST PUSH2 0x94F SWAP2 SWAP1 PUSH2 0x18F0 JUMP JUMPDEST SWAP1 POP DUP1 CALLVALUE LT ISZERO PUSH2 0x9AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74205765692073656E7420746F2062757920746F6B PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x656E73 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x538 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9B9 DUP3 CALLVALUE PUSH2 0x1903 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1F4AAD2A PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA0F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA33 SWAP2 SWAP1 PUSH2 0x1916 JUMP JUMPDEST LT ISZERO PUSH2 0xA93 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F75676820746F6B656E7320696E204F7973746572546F6B656E PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x818DBDB9D1C9858DD PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x538 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB33 JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 CALLER SWAP1 DUP4 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xADB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xAE0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xB31 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661696C656420746F2073656E642072656D61696E696E672045746865720000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x538 JUMP JUMPDEST POP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0x20933257 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x412664AE SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB84 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBA8 SWAP2 SWAP1 PUSH2 0x18A1 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0xFEC51BD7A12167ABBAE91302DF382BF09C27AAB7A4FDDD88F056C6AB1C9B8E20 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP6 POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x46C SWAP1 PUSH2 0x17FE JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x4FD DUP2 DUP6 DUP6 PUSH2 0xE0D JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0xC2B JUMPI PUSH1 0x40 MLOAD PUSH4 0x313C8981 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x538 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0xC78 DUP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP1 DUP7 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0xE0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0xCD3 DUP3 PUSH2 0x10AA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xCE3 DUP3 DUP8 DUP8 DUP8 PUSH2 0x10D7 JUMP JUMPDEST SWAP1 POP DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xD2A JUMPI PUSH1 0x40 MLOAD PUSH4 0x25C00723 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE DUP12 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x538 JUMP JUMPDEST PUSH2 0xD35 DUP11 DUP11 DUP11 PUSH2 0xD7C JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xD49 PUSH2 0xE6C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xD73 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x538 JUMP JUMPDEST PUSH2 0x734 DUP2 PUSH2 0xFFE JUMP JUMPDEST PUSH2 0xD89 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1105 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 LT ISZERO PUSH2 0xE07 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xDF8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x538 JUMP JUMPDEST PUSH2 0xE07 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x1105 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xE37 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x538 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xE61 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x538 JUMP JUMPDEST PUSH2 0xD89 DUP4 DUP4 DUP4 PUSH2 0x11DA JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x81D JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x538 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xEC3 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x538 JUMP JUMPDEST PUSH2 0xECF PUSH1 0x0 DUP4 DUP4 PUSH2 0x11DA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 ISZERO PUSH2 0xF2C JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0xF56 JUMPI POP PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x741 PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x0 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x741 PUSH32 0x0 PUSH1 0x6 PUSH2 0x1304 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x741 PUSH32 0x0 PUSH1 0x7 PUSH2 0x1304 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x503 PUSH2 0x10B7 PUSH2 0xED3 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x10E9 DUP9 DUP9 DUP9 DUP9 PUSH2 0x13AF JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x10F9 DUP3 DUP3 PUSH2 0x147E JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x112F JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x538 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1159 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x538 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0xE07 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x11CC SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1205 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x11FA SWAP2 SWAP1 PUSH2 0x18F0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1277 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1258 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x538 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1293 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x12B2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x12F7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF DUP4 EQ PUSH2 0x131E JUMPI PUSH2 0x1317 DUP4 PUSH2 0x1537 JUMP JUMPDEST SWAP1 POP PUSH2 0x503 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x132A SWAP1 PUSH2 0x17FE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1356 SWAP1 PUSH2 0x17FE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x13A3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1378 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x13A3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1386 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH2 0x503 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT ISZERO PUSH2 0x13EA JUMPI POP PUSH1 0x0 SWAP2 POP PUSH1 0x3 SWAP1 POP DUP3 PUSH2 0x1474 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP11 SWAP1 MSTORE PUSH1 0xFF DUP10 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x143E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x146A JUMPI POP PUSH1 0x0 SWAP3 POP PUSH1 0x1 SWAP2 POP DUP3 SWAP1 POP PUSH2 0x1474 JUMP JUMPDEST SWAP3 POP PUSH1 0x0 SWAP2 POP DUP2 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1492 JUMPI PUSH2 0x1492 PUSH2 0x192F JUMP JUMPDEST SUB PUSH2 0x149B JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x14AF JUMPI PUSH2 0x14AF PUSH2 0x192F JUMP JUMPDEST SUB PUSH2 0x14CD JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x14E1 JUMPI PUSH2 0x14E1 PUSH2 0x192F JUMP JUMPDEST SUB PUSH2 0x1502 JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x538 JUMP JUMPDEST PUSH1 0x3 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1516 JUMPI PUSH2 0x1516 PUSH2 0x192F JUMP JUMPDEST SUB PUSH2 0xECF JUMPI PUSH1 0x40 MLOAD PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x538 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1544 DUP4 PUSH2 0x1576 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP POP SWAP2 DUP3 MSTORE POP PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x503 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CD44AC3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x15C4 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x15A8 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x15F7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x159E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x734 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1626 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1631 DUP2 PUSH2 0x15FE JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1654 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x165F DUP2 PUSH2 0x15FE JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x166F DUP2 PUSH2 0x15FE JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1692 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x15F7 DUP2 PUSH2 0x15FE JUMP JUMPDEST PUSH1 0xFF PUSH1 0xF8 SHL DUP9 AND DUP2 MSTORE PUSH1 0xE0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x16D5 PUSH1 0xE0 DUP4 ADD DUP10 PUSH2 0x159E JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x16E7 DUP2 DUP10 PUSH2 0x159E JUMP JUMPDEST PUSH1 0x60 DUP5 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD DUP7 SWAP1 MSTORE DUP4 DUP2 SUB PUSH1 0xC0 DUP6 ADD MSTORE DUP5 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP8 ADD SWAP4 POP SWAP1 SWAP2 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x173D JUMPI DUP4 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x171F JUMP JUMPDEST POP SWAP1 SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1769 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0x1774 DUP2 PUSH2 0x15FE JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH2 0x1784 DUP2 PUSH2 0x15FE JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x17A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 PUSH1 0xA0 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0xC0 SWAP1 SWAP4 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x17E3 DUP2 PUSH2 0x15FE JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x17F3 DUP2 PUSH2 0x15FE JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1812 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1832 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x43 SWAP1 DUP3 ADD MSTORE PUSH32 0x546869732066756E6374696F6E2063616E206F6E6C792062652063616C6C6564 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x206279207468652076616C6964204D75736963436F6E74726163742061646472 PUSH1 0x60 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x15F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x503 JUMPI PUSH2 0x503 PUSH2 0x18C3 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x503 JUMPI PUSH2 0x503 PUSH2 0x18C3 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x503 JUMPI PUSH2 0x503 PUSH2 0x18C3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1928 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE8 DELEGATECALL 0xBA 0xDF 0xF6 MCOPY MSTORE8 DUP1 SWAP11 0x29 SWAP10 ORIGIN 0xD8 0x4B 0xD5 0xD1 EXP MUL SUB ORIGIN 0x1F 0xAE CODECOPY SAR PUSH23 0xEA2B49E0D1359964736F6C634300081C00330000000000 ","sourceMap":"240:3260:21:-:0;;;771:145;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1577:52:5;;;;;;;;;;;;;-1:-1:-1;;;1577:52:5;;;1616:4;3328:431:15;;;;;;;;;;;;;-1:-1:-1;;;3328:431:15;;;859:12:21;1601:113:3;;;;;;;;;;;;;-1:-1:-1;;;1601:113:3;;;;;;;;;;;;;;;;-1:-1:-1;;;1601:113:3;;;1675:5;1667;:13;;;;;;:::i;:::-;-1:-1:-1;1690:7:3;:17;1700:7;1690;:17;:::i;:::-;-1:-1:-1;;;;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;3096:51:22;3069:18;;1322:31:0;;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;3401:45:15;:4;3432:13;3401:30;:45::i;:::-;3393:53;;3467:51;:7;3501:16;3467:33;:51::i;:::-;3456:62;;3542:22;;;;;;;;;;3528:36;;3591:25;;;;;;3574:42;;3644:13;3627:30;;3692:23;4226:11;;4239:14;;4204:80;;;2079:95;4204:80;;;3417:25:22;3458:18;;;3451:34;;;;3501:18;;;3494:34;4255:13:15;3544:18:22;;;3537:34;4278:4:15;3587:19:22;;;3580:61;4168:7:15;;3389:19:22;;4204:80:15;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;;3692:23;3667:48;;-1:-1:-1;;3747:4:15;3725:27;;-1:-1:-1;240:3260:21;;-1:-1:-1;240:3260:21;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;2887:340:11:-;2983:11;3032:2;3016:5;3010:19;:24;3006:215;;;3057:20;3071:5;3057:13;:20::i;:::-;3050:27;;;;3006:215;3134:5;3108:46;3149:5;3134;3108:46;:::i;:::-;-1:-1:-1;1390:66:11;;-1:-1:-1;3006:215:11;2887:340;;;;:::o;1708:286::-;1773:11;1796:17;1822:3;1796:30;;1854:2;1840:4;:11;:16;1836:72;;;1893:3;1879:18;;-1:-1:-1;;;1879:18:11;;;;;;;;:::i;1836:72::-;1974:11;;1957:13;1974:4;1957:13;:::i;:::-;1949:36;;1708:286;-1:-1:-1;;;1708:286:11:o;14:290:22:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:22;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:22:o;309:127::-;370:10;365:3;361:20;358:1;351:31;401:4;398:1;391:15;425:4;422:1;415:15;441:380;520:1;516:12;;;;563;;;584:61;;638:4;630:6;626:17;616:27;;584:61;691:2;683:6;680:14;660:18;657:38;654:161;;737:10;732:3;728:20;725:1;718:31;772:4;769:1;762:15;800:4;797:1;790:15;654:161;;441:380;;;:::o;952:518::-;1054:2;1049:3;1046:11;1043:421;;;1090:5;1087:1;1080:16;1134:4;1131:1;1121:18;1204:2;1192:10;1188:19;1185:1;1181:27;1175:4;1171:38;1240:4;1228:10;1225:20;1222:47;;;-1:-1:-1;1263:4:22;1222:47;1318:2;1313:3;1309:12;1306:1;1302:20;1296:4;1292:31;1282:41;;1373:81;1391:2;1384:5;1381:13;1373:81;;;1450:1;1436:16;;1417:1;1406:13;1373:81;;;1377:3;;1043:421;952:518;;;:::o;1646:1299::-;1766:10;;-1:-1:-1;;;;;1788:30:22;;1785:56;;;1821:18;;:::i;:::-;1850:97;1940:6;1900:38;1932:4;1926:11;1900:38;:::i;:::-;1894:4;1850:97;:::i;:::-;1996:4;2027:2;2016:14;;2044:1;2039:649;;;;2732:1;2749:6;2746:89;;;-1:-1:-1;2801:19:22;;;2795:26;2746:89;-1:-1:-1;;1603:1:22;1599:11;;;1595:24;1591:29;1581:40;1627:1;1623:11;;;1578:57;2848:81;;2009:930;;2039:649;899:1;892:14;;;936:4;923:18;;-1:-1:-1;;2075:20:22;;;2193:222;2207:7;2204:1;2201:14;2193:222;;;2289:19;;;2283:26;2268:42;;2396:4;2381:20;;;;2349:1;2337:14;;;;2223:12;2193:222;;;2197:3;2443:6;2434:7;2431:19;2428:201;;;2504:19;;;2498:26;-1:-1:-1;;2587:1:22;2583:14;;;2599:3;2579:24;2575:37;2571:42;2556:58;2541:74;;2428:201;-1:-1:-1;;;;2675:1:22;2659:14;;;2655:22;2642:36;;-1:-1:-1;1646:1299:22:o;3652:527::-;3801:2;3790:9;3783:21;3764:4;3833:6;3827:13;3876:6;3871:2;3860:9;3856:18;3849:34;3901:1;3911:140;3925:6;3922:1;3919:13;3911:140;;;4036:2;4020:14;;;4016:23;;4010:30;4005:2;3986:17;;;3982:26;3975:66;3940:10;3911:140;;;3915:3;4100:1;4095:2;4086:6;4075:9;4071:22;4067:31;4060:42;4170:2;4163;4159:7;4154:2;4146:6;4142:15;4138:29;4127:9;4123:45;4119:54;4111:62;;;3652:527;;;;:::o;4184:297::-;4302:12;;4349:4;4338:16;;;4332:23;;4302:12;4367:16;;4364:111;;;-1:-1:-1;;4441:4:22;4437:17;;;;4434:1;4430:25;4426:38;4415:50;;4184:297;-1:-1:-1;4184:297:22:o;:::-;240:3260:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DOMAIN_SEPARATOR_1055":{"entryPoint":1847,"id":1055,"parameterSlots":0,"returnSlots":1},"@_EIP712Name_3371":{"entryPoint":4176,"id":3371,"parameterSlots":0,"returnSlots":1},"@_EIP712Version_3383":{"entryPoint":4221,"id":3383,"parameterSlots":0,"returnSlots":1},"@_approve_715":{"entryPoint":3452,"id":715,"parameterSlots":3,"returnSlots":0},"@_approve_775":{"entryPoint":4357,"id":775,"parameterSlots":4,"returnSlots":0},"@_buildDomainSeparator_3301":{"entryPoint":null,"id":3301,"parameterSlots":0,"returnSlots":1},"@_checkOwner_84":{"entryPoint":3692,"id":84,"parameterSlots":0,"returnSlots":0},"@_domainSeparatorV4_3280":{"entryPoint":3795,"id":3280,"parameterSlots":0,"returnSlots":1},"@_hashTypedDataV4_3317":{"entryPoint":4266,"id":3317,"parameterSlots":1,"returnSlots":1},"@_mint_664":{"entryPoint":3737,"id":664,"parameterSlots":2,"returnSlots":0},"@_msgSender_1130":{"entryPoint":null,"id":1130,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_823":{"entryPoint":3470,"id":823,"parameterSlots":3,"returnSlots":0},"@_throwError_3156":{"entryPoint":5246,"id":3156,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":4094,"id":146,"parameterSlots":1,"returnSlots":0},"@_transfer_554":{"entryPoint":3597,"id":554,"parameterSlots":3,"returnSlots":0},"@_update_631":{"entryPoint":4570,"id":631,"parameterSlots":3,"returnSlots":0},"@_useNonce_1190":{"entryPoint":null,"id":1190,"parameterSlots":1,"returnSlots":1},"@allowance_451":{"entryPoint":null,"id":451,"parameterSlots":2,"returnSlots":1},"@approve_475":{"entryPoint":1263,"id":475,"parameterSlots":2,"returnSlots":1},"@balanceOf_410":{"entryPoint":null,"id":410,"parameterSlots":1,"returnSlots":1},"@buy100OSTToMusicContract_7865":{"entryPoint":2287,"id":7865,"parameterSlots":0,"returnSlots":1},"@byteLength_1386":{"entryPoint":5494,"id":1386,"parameterSlots":1,"returnSlots":1},"@decimals_388":{"entryPoint":null,"id":388,"parameterSlots":0,"returnSlots":1},"@eip712Domain_3359":{"entryPoint":2217,"id":3359,"parameterSlots":0,"returnSlots":7},"@mintToVault_7747":{"entryPoint":1734,"id":7747,"parameterSlots":1,"returnSlots":0},"@name_370":{"entryPoint":1117,"id":370,"parameterSlots":0,"returnSlots":1},"@nonces_1045":{"entryPoint":2187,"id":1045,"parameterSlots":1,"returnSlots":1},"@nonces_1175":{"entryPoint":null,"id":1175,"parameterSlots":1,"returnSlots":1},"@owner_67":{"entryPoint":null,"id":67,"parameterSlots":0,"returnSlots":1},"@permit_1028":{"entryPoint":3079,"id":1028,"parameterSlots":7,"returnSlots":0},"@recover_3107":{"entryPoint":4311,"id":3107,"parameterSlots":4,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":2059,"id":98,"parameterSlots":0,"returnSlots":0},"@sellOysterToken_7919":{"entryPoint":1289,"id":7919,"parameterSlots":2,"returnSlots":1},"@setVault_7718":{"entryPoint":1862,"id":7718,"parameterSlots":1,"returnSlots":0},"@symbol_379":{"entryPoint":3050,"id":379,"parameterSlots":0,"returnSlots":1},"@toStringWithFallback_1453":{"entryPoint":4868,"id":1453,"parameterSlots":2,"returnSlots":1},"@toString_1354":{"entryPoint":5431,"id":1354,"parameterSlots":1,"returnSlots":1},"@toTypedDataHash_3457":{"entryPoint":null,"id":3457,"parameterSlots":2,"returnSlots":1},"@totalSupply_397":{"entryPoint":null,"id":397,"parameterSlots":0,"returnSlots":1},"@transferFrom_507":{"entryPoint":1698,"id":507,"parameterSlots":3,"returnSlots":1},"@transferOwnership_126":{"entryPoint":3393,"id":126,"parameterSlots":1,"returnSlots":0},"@transfer_434":{"entryPoint":3065,"id":434,"parameterSlots":2,"returnSlots":1},"@tryRecover_3071":{"entryPoint":5039,"id":3071,"parameterSlots":4,"returnSlots":3},"@validMusicContracts_7633":{"entryPoint":null,"id":7633,"parameterSlots":0,"returnSlots":0},"@validateMusicContracts_7770":{"entryPoint":2079,"id":7770,"parameterSlots":1,"returnSlots":1},"@vault_7629":{"entryPoint":null,"id":7629,"parameterSlots":0,"returnSlots":0},"abi_decode_tuple_t_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":6085,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":5695,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32":{"entryPoint":5966,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":5651,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":6305,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_contract$_OysterVault_$8069":{"entryPoint":5785,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":5760,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":6422,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":5534,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":5814,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_contract$_OysterVault_$8069__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5604,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1d4b05e5256c70cb19cbeae4f5dbc68cbf63906eed2b6782a552ca8fc044422e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2c0bfaf7cb6539155436714f38c4cb42f5eda75e9ba56026786122f864cadb75__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_86507a7d7d18d00edab41068eefc3ef3ff83737ee53442e526a0ea723f603949__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a498ec71a51c4164b1345afc4bf81a1bdbdf153eb10e276ed1006f2e929fdc84__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6200,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ca3cad5b864a3d4af13eee9d3c0d044aa408ce904e7fe3c87ecd049c253491b7__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e38982e17d63c9cd56d683e451db7cf94d5da609636149268849933c3fcb1d61__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fa207173f56547efb95af4cef634dbfa0d7f314b8618baeae97339d76512f226__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":6384,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":6361,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":6403,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":6142,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":6339,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":6447,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_address":{"entryPoint":5630,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:13653:22","nodeType":"YulBlock","src":"0:13653:22","statements":[{"nativeSrc":"6:3:22","nodeType":"YulBlock","src":"6:3:22","statements":[]},{"body":{"nativeSrc":"64:350:22","nodeType":"YulBlock","src":"64:350:22","statements":[{"nativeSrc":"74:26:22","nodeType":"YulVariableDeclaration","src":"74:26:22","value":{"arguments":[{"name":"value","nativeSrc":"94:5:22","nodeType":"YulIdentifier","src":"94:5:22"}],"functionName":{"name":"mload","nativeSrc":"88:5:22","nodeType":"YulIdentifier","src":"88:5:22"},"nativeSrc":"88:12:22","nodeType":"YulFunctionCall","src":"88:12:22"},"variables":[{"name":"length","nativeSrc":"78:6:22","nodeType":"YulTypedName","src":"78:6:22","type":""}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"116:3:22","nodeType":"YulIdentifier","src":"116:3:22"},{"name":"length","nativeSrc":"121:6:22","nodeType":"YulIdentifier","src":"121:6:22"}],"functionName":{"name":"mstore","nativeSrc":"109:6:22","nodeType":"YulIdentifier","src":"109:6:22"},"nativeSrc":"109:19:22","nodeType":"YulFunctionCall","src":"109:19:22"},"nativeSrc":"109:19:22","nodeType":"YulExpressionStatement","src":"109:19:22"},{"nativeSrc":"137:10:22","nodeType":"YulVariableDeclaration","src":"137:10:22","value":{"kind":"number","nativeSrc":"146:1:22","nodeType":"YulLiteral","src":"146:1:22","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"141:1:22","nodeType":"YulTypedName","src":"141:1:22","type":""}]},{"body":{"nativeSrc":"208:87:22","nodeType":"YulBlock","src":"208:87:22","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"237:3:22","nodeType":"YulIdentifier","src":"237:3:22"},{"name":"i","nativeSrc":"242:1:22","nodeType":"YulIdentifier","src":"242:1:22"}],"functionName":{"name":"add","nativeSrc":"233:3:22","nodeType":"YulIdentifier","src":"233:3:22"},"nativeSrc":"233:11:22","nodeType":"YulFunctionCall","src":"233:11:22"},{"kind":"number","nativeSrc":"246:4:22","nodeType":"YulLiteral","src":"246:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"229:3:22","nodeType":"YulIdentifier","src":"229:3:22"},"nativeSrc":"229:22:22","nodeType":"YulFunctionCall","src":"229:22:22"},{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"267:5:22","nodeType":"YulIdentifier","src":"267:5:22"},{"name":"i","nativeSrc":"274:1:22","nodeType":"YulIdentifier","src":"274:1:22"}],"functionName":{"name":"add","nativeSrc":"263:3:22","nodeType":"YulIdentifier","src":"263:3:22"},"nativeSrc":"263:13:22","nodeType":"YulFunctionCall","src":"263:13:22"},{"kind":"number","nativeSrc":"278:4:22","nodeType":"YulLiteral","src":"278:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"259:3:22","nodeType":"YulIdentifier","src":"259:3:22"},"nativeSrc":"259:24:22","nodeType":"YulFunctionCall","src":"259:24:22"}],"functionName":{"name":"mload","nativeSrc":"253:5:22","nodeType":"YulIdentifier","src":"253:5:22"},"nativeSrc":"253:31:22","nodeType":"YulFunctionCall","src":"253:31:22"}],"functionName":{"name":"mstore","nativeSrc":"222:6:22","nodeType":"YulIdentifier","src":"222:6:22"},"nativeSrc":"222:63:22","nodeType":"YulFunctionCall","src":"222:63:22"},"nativeSrc":"222:63:22","nodeType":"YulExpressionStatement","src":"222:63:22"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"167:1:22","nodeType":"YulIdentifier","src":"167:1:22"},{"name":"length","nativeSrc":"170:6:22","nodeType":"YulIdentifier","src":"170:6:22"}],"functionName":{"name":"lt","nativeSrc":"164:2:22","nodeType":"YulIdentifier","src":"164:2:22"},"nativeSrc":"164:13:22","nodeType":"YulFunctionCall","src":"164:13:22"},"nativeSrc":"156:139:22","nodeType":"YulForLoop","post":{"nativeSrc":"178:21:22","nodeType":"YulBlock","src":"178:21:22","statements":[{"nativeSrc":"180:17:22","nodeType":"YulAssignment","src":"180:17:22","value":{"arguments":[{"name":"i","nativeSrc":"189:1:22","nodeType":"YulIdentifier","src":"189:1:22"},{"kind":"number","nativeSrc":"192:4:22","nodeType":"YulLiteral","src":"192:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"185:3:22","nodeType":"YulIdentifier","src":"185:3:22"},"nativeSrc":"185:12:22","nodeType":"YulFunctionCall","src":"185:12:22"},"variableNames":[{"name":"i","nativeSrc":"180:1:22","nodeType":"YulIdentifier","src":"180:1:22"}]}]},"pre":{"nativeSrc":"160:3:22","nodeType":"YulBlock","src":"160:3:22","statements":[]},"src":"156:139:22"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"319:3:22","nodeType":"YulIdentifier","src":"319:3:22"},{"name":"length","nativeSrc":"324:6:22","nodeType":"YulIdentifier","src":"324:6:22"}],"functionName":{"name":"add","nativeSrc":"315:3:22","nodeType":"YulIdentifier","src":"315:3:22"},"nativeSrc":"315:16:22","nodeType":"YulFunctionCall","src":"315:16:22"},{"kind":"number","nativeSrc":"333:4:22","nodeType":"YulLiteral","src":"333:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"311:3:22","nodeType":"YulIdentifier","src":"311:3:22"},"nativeSrc":"311:27:22","nodeType":"YulFunctionCall","src":"311:27:22"},{"kind":"number","nativeSrc":"340:1:22","nodeType":"YulLiteral","src":"340:1:22","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"304:6:22","nodeType":"YulIdentifier","src":"304:6:22"},"nativeSrc":"304:38:22","nodeType":"YulFunctionCall","src":"304:38:22"},"nativeSrc":"304:38:22","nodeType":"YulExpressionStatement","src":"304:38:22"},{"nativeSrc":"351:57:22","nodeType":"YulAssignment","src":"351:57:22","value":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"366:3:22","nodeType":"YulIdentifier","src":"366:3:22"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"379:6:22","nodeType":"YulIdentifier","src":"379:6:22"},{"kind":"number","nativeSrc":"387:2:22","nodeType":"YulLiteral","src":"387:2:22","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"375:3:22","nodeType":"YulIdentifier","src":"375:3:22"},"nativeSrc":"375:15:22","nodeType":"YulFunctionCall","src":"375:15:22"},{"arguments":[{"kind":"number","nativeSrc":"396:2:22","nodeType":"YulLiteral","src":"396:2:22","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"392:3:22","nodeType":"YulIdentifier","src":"392:3:22"},"nativeSrc":"392:7:22","nodeType":"YulFunctionCall","src":"392:7:22"}],"functionName":{"name":"and","nativeSrc":"371:3:22","nodeType":"YulIdentifier","src":"371:3:22"},"nativeSrc":"371:29:22","nodeType":"YulFunctionCall","src":"371:29:22"}],"functionName":{"name":"add","nativeSrc":"362:3:22","nodeType":"YulIdentifier","src":"362:3:22"},"nativeSrc":"362:39:22","nodeType":"YulFunctionCall","src":"362:39:22"},{"kind":"number","nativeSrc":"403:4:22","nodeType":"YulLiteral","src":"403:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"358:3:22","nodeType":"YulIdentifier","src":"358:3:22"},"nativeSrc":"358:50:22","nodeType":"YulFunctionCall","src":"358:50:22"},"variableNames":[{"name":"end","nativeSrc":"351:3:22","nodeType":"YulIdentifier","src":"351:3:22"}]}]},"name":"abi_encode_string","nativeSrc":"14:400:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"41:5:22","nodeType":"YulTypedName","src":"41:5:22","type":""},{"name":"pos","nativeSrc":"48:3:22","nodeType":"YulTypedName","src":"48:3:22","type":""}],"returnVariables":[{"name":"end","nativeSrc":"56:3:22","nodeType":"YulTypedName","src":"56:3:22","type":""}],"src":"14:400:22"},{"body":{"nativeSrc":"540:99:22","nodeType":"YulBlock","src":"540:99:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"557:9:22","nodeType":"YulIdentifier","src":"557:9:22"},{"kind":"number","nativeSrc":"568:2:22","nodeType":"YulLiteral","src":"568:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"550:6:22","nodeType":"YulIdentifier","src":"550:6:22"},"nativeSrc":"550:21:22","nodeType":"YulFunctionCall","src":"550:21:22"},"nativeSrc":"550:21:22","nodeType":"YulExpressionStatement","src":"550:21:22"},{"nativeSrc":"580:53:22","nodeType":"YulAssignment","src":"580:53:22","value":{"arguments":[{"name":"value0","nativeSrc":"606:6:22","nodeType":"YulIdentifier","src":"606:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"618:9:22","nodeType":"YulIdentifier","src":"618:9:22"},{"kind":"number","nativeSrc":"629:2:22","nodeType":"YulLiteral","src":"629:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"614:3:22","nodeType":"YulIdentifier","src":"614:3:22"},"nativeSrc":"614:18:22","nodeType":"YulFunctionCall","src":"614:18:22"}],"functionName":{"name":"abi_encode_string","nativeSrc":"588:17:22","nodeType":"YulIdentifier","src":"588:17:22"},"nativeSrc":"588:45:22","nodeType":"YulFunctionCall","src":"588:45:22"},"variableNames":[{"name":"tail","nativeSrc":"580:4:22","nodeType":"YulIdentifier","src":"580:4:22"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"419:220:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"509:9:22","nodeType":"YulTypedName","src":"509:9:22","type":""},{"name":"value0","nativeSrc":"520:6:22","nodeType":"YulTypedName","src":"520:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"531:4:22","nodeType":"YulTypedName","src":"531:4:22","type":""}],"src":"419:220:22"},{"body":{"nativeSrc":"689:86:22","nodeType":"YulBlock","src":"689:86:22","statements":[{"body":{"nativeSrc":"753:16:22","nodeType":"YulBlock","src":"753:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"762:1:22","nodeType":"YulLiteral","src":"762:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"765:1:22","nodeType":"YulLiteral","src":"765:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"755:6:22","nodeType":"YulIdentifier","src":"755:6:22"},"nativeSrc":"755:12:22","nodeType":"YulFunctionCall","src":"755:12:22"},"nativeSrc":"755:12:22","nodeType":"YulExpressionStatement","src":"755:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"712:5:22","nodeType":"YulIdentifier","src":"712:5:22"},{"arguments":[{"name":"value","nativeSrc":"723:5:22","nodeType":"YulIdentifier","src":"723:5:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"738:3:22","nodeType":"YulLiteral","src":"738:3:22","type":"","value":"160"},{"kind":"number","nativeSrc":"743:1:22","nodeType":"YulLiteral","src":"743:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"734:3:22","nodeType":"YulIdentifier","src":"734:3:22"},"nativeSrc":"734:11:22","nodeType":"YulFunctionCall","src":"734:11:22"},{"kind":"number","nativeSrc":"747:1:22","nodeType":"YulLiteral","src":"747:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"730:3:22","nodeType":"YulIdentifier","src":"730:3:22"},"nativeSrc":"730:19:22","nodeType":"YulFunctionCall","src":"730:19:22"}],"functionName":{"name":"and","nativeSrc":"719:3:22","nodeType":"YulIdentifier","src":"719:3:22"},"nativeSrc":"719:31:22","nodeType":"YulFunctionCall","src":"719:31:22"}],"functionName":{"name":"eq","nativeSrc":"709:2:22","nodeType":"YulIdentifier","src":"709:2:22"},"nativeSrc":"709:42:22","nodeType":"YulFunctionCall","src":"709:42:22"}],"functionName":{"name":"iszero","nativeSrc":"702:6:22","nodeType":"YulIdentifier","src":"702:6:22"},"nativeSrc":"702:50:22","nodeType":"YulFunctionCall","src":"702:50:22"},"nativeSrc":"699:70:22","nodeType":"YulIf","src":"699:70:22"}]},"name":"validator_revert_address","nativeSrc":"644:131:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"678:5:22","nodeType":"YulTypedName","src":"678:5:22","type":""}],"src":"644:131:22"},{"body":{"nativeSrc":"867:280:22","nodeType":"YulBlock","src":"867:280:22","statements":[{"body":{"nativeSrc":"913:16:22","nodeType":"YulBlock","src":"913:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"922:1:22","nodeType":"YulLiteral","src":"922:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"925:1:22","nodeType":"YulLiteral","src":"925:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"915:6:22","nodeType":"YulIdentifier","src":"915:6:22"},"nativeSrc":"915:12:22","nodeType":"YulFunctionCall","src":"915:12:22"},"nativeSrc":"915:12:22","nodeType":"YulExpressionStatement","src":"915:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"888:7:22","nodeType":"YulIdentifier","src":"888:7:22"},{"name":"headStart","nativeSrc":"897:9:22","nodeType":"YulIdentifier","src":"897:9:22"}],"functionName":{"name":"sub","nativeSrc":"884:3:22","nodeType":"YulIdentifier","src":"884:3:22"},"nativeSrc":"884:23:22","nodeType":"YulFunctionCall","src":"884:23:22"},{"kind":"number","nativeSrc":"909:2:22","nodeType":"YulLiteral","src":"909:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"880:3:22","nodeType":"YulIdentifier","src":"880:3:22"},"nativeSrc":"880:32:22","nodeType":"YulFunctionCall","src":"880:32:22"},"nativeSrc":"877:52:22","nodeType":"YulIf","src":"877:52:22"},{"nativeSrc":"938:36:22","nodeType":"YulVariableDeclaration","src":"938:36:22","value":{"arguments":[{"name":"headStart","nativeSrc":"964:9:22","nodeType":"YulIdentifier","src":"964:9:22"}],"functionName":{"name":"calldataload","nativeSrc":"951:12:22","nodeType":"YulIdentifier","src":"951:12:22"},"nativeSrc":"951:23:22","nodeType":"YulFunctionCall","src":"951:23:22"},"variables":[{"name":"value","nativeSrc":"942:5:22","nodeType":"YulTypedName","src":"942:5:22","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1008:5:22","nodeType":"YulIdentifier","src":"1008:5:22"}],"functionName":{"name":"validator_revert_address","nativeSrc":"983:24:22","nodeType":"YulIdentifier","src":"983:24:22"},"nativeSrc":"983:31:22","nodeType":"YulFunctionCall","src":"983:31:22"},"nativeSrc":"983:31:22","nodeType":"YulExpressionStatement","src":"983:31:22"},{"nativeSrc":"1023:15:22","nodeType":"YulAssignment","src":"1023:15:22","value":{"name":"value","nativeSrc":"1033:5:22","nodeType":"YulIdentifier","src":"1033:5:22"},"variableNames":[{"name":"value0","nativeSrc":"1023:6:22","nodeType":"YulIdentifier","src":"1023:6:22"}]},{"nativeSrc":"1047:16:22","nodeType":"YulVariableDeclaration","src":"1047:16:22","value":{"kind":"number","nativeSrc":"1062:1:22","nodeType":"YulLiteral","src":"1062:1:22","type":"","value":"0"},"variables":[{"name":"value_1","nativeSrc":"1051:7:22","nodeType":"YulTypedName","src":"1051:7:22","type":""}]},{"nativeSrc":"1072:43:22","nodeType":"YulAssignment","src":"1072:43:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1100:9:22","nodeType":"YulIdentifier","src":"1100:9:22"},{"kind":"number","nativeSrc":"1111:2:22","nodeType":"YulLiteral","src":"1111:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1096:3:22","nodeType":"YulIdentifier","src":"1096:3:22"},"nativeSrc":"1096:18:22","nodeType":"YulFunctionCall","src":"1096:18:22"}],"functionName":{"name":"calldataload","nativeSrc":"1083:12:22","nodeType":"YulIdentifier","src":"1083:12:22"},"nativeSrc":"1083:32:22","nodeType":"YulFunctionCall","src":"1083:32:22"},"variableNames":[{"name":"value_1","nativeSrc":"1072:7:22","nodeType":"YulIdentifier","src":"1072:7:22"}]},{"nativeSrc":"1124:17:22","nodeType":"YulAssignment","src":"1124:17:22","value":{"name":"value_1","nativeSrc":"1134:7:22","nodeType":"YulIdentifier","src":"1134:7:22"},"variableNames":[{"name":"value1","nativeSrc":"1124:6:22","nodeType":"YulIdentifier","src":"1124:6:22"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"780:367:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"825:9:22","nodeType":"YulTypedName","src":"825:9:22","type":""},{"name":"dataEnd","nativeSrc":"836:7:22","nodeType":"YulTypedName","src":"836:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"848:6:22","nodeType":"YulTypedName","src":"848:6:22","type":""},{"name":"value1","nativeSrc":"856:6:22","nodeType":"YulTypedName","src":"856:6:22","type":""}],"src":"780:367:22"},{"body":{"nativeSrc":"1247:92:22","nodeType":"YulBlock","src":"1247:92:22","statements":[{"nativeSrc":"1257:26:22","nodeType":"YulAssignment","src":"1257:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"1269:9:22","nodeType":"YulIdentifier","src":"1269:9:22"},{"kind":"number","nativeSrc":"1280:2:22","nodeType":"YulLiteral","src":"1280:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1265:3:22","nodeType":"YulIdentifier","src":"1265:3:22"},"nativeSrc":"1265:18:22","nodeType":"YulFunctionCall","src":"1265:18:22"},"variableNames":[{"name":"tail","nativeSrc":"1257:4:22","nodeType":"YulIdentifier","src":"1257:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1299:9:22","nodeType":"YulIdentifier","src":"1299:9:22"},{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"1324:6:22","nodeType":"YulIdentifier","src":"1324:6:22"}],"functionName":{"name":"iszero","nativeSrc":"1317:6:22","nodeType":"YulIdentifier","src":"1317:6:22"},"nativeSrc":"1317:14:22","nodeType":"YulFunctionCall","src":"1317:14:22"}],"functionName":{"name":"iszero","nativeSrc":"1310:6:22","nodeType":"YulIdentifier","src":"1310:6:22"},"nativeSrc":"1310:22:22","nodeType":"YulFunctionCall","src":"1310:22:22"}],"functionName":{"name":"mstore","nativeSrc":"1292:6:22","nodeType":"YulIdentifier","src":"1292:6:22"},"nativeSrc":"1292:41:22","nodeType":"YulFunctionCall","src":"1292:41:22"},"nativeSrc":"1292:41:22","nodeType":"YulExpressionStatement","src":"1292:41:22"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"1152:187:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1216:9:22","nodeType":"YulTypedName","src":"1216:9:22","type":""},{"name":"value0","nativeSrc":"1227:6:22","nodeType":"YulTypedName","src":"1227:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1238:4:22","nodeType":"YulTypedName","src":"1238:4:22","type":""}],"src":"1152:187:22"},{"body":{"nativeSrc":"1445:76:22","nodeType":"YulBlock","src":"1445:76:22","statements":[{"nativeSrc":"1455:26:22","nodeType":"YulAssignment","src":"1455:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"1467:9:22","nodeType":"YulIdentifier","src":"1467:9:22"},{"kind":"number","nativeSrc":"1478:2:22","nodeType":"YulLiteral","src":"1478:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1463:3:22","nodeType":"YulIdentifier","src":"1463:3:22"},"nativeSrc":"1463:18:22","nodeType":"YulFunctionCall","src":"1463:18:22"},"variableNames":[{"name":"tail","nativeSrc":"1455:4:22","nodeType":"YulIdentifier","src":"1455:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1497:9:22","nodeType":"YulIdentifier","src":"1497:9:22"},{"name":"value0","nativeSrc":"1508:6:22","nodeType":"YulIdentifier","src":"1508:6:22"}],"functionName":{"name":"mstore","nativeSrc":"1490:6:22","nodeType":"YulIdentifier","src":"1490:6:22"},"nativeSrc":"1490:25:22","nodeType":"YulFunctionCall","src":"1490:25:22"},"nativeSrc":"1490:25:22","nodeType":"YulExpressionStatement","src":"1490:25:22"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"1344:177:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1414:9:22","nodeType":"YulTypedName","src":"1414:9:22","type":""},{"name":"value0","nativeSrc":"1425:6:22","nodeType":"YulTypedName","src":"1425:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1436:4:22","nodeType":"YulTypedName","src":"1436:4:22","type":""}],"src":"1344:177:22"},{"body":{"nativeSrc":"1630:404:22","nodeType":"YulBlock","src":"1630:404:22","statements":[{"body":{"nativeSrc":"1676:16:22","nodeType":"YulBlock","src":"1676:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1685:1:22","nodeType":"YulLiteral","src":"1685:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"1688:1:22","nodeType":"YulLiteral","src":"1688:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1678:6:22","nodeType":"YulIdentifier","src":"1678:6:22"},"nativeSrc":"1678:12:22","nodeType":"YulFunctionCall","src":"1678:12:22"},"nativeSrc":"1678:12:22","nodeType":"YulExpressionStatement","src":"1678:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1651:7:22","nodeType":"YulIdentifier","src":"1651:7:22"},{"name":"headStart","nativeSrc":"1660:9:22","nodeType":"YulIdentifier","src":"1660:9:22"}],"functionName":{"name":"sub","nativeSrc":"1647:3:22","nodeType":"YulIdentifier","src":"1647:3:22"},"nativeSrc":"1647:23:22","nodeType":"YulFunctionCall","src":"1647:23:22"},{"kind":"number","nativeSrc":"1672:2:22","nodeType":"YulLiteral","src":"1672:2:22","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"1643:3:22","nodeType":"YulIdentifier","src":"1643:3:22"},"nativeSrc":"1643:32:22","nodeType":"YulFunctionCall","src":"1643:32:22"},"nativeSrc":"1640:52:22","nodeType":"YulIf","src":"1640:52:22"},{"nativeSrc":"1701:36:22","nodeType":"YulVariableDeclaration","src":"1701:36:22","value":{"arguments":[{"name":"headStart","nativeSrc":"1727:9:22","nodeType":"YulIdentifier","src":"1727:9:22"}],"functionName":{"name":"calldataload","nativeSrc":"1714:12:22","nodeType":"YulIdentifier","src":"1714:12:22"},"nativeSrc":"1714:23:22","nodeType":"YulFunctionCall","src":"1714:23:22"},"variables":[{"name":"value","nativeSrc":"1705:5:22","nodeType":"YulTypedName","src":"1705:5:22","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1771:5:22","nodeType":"YulIdentifier","src":"1771:5:22"}],"functionName":{"name":"validator_revert_address","nativeSrc":"1746:24:22","nodeType":"YulIdentifier","src":"1746:24:22"},"nativeSrc":"1746:31:22","nodeType":"YulFunctionCall","src":"1746:31:22"},"nativeSrc":"1746:31:22","nodeType":"YulExpressionStatement","src":"1746:31:22"},{"nativeSrc":"1786:15:22","nodeType":"YulAssignment","src":"1786:15:22","value":{"name":"value","nativeSrc":"1796:5:22","nodeType":"YulIdentifier","src":"1796:5:22"},"variableNames":[{"name":"value0","nativeSrc":"1786:6:22","nodeType":"YulIdentifier","src":"1786:6:22"}]},{"nativeSrc":"1810:47:22","nodeType":"YulVariableDeclaration","src":"1810:47:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1842:9:22","nodeType":"YulIdentifier","src":"1842:9:22"},{"kind":"number","nativeSrc":"1853:2:22","nodeType":"YulLiteral","src":"1853:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1838:3:22","nodeType":"YulIdentifier","src":"1838:3:22"},"nativeSrc":"1838:18:22","nodeType":"YulFunctionCall","src":"1838:18:22"}],"functionName":{"name":"calldataload","nativeSrc":"1825:12:22","nodeType":"YulIdentifier","src":"1825:12:22"},"nativeSrc":"1825:32:22","nodeType":"YulFunctionCall","src":"1825:32:22"},"variables":[{"name":"value_1","nativeSrc":"1814:7:22","nodeType":"YulTypedName","src":"1814:7:22","type":""}]},{"expression":{"arguments":[{"name":"value_1","nativeSrc":"1891:7:22","nodeType":"YulIdentifier","src":"1891:7:22"}],"functionName":{"name":"validator_revert_address","nativeSrc":"1866:24:22","nodeType":"YulIdentifier","src":"1866:24:22"},"nativeSrc":"1866:33:22","nodeType":"YulFunctionCall","src":"1866:33:22"},"nativeSrc":"1866:33:22","nodeType":"YulExpressionStatement","src":"1866:33:22"},{"nativeSrc":"1908:17:22","nodeType":"YulAssignment","src":"1908:17:22","value":{"name":"value_1","nativeSrc":"1918:7:22","nodeType":"YulIdentifier","src":"1918:7:22"},"variableNames":[{"name":"value1","nativeSrc":"1908:6:22","nodeType":"YulIdentifier","src":"1908:6:22"}]},{"nativeSrc":"1934:16:22","nodeType":"YulVariableDeclaration","src":"1934:16:22","value":{"kind":"number","nativeSrc":"1949:1:22","nodeType":"YulLiteral","src":"1949:1:22","type":"","value":"0"},"variables":[{"name":"value_2","nativeSrc":"1938:7:22","nodeType":"YulTypedName","src":"1938:7:22","type":""}]},{"nativeSrc":"1959:43:22","nodeType":"YulAssignment","src":"1959:43:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1987:9:22","nodeType":"YulIdentifier","src":"1987:9:22"},{"kind":"number","nativeSrc":"1998:2:22","nodeType":"YulLiteral","src":"1998:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"1983:3:22","nodeType":"YulIdentifier","src":"1983:3:22"},"nativeSrc":"1983:18:22","nodeType":"YulFunctionCall","src":"1983:18:22"}],"functionName":{"name":"calldataload","nativeSrc":"1970:12:22","nodeType":"YulIdentifier","src":"1970:12:22"},"nativeSrc":"1970:32:22","nodeType":"YulFunctionCall","src":"1970:32:22"},"variableNames":[{"name":"value_2","nativeSrc":"1959:7:22","nodeType":"YulIdentifier","src":"1959:7:22"}]},{"nativeSrc":"2011:17:22","nodeType":"YulAssignment","src":"2011:17:22","value":{"name":"value_2","nativeSrc":"2021:7:22","nodeType":"YulIdentifier","src":"2021:7:22"},"variableNames":[{"name":"value2","nativeSrc":"2011:6:22","nodeType":"YulIdentifier","src":"2011:6:22"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"1526:508:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1580:9:22","nodeType":"YulTypedName","src":"1580:9:22","type":""},{"name":"dataEnd","nativeSrc":"1591:7:22","nodeType":"YulTypedName","src":"1591:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1603:6:22","nodeType":"YulTypedName","src":"1603:6:22","type":""},{"name":"value1","nativeSrc":"1611:6:22","nodeType":"YulTypedName","src":"1611:6:22","type":""},{"name":"value2","nativeSrc":"1619:6:22","nodeType":"YulTypedName","src":"1619:6:22","type":""}],"src":"1526:508:22"},{"body":{"nativeSrc":"2109:156:22","nodeType":"YulBlock","src":"2109:156:22","statements":[{"body":{"nativeSrc":"2155:16:22","nodeType":"YulBlock","src":"2155:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2164:1:22","nodeType":"YulLiteral","src":"2164:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"2167:1:22","nodeType":"YulLiteral","src":"2167:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2157:6:22","nodeType":"YulIdentifier","src":"2157:6:22"},"nativeSrc":"2157:12:22","nodeType":"YulFunctionCall","src":"2157:12:22"},"nativeSrc":"2157:12:22","nodeType":"YulExpressionStatement","src":"2157:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2130:7:22","nodeType":"YulIdentifier","src":"2130:7:22"},{"name":"headStart","nativeSrc":"2139:9:22","nodeType":"YulIdentifier","src":"2139:9:22"}],"functionName":{"name":"sub","nativeSrc":"2126:3:22","nodeType":"YulIdentifier","src":"2126:3:22"},"nativeSrc":"2126:23:22","nodeType":"YulFunctionCall","src":"2126:23:22"},{"kind":"number","nativeSrc":"2151:2:22","nodeType":"YulLiteral","src":"2151:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"2122:3:22","nodeType":"YulIdentifier","src":"2122:3:22"},"nativeSrc":"2122:32:22","nodeType":"YulFunctionCall","src":"2122:32:22"},"nativeSrc":"2119:52:22","nodeType":"YulIf","src":"2119:52:22"},{"nativeSrc":"2180:14:22","nodeType":"YulVariableDeclaration","src":"2180:14:22","value":{"kind":"number","nativeSrc":"2193:1:22","nodeType":"YulLiteral","src":"2193:1:22","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"2184:5:22","nodeType":"YulTypedName","src":"2184:5:22","type":""}]},{"nativeSrc":"2203:32:22","nodeType":"YulAssignment","src":"2203:32:22","value":{"arguments":[{"name":"headStart","nativeSrc":"2225:9:22","nodeType":"YulIdentifier","src":"2225:9:22"}],"functionName":{"name":"calldataload","nativeSrc":"2212:12:22","nodeType":"YulIdentifier","src":"2212:12:22"},"nativeSrc":"2212:23:22","nodeType":"YulFunctionCall","src":"2212:23:22"},"variableNames":[{"name":"value","nativeSrc":"2203:5:22","nodeType":"YulIdentifier","src":"2203:5:22"}]},{"nativeSrc":"2244:15:22","nodeType":"YulAssignment","src":"2244:15:22","value":{"name":"value","nativeSrc":"2254:5:22","nodeType":"YulIdentifier","src":"2254:5:22"},"variableNames":[{"name":"value0","nativeSrc":"2244:6:22","nodeType":"YulIdentifier","src":"2244:6:22"}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"2039:226:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2075:9:22","nodeType":"YulTypedName","src":"2075:9:22","type":""},{"name":"dataEnd","nativeSrc":"2086:7:22","nodeType":"YulTypedName","src":"2086:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2098:6:22","nodeType":"YulTypedName","src":"2098:6:22","type":""}],"src":"2039:226:22"},{"body":{"nativeSrc":"2367:87:22","nodeType":"YulBlock","src":"2367:87:22","statements":[{"nativeSrc":"2377:26:22","nodeType":"YulAssignment","src":"2377:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"2389:9:22","nodeType":"YulIdentifier","src":"2389:9:22"},{"kind":"number","nativeSrc":"2400:2:22","nodeType":"YulLiteral","src":"2400:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2385:3:22","nodeType":"YulIdentifier","src":"2385:3:22"},"nativeSrc":"2385:18:22","nodeType":"YulFunctionCall","src":"2385:18:22"},"variableNames":[{"name":"tail","nativeSrc":"2377:4:22","nodeType":"YulIdentifier","src":"2377:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2419:9:22","nodeType":"YulIdentifier","src":"2419:9:22"},{"arguments":[{"name":"value0","nativeSrc":"2434:6:22","nodeType":"YulIdentifier","src":"2434:6:22"},{"kind":"number","nativeSrc":"2442:4:22","nodeType":"YulLiteral","src":"2442:4:22","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"2430:3:22","nodeType":"YulIdentifier","src":"2430:3:22"},"nativeSrc":"2430:17:22","nodeType":"YulFunctionCall","src":"2430:17:22"}],"functionName":{"name":"mstore","nativeSrc":"2412:6:22","nodeType":"YulIdentifier","src":"2412:6:22"},"nativeSrc":"2412:36:22","nodeType":"YulFunctionCall","src":"2412:36:22"},"nativeSrc":"2412:36:22","nodeType":"YulExpressionStatement","src":"2412:36:22"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nativeSrc":"2270:184:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2336:9:22","nodeType":"YulTypedName","src":"2336:9:22","type":""},{"name":"value0","nativeSrc":"2347:6:22","nodeType":"YulTypedName","src":"2347:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2358:4:22","nodeType":"YulTypedName","src":"2358:4:22","type":""}],"src":"2270:184:22"},{"body":{"nativeSrc":"2560:76:22","nodeType":"YulBlock","src":"2560:76:22","statements":[{"nativeSrc":"2570:26:22","nodeType":"YulAssignment","src":"2570:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"2582:9:22","nodeType":"YulIdentifier","src":"2582:9:22"},{"kind":"number","nativeSrc":"2593:2:22","nodeType":"YulLiteral","src":"2593:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2578:3:22","nodeType":"YulIdentifier","src":"2578:3:22"},"nativeSrc":"2578:18:22","nodeType":"YulFunctionCall","src":"2578:18:22"},"variableNames":[{"name":"tail","nativeSrc":"2570:4:22","nodeType":"YulIdentifier","src":"2570:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2612:9:22","nodeType":"YulIdentifier","src":"2612:9:22"},{"name":"value0","nativeSrc":"2623:6:22","nodeType":"YulIdentifier","src":"2623:6:22"}],"functionName":{"name":"mstore","nativeSrc":"2605:6:22","nodeType":"YulIdentifier","src":"2605:6:22"},"nativeSrc":"2605:25:22","nodeType":"YulFunctionCall","src":"2605:25:22"},"nativeSrc":"2605:25:22","nodeType":"YulExpressionStatement","src":"2605:25:22"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nativeSrc":"2459:177:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2529:9:22","nodeType":"YulTypedName","src":"2529:9:22","type":""},{"name":"value0","nativeSrc":"2540:6:22","nodeType":"YulTypedName","src":"2540:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2551:4:22","nodeType":"YulTypedName","src":"2551:4:22","type":""}],"src":"2459:177:22"},{"body":{"nativeSrc":"2731:177:22","nodeType":"YulBlock","src":"2731:177:22","statements":[{"body":{"nativeSrc":"2777:16:22","nodeType":"YulBlock","src":"2777:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2786:1:22","nodeType":"YulLiteral","src":"2786:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"2789:1:22","nodeType":"YulLiteral","src":"2789:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2779:6:22","nodeType":"YulIdentifier","src":"2779:6:22"},"nativeSrc":"2779:12:22","nodeType":"YulFunctionCall","src":"2779:12:22"},"nativeSrc":"2779:12:22","nodeType":"YulExpressionStatement","src":"2779:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2752:7:22","nodeType":"YulIdentifier","src":"2752:7:22"},{"name":"headStart","nativeSrc":"2761:9:22","nodeType":"YulIdentifier","src":"2761:9:22"}],"functionName":{"name":"sub","nativeSrc":"2748:3:22","nodeType":"YulIdentifier","src":"2748:3:22"},"nativeSrc":"2748:23:22","nodeType":"YulFunctionCall","src":"2748:23:22"},{"kind":"number","nativeSrc":"2773:2:22","nodeType":"YulLiteral","src":"2773:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"2744:3:22","nodeType":"YulIdentifier","src":"2744:3:22"},"nativeSrc":"2744:32:22","nodeType":"YulFunctionCall","src":"2744:32:22"},"nativeSrc":"2741:52:22","nodeType":"YulIf","src":"2741:52:22"},{"nativeSrc":"2802:36:22","nodeType":"YulVariableDeclaration","src":"2802:36:22","value":{"arguments":[{"name":"headStart","nativeSrc":"2828:9:22","nodeType":"YulIdentifier","src":"2828:9:22"}],"functionName":{"name":"calldataload","nativeSrc":"2815:12:22","nodeType":"YulIdentifier","src":"2815:12:22"},"nativeSrc":"2815:23:22","nodeType":"YulFunctionCall","src":"2815:23:22"},"variables":[{"name":"value","nativeSrc":"2806:5:22","nodeType":"YulTypedName","src":"2806:5:22","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2872:5:22","nodeType":"YulIdentifier","src":"2872:5:22"}],"functionName":{"name":"validator_revert_address","nativeSrc":"2847:24:22","nodeType":"YulIdentifier","src":"2847:24:22"},"nativeSrc":"2847:31:22","nodeType":"YulFunctionCall","src":"2847:31:22"},"nativeSrc":"2847:31:22","nodeType":"YulExpressionStatement","src":"2847:31:22"},{"nativeSrc":"2887:15:22","nodeType":"YulAssignment","src":"2887:15:22","value":{"name":"value","nativeSrc":"2897:5:22","nodeType":"YulIdentifier","src":"2897:5:22"},"variableNames":[{"name":"value0","nativeSrc":"2887:6:22","nodeType":"YulIdentifier","src":"2887:6:22"}]}]},"name":"abi_decode_tuple_t_contract$_OysterVault_$8069","nativeSrc":"2641:267:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2697:9:22","nodeType":"YulTypedName","src":"2697:9:22","type":""},{"name":"dataEnd","nativeSrc":"2708:7:22","nodeType":"YulTypedName","src":"2708:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2720:6:22","nodeType":"YulTypedName","src":"2720:6:22","type":""}],"src":"2641:267:22"},{"body":{"nativeSrc":"2983:177:22","nodeType":"YulBlock","src":"2983:177:22","statements":[{"body":{"nativeSrc":"3029:16:22","nodeType":"YulBlock","src":"3029:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3038:1:22","nodeType":"YulLiteral","src":"3038:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"3041:1:22","nodeType":"YulLiteral","src":"3041:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3031:6:22","nodeType":"YulIdentifier","src":"3031:6:22"},"nativeSrc":"3031:12:22","nodeType":"YulFunctionCall","src":"3031:12:22"},"nativeSrc":"3031:12:22","nodeType":"YulExpressionStatement","src":"3031:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3004:7:22","nodeType":"YulIdentifier","src":"3004:7:22"},{"name":"headStart","nativeSrc":"3013:9:22","nodeType":"YulIdentifier","src":"3013:9:22"}],"functionName":{"name":"sub","nativeSrc":"3000:3:22","nodeType":"YulIdentifier","src":"3000:3:22"},"nativeSrc":"3000:23:22","nodeType":"YulFunctionCall","src":"3000:23:22"},{"kind":"number","nativeSrc":"3025:2:22","nodeType":"YulLiteral","src":"3025:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"2996:3:22","nodeType":"YulIdentifier","src":"2996:3:22"},"nativeSrc":"2996:32:22","nodeType":"YulFunctionCall","src":"2996:32:22"},"nativeSrc":"2993:52:22","nodeType":"YulIf","src":"2993:52:22"},{"nativeSrc":"3054:36:22","nodeType":"YulVariableDeclaration","src":"3054:36:22","value":{"arguments":[{"name":"headStart","nativeSrc":"3080:9:22","nodeType":"YulIdentifier","src":"3080:9:22"}],"functionName":{"name":"calldataload","nativeSrc":"3067:12:22","nodeType":"YulIdentifier","src":"3067:12:22"},"nativeSrc":"3067:23:22","nodeType":"YulFunctionCall","src":"3067:23:22"},"variables":[{"name":"value","nativeSrc":"3058:5:22","nodeType":"YulTypedName","src":"3058:5:22","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"3124:5:22","nodeType":"YulIdentifier","src":"3124:5:22"}],"functionName":{"name":"validator_revert_address","nativeSrc":"3099:24:22","nodeType":"YulIdentifier","src":"3099:24:22"},"nativeSrc":"3099:31:22","nodeType":"YulFunctionCall","src":"3099:31:22"},"nativeSrc":"3099:31:22","nodeType":"YulExpressionStatement","src":"3099:31:22"},{"nativeSrc":"3139:15:22","nodeType":"YulAssignment","src":"3139:15:22","value":{"name":"value","nativeSrc":"3149:5:22","nodeType":"YulIdentifier","src":"3149:5:22"},"variableNames":[{"name":"value0","nativeSrc":"3139:6:22","nodeType":"YulIdentifier","src":"3139:6:22"}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"2913:247:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2949:9:22","nodeType":"YulTypedName","src":"2949:9:22","type":""},{"name":"dataEnd","nativeSrc":"2960:7:22","nodeType":"YulTypedName","src":"2960:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2972:6:22","nodeType":"YulTypedName","src":"2972:6:22","type":""}],"src":"2913:247:22"},{"body":{"nativeSrc":"3522:881:22","nodeType":"YulBlock","src":"3522:881:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3539:9:22","nodeType":"YulIdentifier","src":"3539:9:22"},{"arguments":[{"name":"value0","nativeSrc":"3554:6:22","nodeType":"YulIdentifier","src":"3554:6:22"},{"arguments":[{"kind":"number","nativeSrc":"3566:3:22","nodeType":"YulLiteral","src":"3566:3:22","type":"","value":"248"},{"kind":"number","nativeSrc":"3571:3:22","nodeType":"YulLiteral","src":"3571:3:22","type":"","value":"255"}],"functionName":{"name":"shl","nativeSrc":"3562:3:22","nodeType":"YulIdentifier","src":"3562:3:22"},"nativeSrc":"3562:13:22","nodeType":"YulFunctionCall","src":"3562:13:22"}],"functionName":{"name":"and","nativeSrc":"3550:3:22","nodeType":"YulIdentifier","src":"3550:3:22"},"nativeSrc":"3550:26:22","nodeType":"YulFunctionCall","src":"3550:26:22"}],"functionName":{"name":"mstore","nativeSrc":"3532:6:22","nodeType":"YulIdentifier","src":"3532:6:22"},"nativeSrc":"3532:45:22","nodeType":"YulFunctionCall","src":"3532:45:22"},"nativeSrc":"3532:45:22","nodeType":"YulExpressionStatement","src":"3532:45:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3597:9:22","nodeType":"YulIdentifier","src":"3597:9:22"},{"kind":"number","nativeSrc":"3608:2:22","nodeType":"YulLiteral","src":"3608:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3593:3:22","nodeType":"YulIdentifier","src":"3593:3:22"},"nativeSrc":"3593:18:22","nodeType":"YulFunctionCall","src":"3593:18:22"},{"kind":"number","nativeSrc":"3613:3:22","nodeType":"YulLiteral","src":"3613:3:22","type":"","value":"224"}],"functionName":{"name":"mstore","nativeSrc":"3586:6:22","nodeType":"YulIdentifier","src":"3586:6:22"},"nativeSrc":"3586:31:22","nodeType":"YulFunctionCall","src":"3586:31:22"},"nativeSrc":"3586:31:22","nodeType":"YulExpressionStatement","src":"3586:31:22"},{"nativeSrc":"3626:60:22","nodeType":"YulVariableDeclaration","src":"3626:60:22","value":{"arguments":[{"name":"value1","nativeSrc":"3658:6:22","nodeType":"YulIdentifier","src":"3658:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"3670:9:22","nodeType":"YulIdentifier","src":"3670:9:22"},{"kind":"number","nativeSrc":"3681:3:22","nodeType":"YulLiteral","src":"3681:3:22","type":"","value":"224"}],"functionName":{"name":"add","nativeSrc":"3666:3:22","nodeType":"YulIdentifier","src":"3666:3:22"},"nativeSrc":"3666:19:22","nodeType":"YulFunctionCall","src":"3666:19:22"}],"functionName":{"name":"abi_encode_string","nativeSrc":"3640:17:22","nodeType":"YulIdentifier","src":"3640:17:22"},"nativeSrc":"3640:46:22","nodeType":"YulFunctionCall","src":"3640:46:22"},"variables":[{"name":"tail_1","nativeSrc":"3630:6:22","nodeType":"YulTypedName","src":"3630:6:22","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3706:9:22","nodeType":"YulIdentifier","src":"3706:9:22"},{"kind":"number","nativeSrc":"3717:2:22","nodeType":"YulLiteral","src":"3717:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3702:3:22","nodeType":"YulIdentifier","src":"3702:3:22"},"nativeSrc":"3702:18:22","nodeType":"YulFunctionCall","src":"3702:18:22"},{"arguments":[{"name":"tail_1","nativeSrc":"3726:6:22","nodeType":"YulIdentifier","src":"3726:6:22"},{"name":"headStart","nativeSrc":"3734:9:22","nodeType":"YulIdentifier","src":"3734:9:22"}],"functionName":{"name":"sub","nativeSrc":"3722:3:22","nodeType":"YulIdentifier","src":"3722:3:22"},"nativeSrc":"3722:22:22","nodeType":"YulFunctionCall","src":"3722:22:22"}],"functionName":{"name":"mstore","nativeSrc":"3695:6:22","nodeType":"YulIdentifier","src":"3695:6:22"},"nativeSrc":"3695:50:22","nodeType":"YulFunctionCall","src":"3695:50:22"},"nativeSrc":"3695:50:22","nodeType":"YulExpressionStatement","src":"3695:50:22"},{"nativeSrc":"3754:47:22","nodeType":"YulVariableDeclaration","src":"3754:47:22","value":{"arguments":[{"name":"value2","nativeSrc":"3786:6:22","nodeType":"YulIdentifier","src":"3786:6:22"},{"name":"tail_1","nativeSrc":"3794:6:22","nodeType":"YulIdentifier","src":"3794:6:22"}],"functionName":{"name":"abi_encode_string","nativeSrc":"3768:17:22","nodeType":"YulIdentifier","src":"3768:17:22"},"nativeSrc":"3768:33:22","nodeType":"YulFunctionCall","src":"3768:33:22"},"variables":[{"name":"tail_2","nativeSrc":"3758:6:22","nodeType":"YulTypedName","src":"3758:6:22","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3821:9:22","nodeType":"YulIdentifier","src":"3821:9:22"},{"kind":"number","nativeSrc":"3832:2:22","nodeType":"YulLiteral","src":"3832:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"3817:3:22","nodeType":"YulIdentifier","src":"3817:3:22"},"nativeSrc":"3817:18:22","nodeType":"YulFunctionCall","src":"3817:18:22"},{"name":"value3","nativeSrc":"3837:6:22","nodeType":"YulIdentifier","src":"3837:6:22"}],"functionName":{"name":"mstore","nativeSrc":"3810:6:22","nodeType":"YulIdentifier","src":"3810:6:22"},"nativeSrc":"3810:34:22","nodeType":"YulFunctionCall","src":"3810:34:22"},"nativeSrc":"3810:34:22","nodeType":"YulExpressionStatement","src":"3810:34:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3864:9:22","nodeType":"YulIdentifier","src":"3864:9:22"},{"kind":"number","nativeSrc":"3875:3:22","nodeType":"YulLiteral","src":"3875:3:22","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"3860:3:22","nodeType":"YulIdentifier","src":"3860:3:22"},"nativeSrc":"3860:19:22","nodeType":"YulFunctionCall","src":"3860:19:22"},{"arguments":[{"name":"value4","nativeSrc":"3885:6:22","nodeType":"YulIdentifier","src":"3885:6:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3901:3:22","nodeType":"YulLiteral","src":"3901:3:22","type":"","value":"160"},{"kind":"number","nativeSrc":"3906:1:22","nodeType":"YulLiteral","src":"3906:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"3897:3:22","nodeType":"YulIdentifier","src":"3897:3:22"},"nativeSrc":"3897:11:22","nodeType":"YulFunctionCall","src":"3897:11:22"},{"kind":"number","nativeSrc":"3910:1:22","nodeType":"YulLiteral","src":"3910:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"3893:3:22","nodeType":"YulIdentifier","src":"3893:3:22"},"nativeSrc":"3893:19:22","nodeType":"YulFunctionCall","src":"3893:19:22"}],"functionName":{"name":"and","nativeSrc":"3881:3:22","nodeType":"YulIdentifier","src":"3881:3:22"},"nativeSrc":"3881:32:22","nodeType":"YulFunctionCall","src":"3881:32:22"}],"functionName":{"name":"mstore","nativeSrc":"3853:6:22","nodeType":"YulIdentifier","src":"3853:6:22"},"nativeSrc":"3853:61:22","nodeType":"YulFunctionCall","src":"3853:61:22"},"nativeSrc":"3853:61:22","nodeType":"YulExpressionStatement","src":"3853:61:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3934:9:22","nodeType":"YulIdentifier","src":"3934:9:22"},{"kind":"number","nativeSrc":"3945:3:22","nodeType":"YulLiteral","src":"3945:3:22","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"3930:3:22","nodeType":"YulIdentifier","src":"3930:3:22"},"nativeSrc":"3930:19:22","nodeType":"YulFunctionCall","src":"3930:19:22"},{"name":"value5","nativeSrc":"3951:6:22","nodeType":"YulIdentifier","src":"3951:6:22"}],"functionName":{"name":"mstore","nativeSrc":"3923:6:22","nodeType":"YulIdentifier","src":"3923:6:22"},"nativeSrc":"3923:35:22","nodeType":"YulFunctionCall","src":"3923:35:22"},"nativeSrc":"3923:35:22","nodeType":"YulExpressionStatement","src":"3923:35:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3978:9:22","nodeType":"YulIdentifier","src":"3978:9:22"},{"kind":"number","nativeSrc":"3989:3:22","nodeType":"YulLiteral","src":"3989:3:22","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"3974:3:22","nodeType":"YulIdentifier","src":"3974:3:22"},"nativeSrc":"3974:19:22","nodeType":"YulFunctionCall","src":"3974:19:22"},{"arguments":[{"name":"tail_2","nativeSrc":"3999:6:22","nodeType":"YulIdentifier","src":"3999:6:22"},{"name":"headStart","nativeSrc":"4007:9:22","nodeType":"YulIdentifier","src":"4007:9:22"}],"functionName":{"name":"sub","nativeSrc":"3995:3:22","nodeType":"YulIdentifier","src":"3995:3:22"},"nativeSrc":"3995:22:22","nodeType":"YulFunctionCall","src":"3995:22:22"}],"functionName":{"name":"mstore","nativeSrc":"3967:6:22","nodeType":"YulIdentifier","src":"3967:6:22"},"nativeSrc":"3967:51:22","nodeType":"YulFunctionCall","src":"3967:51:22"},"nativeSrc":"3967:51:22","nodeType":"YulExpressionStatement","src":"3967:51:22"},{"nativeSrc":"4027:17:22","nodeType":"YulVariableDeclaration","src":"4027:17:22","value":{"name":"tail_2","nativeSrc":"4038:6:22","nodeType":"YulIdentifier","src":"4038:6:22"},"variables":[{"name":"pos","nativeSrc":"4031:3:22","nodeType":"YulTypedName","src":"4031:3:22","type":""}]},{"nativeSrc":"4053:27:22","nodeType":"YulVariableDeclaration","src":"4053:27:22","value":{"arguments":[{"name":"value6","nativeSrc":"4073:6:22","nodeType":"YulIdentifier","src":"4073:6:22"}],"functionName":{"name":"mload","nativeSrc":"4067:5:22","nodeType":"YulIdentifier","src":"4067:5:22"},"nativeSrc":"4067:13:22","nodeType":"YulFunctionCall","src":"4067:13:22"},"variables":[{"name":"length","nativeSrc":"4057:6:22","nodeType":"YulTypedName","src":"4057:6:22","type":""}]},{"expression":{"arguments":[{"name":"tail_2","nativeSrc":"4096:6:22","nodeType":"YulIdentifier","src":"4096:6:22"},{"name":"length","nativeSrc":"4104:6:22","nodeType":"YulIdentifier","src":"4104:6:22"}],"functionName":{"name":"mstore","nativeSrc":"4089:6:22","nodeType":"YulIdentifier","src":"4089:6:22"},"nativeSrc":"4089:22:22","nodeType":"YulFunctionCall","src":"4089:22:22"},"nativeSrc":"4089:22:22","nodeType":"YulExpressionStatement","src":"4089:22:22"},{"nativeSrc":"4120:22:22","nodeType":"YulAssignment","src":"4120:22:22","value":{"arguments":[{"name":"tail_2","nativeSrc":"4131:6:22","nodeType":"YulIdentifier","src":"4131:6:22"},{"kind":"number","nativeSrc":"4139:2:22","nodeType":"YulLiteral","src":"4139:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4127:3:22","nodeType":"YulIdentifier","src":"4127:3:22"},"nativeSrc":"4127:15:22","nodeType":"YulFunctionCall","src":"4127:15:22"},"variableNames":[{"name":"pos","nativeSrc":"4120:3:22","nodeType":"YulIdentifier","src":"4120:3:22"}]},{"nativeSrc":"4151:29:22","nodeType":"YulVariableDeclaration","src":"4151:29:22","value":{"arguments":[{"name":"value6","nativeSrc":"4169:6:22","nodeType":"YulIdentifier","src":"4169:6:22"},{"kind":"number","nativeSrc":"4177:2:22","nodeType":"YulLiteral","src":"4177:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4165:3:22","nodeType":"YulIdentifier","src":"4165:3:22"},"nativeSrc":"4165:15:22","nodeType":"YulFunctionCall","src":"4165:15:22"},"variables":[{"name":"srcPtr","nativeSrc":"4155:6:22","nodeType":"YulTypedName","src":"4155:6:22","type":""}]},{"nativeSrc":"4189:10:22","nodeType":"YulVariableDeclaration","src":"4189:10:22","value":{"kind":"number","nativeSrc":"4198:1:22","nodeType":"YulLiteral","src":"4198:1:22","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"4193:1:22","nodeType":"YulTypedName","src":"4193:1:22","type":""}]},{"body":{"nativeSrc":"4257:120:22","nodeType":"YulBlock","src":"4257:120:22","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4278:3:22","nodeType":"YulIdentifier","src":"4278:3:22"},{"arguments":[{"name":"srcPtr","nativeSrc":"4289:6:22","nodeType":"YulIdentifier","src":"4289:6:22"}],"functionName":{"name":"mload","nativeSrc":"4283:5:22","nodeType":"YulIdentifier","src":"4283:5:22"},"nativeSrc":"4283:13:22","nodeType":"YulFunctionCall","src":"4283:13:22"}],"functionName":{"name":"mstore","nativeSrc":"4271:6:22","nodeType":"YulIdentifier","src":"4271:6:22"},"nativeSrc":"4271:26:22","nodeType":"YulFunctionCall","src":"4271:26:22"},"nativeSrc":"4271:26:22","nodeType":"YulExpressionStatement","src":"4271:26:22"},{"nativeSrc":"4310:19:22","nodeType":"YulAssignment","src":"4310:19:22","value":{"arguments":[{"name":"pos","nativeSrc":"4321:3:22","nodeType":"YulIdentifier","src":"4321:3:22"},{"kind":"number","nativeSrc":"4326:2:22","nodeType":"YulLiteral","src":"4326:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4317:3:22","nodeType":"YulIdentifier","src":"4317:3:22"},"nativeSrc":"4317:12:22","nodeType":"YulFunctionCall","src":"4317:12:22"},"variableNames":[{"name":"pos","nativeSrc":"4310:3:22","nodeType":"YulIdentifier","src":"4310:3:22"}]},{"nativeSrc":"4342:25:22","nodeType":"YulAssignment","src":"4342:25:22","value":{"arguments":[{"name":"srcPtr","nativeSrc":"4356:6:22","nodeType":"YulIdentifier","src":"4356:6:22"},{"kind":"number","nativeSrc":"4364:2:22","nodeType":"YulLiteral","src":"4364:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4352:3:22","nodeType":"YulIdentifier","src":"4352:3:22"},"nativeSrc":"4352:15:22","nodeType":"YulFunctionCall","src":"4352:15:22"},"variableNames":[{"name":"srcPtr","nativeSrc":"4342:6:22","nodeType":"YulIdentifier","src":"4342:6:22"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"4219:1:22","nodeType":"YulIdentifier","src":"4219:1:22"},{"name":"length","nativeSrc":"4222:6:22","nodeType":"YulIdentifier","src":"4222:6:22"}],"functionName":{"name":"lt","nativeSrc":"4216:2:22","nodeType":"YulIdentifier","src":"4216:2:22"},"nativeSrc":"4216:13:22","nodeType":"YulFunctionCall","src":"4216:13:22"},"nativeSrc":"4208:169:22","nodeType":"YulForLoop","post":{"nativeSrc":"4230:18:22","nodeType":"YulBlock","src":"4230:18:22","statements":[{"nativeSrc":"4232:14:22","nodeType":"YulAssignment","src":"4232:14:22","value":{"arguments":[{"name":"i","nativeSrc":"4241:1:22","nodeType":"YulIdentifier","src":"4241:1:22"},{"kind":"number","nativeSrc":"4244:1:22","nodeType":"YulLiteral","src":"4244:1:22","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"4237:3:22","nodeType":"YulIdentifier","src":"4237:3:22"},"nativeSrc":"4237:9:22","nodeType":"YulFunctionCall","src":"4237:9:22"},"variableNames":[{"name":"i","nativeSrc":"4232:1:22","nodeType":"YulIdentifier","src":"4232:1:22"}]}]},"pre":{"nativeSrc":"4212:3:22","nodeType":"YulBlock","src":"4212:3:22","statements":[]},"src":"4208:169:22"},{"nativeSrc":"4386:11:22","nodeType":"YulAssignment","src":"4386:11:22","value":{"name":"pos","nativeSrc":"4394:3:22","nodeType":"YulIdentifier","src":"4394:3:22"},"variableNames":[{"name":"tail","nativeSrc":"4386:4:22","nodeType":"YulIdentifier","src":"4386:4:22"}]}]},"name":"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"3165:1238:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3443:9:22","nodeType":"YulTypedName","src":"3443:9:22","type":""},{"name":"value6","nativeSrc":"3454:6:22","nodeType":"YulTypedName","src":"3454:6:22","type":""},{"name":"value5","nativeSrc":"3462:6:22","nodeType":"YulTypedName","src":"3462:6:22","type":""},{"name":"value4","nativeSrc":"3470:6:22","nodeType":"YulTypedName","src":"3470:6:22","type":""},{"name":"value3","nativeSrc":"3478:6:22","nodeType":"YulTypedName","src":"3478:6:22","type":""},{"name":"value2","nativeSrc":"3486:6:22","nodeType":"YulTypedName","src":"3486:6:22","type":""},{"name":"value1","nativeSrc":"3494:6:22","nodeType":"YulTypedName","src":"3494:6:22","type":""},{"name":"value0","nativeSrc":"3502:6:22","nodeType":"YulTypedName","src":"3502:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3513:4:22","nodeType":"YulTypedName","src":"3513:4:22","type":""}],"src":"3165:1238:22"},{"body":{"nativeSrc":"4509:102:22","nodeType":"YulBlock","src":"4509:102:22","statements":[{"nativeSrc":"4519:26:22","nodeType":"YulAssignment","src":"4519:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"4531:9:22","nodeType":"YulIdentifier","src":"4531:9:22"},{"kind":"number","nativeSrc":"4542:2:22","nodeType":"YulLiteral","src":"4542:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4527:3:22","nodeType":"YulIdentifier","src":"4527:3:22"},"nativeSrc":"4527:18:22","nodeType":"YulFunctionCall","src":"4527:18:22"},"variableNames":[{"name":"tail","nativeSrc":"4519:4:22","nodeType":"YulIdentifier","src":"4519:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4561:9:22","nodeType":"YulIdentifier","src":"4561:9:22"},{"arguments":[{"name":"value0","nativeSrc":"4576:6:22","nodeType":"YulIdentifier","src":"4576:6:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4592:3:22","nodeType":"YulLiteral","src":"4592:3:22","type":"","value":"160"},{"kind":"number","nativeSrc":"4597:1:22","nodeType":"YulLiteral","src":"4597:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"4588:3:22","nodeType":"YulIdentifier","src":"4588:3:22"},"nativeSrc":"4588:11:22","nodeType":"YulFunctionCall","src":"4588:11:22"},{"kind":"number","nativeSrc":"4601:1:22","nodeType":"YulLiteral","src":"4601:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"4584:3:22","nodeType":"YulIdentifier","src":"4584:3:22"},"nativeSrc":"4584:19:22","nodeType":"YulFunctionCall","src":"4584:19:22"}],"functionName":{"name":"and","nativeSrc":"4572:3:22","nodeType":"YulIdentifier","src":"4572:3:22"},"nativeSrc":"4572:32:22","nodeType":"YulFunctionCall","src":"4572:32:22"}],"functionName":{"name":"mstore","nativeSrc":"4554:6:22","nodeType":"YulIdentifier","src":"4554:6:22"},"nativeSrc":"4554:51:22","nodeType":"YulFunctionCall","src":"4554:51:22"},"nativeSrc":"4554:51:22","nodeType":"YulExpressionStatement","src":"4554:51:22"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"4408:203:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4478:9:22","nodeType":"YulTypedName","src":"4478:9:22","type":""},{"name":"value0","nativeSrc":"4489:6:22","nodeType":"YulTypedName","src":"4489:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4500:4:22","nodeType":"YulTypedName","src":"4500:4:22","type":""}],"src":"4408:203:22"},{"body":{"nativeSrc":"4786:867:22","nodeType":"YulBlock","src":"4786:867:22","statements":[{"body":{"nativeSrc":"4833:16:22","nodeType":"YulBlock","src":"4833:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4842:1:22","nodeType":"YulLiteral","src":"4842:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"4845:1:22","nodeType":"YulLiteral","src":"4845:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4835:6:22","nodeType":"YulIdentifier","src":"4835:6:22"},"nativeSrc":"4835:12:22","nodeType":"YulFunctionCall","src":"4835:12:22"},"nativeSrc":"4835:12:22","nodeType":"YulExpressionStatement","src":"4835:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4807:7:22","nodeType":"YulIdentifier","src":"4807:7:22"},{"name":"headStart","nativeSrc":"4816:9:22","nodeType":"YulIdentifier","src":"4816:9:22"}],"functionName":{"name":"sub","nativeSrc":"4803:3:22","nodeType":"YulIdentifier","src":"4803:3:22"},"nativeSrc":"4803:23:22","nodeType":"YulFunctionCall","src":"4803:23:22"},{"kind":"number","nativeSrc":"4828:3:22","nodeType":"YulLiteral","src":"4828:3:22","type":"","value":"224"}],"functionName":{"name":"slt","nativeSrc":"4799:3:22","nodeType":"YulIdentifier","src":"4799:3:22"},"nativeSrc":"4799:33:22","nodeType":"YulFunctionCall","src":"4799:33:22"},"nativeSrc":"4796:53:22","nodeType":"YulIf","src":"4796:53:22"},{"nativeSrc":"4858:36:22","nodeType":"YulVariableDeclaration","src":"4858:36:22","value":{"arguments":[{"name":"headStart","nativeSrc":"4884:9:22","nodeType":"YulIdentifier","src":"4884:9:22"}],"functionName":{"name":"calldataload","nativeSrc":"4871:12:22","nodeType":"YulIdentifier","src":"4871:12:22"},"nativeSrc":"4871:23:22","nodeType":"YulFunctionCall","src":"4871:23:22"},"variables":[{"name":"value","nativeSrc":"4862:5:22","nodeType":"YulTypedName","src":"4862:5:22","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"4928:5:22","nodeType":"YulIdentifier","src":"4928:5:22"}],"functionName":{"name":"validator_revert_address","nativeSrc":"4903:24:22","nodeType":"YulIdentifier","src":"4903:24:22"},"nativeSrc":"4903:31:22","nodeType":"YulFunctionCall","src":"4903:31:22"},"nativeSrc":"4903:31:22","nodeType":"YulExpressionStatement","src":"4903:31:22"},{"nativeSrc":"4943:15:22","nodeType":"YulAssignment","src":"4943:15:22","value":{"name":"value","nativeSrc":"4953:5:22","nodeType":"YulIdentifier","src":"4953:5:22"},"variableNames":[{"name":"value0","nativeSrc":"4943:6:22","nodeType":"YulIdentifier","src":"4943:6:22"}]},{"nativeSrc":"4967:47:22","nodeType":"YulVariableDeclaration","src":"4967:47:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4999:9:22","nodeType":"YulIdentifier","src":"4999:9:22"},{"kind":"number","nativeSrc":"5010:2:22","nodeType":"YulLiteral","src":"5010:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4995:3:22","nodeType":"YulIdentifier","src":"4995:3:22"},"nativeSrc":"4995:18:22","nodeType":"YulFunctionCall","src":"4995:18:22"}],"functionName":{"name":"calldataload","nativeSrc":"4982:12:22","nodeType":"YulIdentifier","src":"4982:12:22"},"nativeSrc":"4982:32:22","nodeType":"YulFunctionCall","src":"4982:32:22"},"variables":[{"name":"value_1","nativeSrc":"4971:7:22","nodeType":"YulTypedName","src":"4971:7:22","type":""}]},{"expression":{"arguments":[{"name":"value_1","nativeSrc":"5048:7:22","nodeType":"YulIdentifier","src":"5048:7:22"}],"functionName":{"name":"validator_revert_address","nativeSrc":"5023:24:22","nodeType":"YulIdentifier","src":"5023:24:22"},"nativeSrc":"5023:33:22","nodeType":"YulFunctionCall","src":"5023:33:22"},"nativeSrc":"5023:33:22","nodeType":"YulExpressionStatement","src":"5023:33:22"},{"nativeSrc":"5065:17:22","nodeType":"YulAssignment","src":"5065:17:22","value":{"name":"value_1","nativeSrc":"5075:7:22","nodeType":"YulIdentifier","src":"5075:7:22"},"variableNames":[{"name":"value1","nativeSrc":"5065:6:22","nodeType":"YulIdentifier","src":"5065:6:22"}]},{"nativeSrc":"5091:16:22","nodeType":"YulVariableDeclaration","src":"5091:16:22","value":{"kind":"number","nativeSrc":"5106:1:22","nodeType":"YulLiteral","src":"5106:1:22","type":"","value":"0"},"variables":[{"name":"value_2","nativeSrc":"5095:7:22","nodeType":"YulTypedName","src":"5095:7:22","type":""}]},{"nativeSrc":"5116:43:22","nodeType":"YulAssignment","src":"5116:43:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5144:9:22","nodeType":"YulIdentifier","src":"5144:9:22"},{"kind":"number","nativeSrc":"5155:2:22","nodeType":"YulLiteral","src":"5155:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5140:3:22","nodeType":"YulIdentifier","src":"5140:3:22"},"nativeSrc":"5140:18:22","nodeType":"YulFunctionCall","src":"5140:18:22"}],"functionName":{"name":"calldataload","nativeSrc":"5127:12:22","nodeType":"YulIdentifier","src":"5127:12:22"},"nativeSrc":"5127:32:22","nodeType":"YulFunctionCall","src":"5127:32:22"},"variableNames":[{"name":"value_2","nativeSrc":"5116:7:22","nodeType":"YulIdentifier","src":"5116:7:22"}]},{"nativeSrc":"5168:17:22","nodeType":"YulAssignment","src":"5168:17:22","value":{"name":"value_2","nativeSrc":"5178:7:22","nodeType":"YulIdentifier","src":"5178:7:22"},"variableNames":[{"name":"value2","nativeSrc":"5168:6:22","nodeType":"YulIdentifier","src":"5168:6:22"}]},{"nativeSrc":"5194:16:22","nodeType":"YulVariableDeclaration","src":"5194:16:22","value":{"kind":"number","nativeSrc":"5209:1:22","nodeType":"YulLiteral","src":"5209:1:22","type":"","value":"0"},"variables":[{"name":"value_3","nativeSrc":"5198:7:22","nodeType":"YulTypedName","src":"5198:7:22","type":""}]},{"nativeSrc":"5219:43:22","nodeType":"YulAssignment","src":"5219:43:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5247:9:22","nodeType":"YulIdentifier","src":"5247:9:22"},{"kind":"number","nativeSrc":"5258:2:22","nodeType":"YulLiteral","src":"5258:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"5243:3:22","nodeType":"YulIdentifier","src":"5243:3:22"},"nativeSrc":"5243:18:22","nodeType":"YulFunctionCall","src":"5243:18:22"}],"functionName":{"name":"calldataload","nativeSrc":"5230:12:22","nodeType":"YulIdentifier","src":"5230:12:22"},"nativeSrc":"5230:32:22","nodeType":"YulFunctionCall","src":"5230:32:22"},"variableNames":[{"name":"value_3","nativeSrc":"5219:7:22","nodeType":"YulIdentifier","src":"5219:7:22"}]},{"nativeSrc":"5271:17:22","nodeType":"YulAssignment","src":"5271:17:22","value":{"name":"value_3","nativeSrc":"5281:7:22","nodeType":"YulIdentifier","src":"5281:7:22"},"variableNames":[{"name":"value3","nativeSrc":"5271:6:22","nodeType":"YulIdentifier","src":"5271:6:22"}]},{"nativeSrc":"5297:48:22","nodeType":"YulVariableDeclaration","src":"5297:48:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5329:9:22","nodeType":"YulIdentifier","src":"5329:9:22"},{"kind":"number","nativeSrc":"5340:3:22","nodeType":"YulLiteral","src":"5340:3:22","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"5325:3:22","nodeType":"YulIdentifier","src":"5325:3:22"},"nativeSrc":"5325:19:22","nodeType":"YulFunctionCall","src":"5325:19:22"}],"functionName":{"name":"calldataload","nativeSrc":"5312:12:22","nodeType":"YulIdentifier","src":"5312:12:22"},"nativeSrc":"5312:33:22","nodeType":"YulFunctionCall","src":"5312:33:22"},"variables":[{"name":"value_4","nativeSrc":"5301:7:22","nodeType":"YulTypedName","src":"5301:7:22","type":""}]},{"body":{"nativeSrc":"5397:16:22","nodeType":"YulBlock","src":"5397:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5406:1:22","nodeType":"YulLiteral","src":"5406:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"5409:1:22","nodeType":"YulLiteral","src":"5409:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5399:6:22","nodeType":"YulIdentifier","src":"5399:6:22"},"nativeSrc":"5399:12:22","nodeType":"YulFunctionCall","src":"5399:12:22"},"nativeSrc":"5399:12:22","nodeType":"YulExpressionStatement","src":"5399:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value_4","nativeSrc":"5367:7:22","nodeType":"YulIdentifier","src":"5367:7:22"},{"arguments":[{"name":"value_4","nativeSrc":"5380:7:22","nodeType":"YulIdentifier","src":"5380:7:22"},{"kind":"number","nativeSrc":"5389:4:22","nodeType":"YulLiteral","src":"5389:4:22","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"5376:3:22","nodeType":"YulIdentifier","src":"5376:3:22"},"nativeSrc":"5376:18:22","nodeType":"YulFunctionCall","src":"5376:18:22"}],"functionName":{"name":"eq","nativeSrc":"5364:2:22","nodeType":"YulIdentifier","src":"5364:2:22"},"nativeSrc":"5364:31:22","nodeType":"YulFunctionCall","src":"5364:31:22"}],"functionName":{"name":"iszero","nativeSrc":"5357:6:22","nodeType":"YulIdentifier","src":"5357:6:22"},"nativeSrc":"5357:39:22","nodeType":"YulFunctionCall","src":"5357:39:22"},"nativeSrc":"5354:59:22","nodeType":"YulIf","src":"5354:59:22"},{"nativeSrc":"5422:17:22","nodeType":"YulAssignment","src":"5422:17:22","value":{"name":"value_4","nativeSrc":"5432:7:22","nodeType":"YulIdentifier","src":"5432:7:22"},"variableNames":[{"name":"value4","nativeSrc":"5422:6:22","nodeType":"YulIdentifier","src":"5422:6:22"}]},{"nativeSrc":"5448:16:22","nodeType":"YulVariableDeclaration","src":"5448:16:22","value":{"kind":"number","nativeSrc":"5463:1:22","nodeType":"YulLiteral","src":"5463:1:22","type":"","value":"0"},"variables":[{"name":"value_5","nativeSrc":"5452:7:22","nodeType":"YulTypedName","src":"5452:7:22","type":""}]},{"nativeSrc":"5473:44:22","nodeType":"YulAssignment","src":"5473:44:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5501:9:22","nodeType":"YulIdentifier","src":"5501:9:22"},{"kind":"number","nativeSrc":"5512:3:22","nodeType":"YulLiteral","src":"5512:3:22","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"5497:3:22","nodeType":"YulIdentifier","src":"5497:3:22"},"nativeSrc":"5497:19:22","nodeType":"YulFunctionCall","src":"5497:19:22"}],"functionName":{"name":"calldataload","nativeSrc":"5484:12:22","nodeType":"YulIdentifier","src":"5484:12:22"},"nativeSrc":"5484:33:22","nodeType":"YulFunctionCall","src":"5484:33:22"},"variableNames":[{"name":"value_5","nativeSrc":"5473:7:22","nodeType":"YulIdentifier","src":"5473:7:22"}]},{"nativeSrc":"5526:17:22","nodeType":"YulAssignment","src":"5526:17:22","value":{"name":"value_5","nativeSrc":"5536:7:22","nodeType":"YulIdentifier","src":"5536:7:22"},"variableNames":[{"name":"value5","nativeSrc":"5526:6:22","nodeType":"YulIdentifier","src":"5526:6:22"}]},{"nativeSrc":"5552:16:22","nodeType":"YulVariableDeclaration","src":"5552:16:22","value":{"kind":"number","nativeSrc":"5567:1:22","nodeType":"YulLiteral","src":"5567:1:22","type":"","value":"0"},"variables":[{"name":"value_6","nativeSrc":"5556:7:22","nodeType":"YulTypedName","src":"5556:7:22","type":""}]},{"nativeSrc":"5577:44:22","nodeType":"YulAssignment","src":"5577:44:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5605:9:22","nodeType":"YulIdentifier","src":"5605:9:22"},{"kind":"number","nativeSrc":"5616:3:22","nodeType":"YulLiteral","src":"5616:3:22","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"5601:3:22","nodeType":"YulIdentifier","src":"5601:3:22"},"nativeSrc":"5601:19:22","nodeType":"YulFunctionCall","src":"5601:19:22"}],"functionName":{"name":"calldataload","nativeSrc":"5588:12:22","nodeType":"YulIdentifier","src":"5588:12:22"},"nativeSrc":"5588:33:22","nodeType":"YulFunctionCall","src":"5588:33:22"},"variableNames":[{"name":"value_6","nativeSrc":"5577:7:22","nodeType":"YulIdentifier","src":"5577:7:22"}]},{"nativeSrc":"5630:17:22","nodeType":"YulAssignment","src":"5630:17:22","value":{"name":"value_6","nativeSrc":"5640:7:22","nodeType":"YulIdentifier","src":"5640:7:22"},"variableNames":[{"name":"value6","nativeSrc":"5630:6:22","nodeType":"YulIdentifier","src":"5630:6:22"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nativeSrc":"4616:1037:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4704:9:22","nodeType":"YulTypedName","src":"4704:9:22","type":""},{"name":"dataEnd","nativeSrc":"4715:7:22","nodeType":"YulTypedName","src":"4715:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4727:6:22","nodeType":"YulTypedName","src":"4727:6:22","type":""},{"name":"value1","nativeSrc":"4735:6:22","nodeType":"YulTypedName","src":"4735:6:22","type":""},{"name":"value2","nativeSrc":"4743:6:22","nodeType":"YulTypedName","src":"4743:6:22","type":""},{"name":"value3","nativeSrc":"4751:6:22","nodeType":"YulTypedName","src":"4751:6:22","type":""},{"name":"value4","nativeSrc":"4759:6:22","nodeType":"YulTypedName","src":"4759:6:22","type":""},{"name":"value5","nativeSrc":"4767:6:22","nodeType":"YulTypedName","src":"4767:6:22","type":""},{"name":"value6","nativeSrc":"4775:6:22","nodeType":"YulTypedName","src":"4775:6:22","type":""}],"src":"4616:1037:22"},{"body":{"nativeSrc":"5745:301:22","nodeType":"YulBlock","src":"5745:301:22","statements":[{"body":{"nativeSrc":"5791:16:22","nodeType":"YulBlock","src":"5791:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5800:1:22","nodeType":"YulLiteral","src":"5800:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"5803:1:22","nodeType":"YulLiteral","src":"5803:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5793:6:22","nodeType":"YulIdentifier","src":"5793:6:22"},"nativeSrc":"5793:12:22","nodeType":"YulFunctionCall","src":"5793:12:22"},"nativeSrc":"5793:12:22","nodeType":"YulExpressionStatement","src":"5793:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5766:7:22","nodeType":"YulIdentifier","src":"5766:7:22"},{"name":"headStart","nativeSrc":"5775:9:22","nodeType":"YulIdentifier","src":"5775:9:22"}],"functionName":{"name":"sub","nativeSrc":"5762:3:22","nodeType":"YulIdentifier","src":"5762:3:22"},"nativeSrc":"5762:23:22","nodeType":"YulFunctionCall","src":"5762:23:22"},{"kind":"number","nativeSrc":"5787:2:22","nodeType":"YulLiteral","src":"5787:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"5758:3:22","nodeType":"YulIdentifier","src":"5758:3:22"},"nativeSrc":"5758:32:22","nodeType":"YulFunctionCall","src":"5758:32:22"},"nativeSrc":"5755:52:22","nodeType":"YulIf","src":"5755:52:22"},{"nativeSrc":"5816:36:22","nodeType":"YulVariableDeclaration","src":"5816:36:22","value":{"arguments":[{"name":"headStart","nativeSrc":"5842:9:22","nodeType":"YulIdentifier","src":"5842:9:22"}],"functionName":{"name":"calldataload","nativeSrc":"5829:12:22","nodeType":"YulIdentifier","src":"5829:12:22"},"nativeSrc":"5829:23:22","nodeType":"YulFunctionCall","src":"5829:23:22"},"variables":[{"name":"value","nativeSrc":"5820:5:22","nodeType":"YulTypedName","src":"5820:5:22","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"5886:5:22","nodeType":"YulIdentifier","src":"5886:5:22"}],"functionName":{"name":"validator_revert_address","nativeSrc":"5861:24:22","nodeType":"YulIdentifier","src":"5861:24:22"},"nativeSrc":"5861:31:22","nodeType":"YulFunctionCall","src":"5861:31:22"},"nativeSrc":"5861:31:22","nodeType":"YulExpressionStatement","src":"5861:31:22"},{"nativeSrc":"5901:15:22","nodeType":"YulAssignment","src":"5901:15:22","value":{"name":"value","nativeSrc":"5911:5:22","nodeType":"YulIdentifier","src":"5911:5:22"},"variableNames":[{"name":"value0","nativeSrc":"5901:6:22","nodeType":"YulIdentifier","src":"5901:6:22"}]},{"nativeSrc":"5925:47:22","nodeType":"YulVariableDeclaration","src":"5925:47:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5957:9:22","nodeType":"YulIdentifier","src":"5957:9:22"},{"kind":"number","nativeSrc":"5968:2:22","nodeType":"YulLiteral","src":"5968:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5953:3:22","nodeType":"YulIdentifier","src":"5953:3:22"},"nativeSrc":"5953:18:22","nodeType":"YulFunctionCall","src":"5953:18:22"}],"functionName":{"name":"calldataload","nativeSrc":"5940:12:22","nodeType":"YulIdentifier","src":"5940:12:22"},"nativeSrc":"5940:32:22","nodeType":"YulFunctionCall","src":"5940:32:22"},"variables":[{"name":"value_1","nativeSrc":"5929:7:22","nodeType":"YulTypedName","src":"5929:7:22","type":""}]},{"expression":{"arguments":[{"name":"value_1","nativeSrc":"6006:7:22","nodeType":"YulIdentifier","src":"6006:7:22"}],"functionName":{"name":"validator_revert_address","nativeSrc":"5981:24:22","nodeType":"YulIdentifier","src":"5981:24:22"},"nativeSrc":"5981:33:22","nodeType":"YulFunctionCall","src":"5981:33:22"},"nativeSrc":"5981:33:22","nodeType":"YulExpressionStatement","src":"5981:33:22"},{"nativeSrc":"6023:17:22","nodeType":"YulAssignment","src":"6023:17:22","value":{"name":"value_1","nativeSrc":"6033:7:22","nodeType":"YulIdentifier","src":"6033:7:22"},"variableNames":[{"name":"value1","nativeSrc":"6023:6:22","nodeType":"YulIdentifier","src":"6023:6:22"}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"5658:388:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5703:9:22","nodeType":"YulTypedName","src":"5703:9:22","type":""},{"name":"dataEnd","nativeSrc":"5714:7:22","nodeType":"YulTypedName","src":"5714:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5726:6:22","nodeType":"YulTypedName","src":"5726:6:22","type":""},{"name":"value1","nativeSrc":"5734:6:22","nodeType":"YulTypedName","src":"5734:6:22","type":""}],"src":"5658:388:22"},{"body":{"nativeSrc":"6172:102:22","nodeType":"YulBlock","src":"6172:102:22","statements":[{"nativeSrc":"6182:26:22","nodeType":"YulAssignment","src":"6182:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"6194:9:22","nodeType":"YulIdentifier","src":"6194:9:22"},{"kind":"number","nativeSrc":"6205:2:22","nodeType":"YulLiteral","src":"6205:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6190:3:22","nodeType":"YulIdentifier","src":"6190:3:22"},"nativeSrc":"6190:18:22","nodeType":"YulFunctionCall","src":"6190:18:22"},"variableNames":[{"name":"tail","nativeSrc":"6182:4:22","nodeType":"YulIdentifier","src":"6182:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"6224:9:22","nodeType":"YulIdentifier","src":"6224:9:22"},{"arguments":[{"name":"value0","nativeSrc":"6239:6:22","nodeType":"YulIdentifier","src":"6239:6:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6255:3:22","nodeType":"YulLiteral","src":"6255:3:22","type":"","value":"160"},{"kind":"number","nativeSrc":"6260:1:22","nodeType":"YulLiteral","src":"6260:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"6251:3:22","nodeType":"YulIdentifier","src":"6251:3:22"},"nativeSrc":"6251:11:22","nodeType":"YulFunctionCall","src":"6251:11:22"},{"kind":"number","nativeSrc":"6264:1:22","nodeType":"YulLiteral","src":"6264:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"6247:3:22","nodeType":"YulIdentifier","src":"6247:3:22"},"nativeSrc":"6247:19:22","nodeType":"YulFunctionCall","src":"6247:19:22"}],"functionName":{"name":"and","nativeSrc":"6235:3:22","nodeType":"YulIdentifier","src":"6235:3:22"},"nativeSrc":"6235:32:22","nodeType":"YulFunctionCall","src":"6235:32:22"}],"functionName":{"name":"mstore","nativeSrc":"6217:6:22","nodeType":"YulIdentifier","src":"6217:6:22"},"nativeSrc":"6217:51:22","nodeType":"YulFunctionCall","src":"6217:51:22"},"nativeSrc":"6217:51:22","nodeType":"YulExpressionStatement","src":"6217:51:22"}]},"name":"abi_encode_tuple_t_contract$_OysterVault_$8069__to_t_address__fromStack_reversed","nativeSrc":"6051:223:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6141:9:22","nodeType":"YulTypedName","src":"6141:9:22","type":""},{"name":"value0","nativeSrc":"6152:6:22","nodeType":"YulTypedName","src":"6152:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6163:4:22","nodeType":"YulTypedName","src":"6163:4:22","type":""}],"src":"6051:223:22"},{"body":{"nativeSrc":"6334:325:22","nodeType":"YulBlock","src":"6334:325:22","statements":[{"nativeSrc":"6344:22:22","nodeType":"YulAssignment","src":"6344:22:22","value":{"arguments":[{"kind":"number","nativeSrc":"6358:1:22","nodeType":"YulLiteral","src":"6358:1:22","type":"","value":"1"},{"name":"data","nativeSrc":"6361:4:22","nodeType":"YulIdentifier","src":"6361:4:22"}],"functionName":{"name":"shr","nativeSrc":"6354:3:22","nodeType":"YulIdentifier","src":"6354:3:22"},"nativeSrc":"6354:12:22","nodeType":"YulFunctionCall","src":"6354:12:22"},"variableNames":[{"name":"length","nativeSrc":"6344:6:22","nodeType":"YulIdentifier","src":"6344:6:22"}]},{"nativeSrc":"6375:38:22","nodeType":"YulVariableDeclaration","src":"6375:38:22","value":{"arguments":[{"name":"data","nativeSrc":"6405:4:22","nodeType":"YulIdentifier","src":"6405:4:22"},{"kind":"number","nativeSrc":"6411:1:22","nodeType":"YulLiteral","src":"6411:1:22","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"6401:3:22","nodeType":"YulIdentifier","src":"6401:3:22"},"nativeSrc":"6401:12:22","nodeType":"YulFunctionCall","src":"6401:12:22"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"6379:18:22","nodeType":"YulTypedName","src":"6379:18:22","type":""}]},{"body":{"nativeSrc":"6452:31:22","nodeType":"YulBlock","src":"6452:31:22","statements":[{"nativeSrc":"6454:27:22","nodeType":"YulAssignment","src":"6454:27:22","value":{"arguments":[{"name":"length","nativeSrc":"6468:6:22","nodeType":"YulIdentifier","src":"6468:6:22"},{"kind":"number","nativeSrc":"6476:4:22","nodeType":"YulLiteral","src":"6476:4:22","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"6464:3:22","nodeType":"YulIdentifier","src":"6464:3:22"},"nativeSrc":"6464:17:22","nodeType":"YulFunctionCall","src":"6464:17:22"},"variableNames":[{"name":"length","nativeSrc":"6454:6:22","nodeType":"YulIdentifier","src":"6454:6:22"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"6432:18:22","nodeType":"YulIdentifier","src":"6432:18:22"}],"functionName":{"name":"iszero","nativeSrc":"6425:6:22","nodeType":"YulIdentifier","src":"6425:6:22"},"nativeSrc":"6425:26:22","nodeType":"YulFunctionCall","src":"6425:26:22"},"nativeSrc":"6422:61:22","nodeType":"YulIf","src":"6422:61:22"},{"body":{"nativeSrc":"6542:111:22","nodeType":"YulBlock","src":"6542:111:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6563:1:22","nodeType":"YulLiteral","src":"6563:1:22","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"6570:3:22","nodeType":"YulLiteral","src":"6570:3:22","type":"","value":"224"},{"kind":"number","nativeSrc":"6575:10:22","nodeType":"YulLiteral","src":"6575:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"6566:3:22","nodeType":"YulIdentifier","src":"6566:3:22"},"nativeSrc":"6566:20:22","nodeType":"YulFunctionCall","src":"6566:20:22"}],"functionName":{"name":"mstore","nativeSrc":"6556:6:22","nodeType":"YulIdentifier","src":"6556:6:22"},"nativeSrc":"6556:31:22","nodeType":"YulFunctionCall","src":"6556:31:22"},"nativeSrc":"6556:31:22","nodeType":"YulExpressionStatement","src":"6556:31:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6607:1:22","nodeType":"YulLiteral","src":"6607:1:22","type":"","value":"4"},{"kind":"number","nativeSrc":"6610:4:22","nodeType":"YulLiteral","src":"6610:4:22","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"6600:6:22","nodeType":"YulIdentifier","src":"6600:6:22"},"nativeSrc":"6600:15:22","nodeType":"YulFunctionCall","src":"6600:15:22"},"nativeSrc":"6600:15:22","nodeType":"YulExpressionStatement","src":"6600:15:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6635:1:22","nodeType":"YulLiteral","src":"6635:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"6638:4:22","nodeType":"YulLiteral","src":"6638:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"6628:6:22","nodeType":"YulIdentifier","src":"6628:6:22"},"nativeSrc":"6628:15:22","nodeType":"YulFunctionCall","src":"6628:15:22"},"nativeSrc":"6628:15:22","nodeType":"YulExpressionStatement","src":"6628:15:22"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"6498:18:22","nodeType":"YulIdentifier","src":"6498:18:22"},{"arguments":[{"name":"length","nativeSrc":"6521:6:22","nodeType":"YulIdentifier","src":"6521:6:22"},{"kind":"number","nativeSrc":"6529:2:22","nodeType":"YulLiteral","src":"6529:2:22","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"6518:2:22","nodeType":"YulIdentifier","src":"6518:2:22"},"nativeSrc":"6518:14:22","nodeType":"YulFunctionCall","src":"6518:14:22"}],"functionName":{"name":"eq","nativeSrc":"6495:2:22","nodeType":"YulIdentifier","src":"6495:2:22"},"nativeSrc":"6495:38:22","nodeType":"YulFunctionCall","src":"6495:38:22"},"nativeSrc":"6492:161:22","nodeType":"YulIf","src":"6492:161:22"}]},"name":"extract_byte_array_length","nativeSrc":"6279:380:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"6314:4:22","nodeType":"YulTypedName","src":"6314:4:22","type":""}],"returnVariables":[{"name":"length","nativeSrc":"6323:6:22","nodeType":"YulTypedName","src":"6323:6:22","type":""}],"src":"6279:380:22"},{"body":{"nativeSrc":"6838:297:22","nodeType":"YulBlock","src":"6838:297:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"6855:9:22","nodeType":"YulIdentifier","src":"6855:9:22"},{"kind":"number","nativeSrc":"6866:2:22","nodeType":"YulLiteral","src":"6866:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"6848:6:22","nodeType":"YulIdentifier","src":"6848:6:22"},"nativeSrc":"6848:21:22","nodeType":"YulFunctionCall","src":"6848:21:22"},"nativeSrc":"6848:21:22","nodeType":"YulExpressionStatement","src":"6848:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6889:9:22","nodeType":"YulIdentifier","src":"6889:9:22"},{"kind":"number","nativeSrc":"6900:2:22","nodeType":"YulLiteral","src":"6900:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6885:3:22","nodeType":"YulIdentifier","src":"6885:3:22"},"nativeSrc":"6885:18:22","nodeType":"YulFunctionCall","src":"6885:18:22"},{"kind":"number","nativeSrc":"6905:2:22","nodeType":"YulLiteral","src":"6905:2:22","type":"","value":"67"}],"functionName":{"name":"mstore","nativeSrc":"6878:6:22","nodeType":"YulIdentifier","src":"6878:6:22"},"nativeSrc":"6878:30:22","nodeType":"YulFunctionCall","src":"6878:30:22"},"nativeSrc":"6878:30:22","nodeType":"YulExpressionStatement","src":"6878:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6928:9:22","nodeType":"YulIdentifier","src":"6928:9:22"},{"kind":"number","nativeSrc":"6939:2:22","nodeType":"YulLiteral","src":"6939:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6924:3:22","nodeType":"YulIdentifier","src":"6924:3:22"},"nativeSrc":"6924:18:22","nodeType":"YulFunctionCall","src":"6924:18:22"},{"hexValue":"546869732066756e6374696f6e2063616e206f6e6c792062652063616c6c6564","kind":"string","nativeSrc":"6944:34:22","nodeType":"YulLiteral","src":"6944:34:22","type":"","value":"This function can only be called"}],"functionName":{"name":"mstore","nativeSrc":"6917:6:22","nodeType":"YulIdentifier","src":"6917:6:22"},"nativeSrc":"6917:62:22","nodeType":"YulFunctionCall","src":"6917:62:22"},"nativeSrc":"6917:62:22","nodeType":"YulExpressionStatement","src":"6917:62:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6999:9:22","nodeType":"YulIdentifier","src":"6999:9:22"},{"kind":"number","nativeSrc":"7010:2:22","nodeType":"YulLiteral","src":"7010:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6995:3:22","nodeType":"YulIdentifier","src":"6995:3:22"},"nativeSrc":"6995:18:22","nodeType":"YulFunctionCall","src":"6995:18:22"},{"hexValue":"206279207468652076616c6964204d75736963436f6e74726163742061646472","kind":"string","nativeSrc":"7015:34:22","nodeType":"YulLiteral","src":"7015:34:22","type":"","value":" by the valid MusicContract addr"}],"functionName":{"name":"mstore","nativeSrc":"6988:6:22","nodeType":"YulIdentifier","src":"6988:6:22"},"nativeSrc":"6988:62:22","nodeType":"YulFunctionCall","src":"6988:62:22"},"nativeSrc":"6988:62:22","nodeType":"YulExpressionStatement","src":"6988:62:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7070:9:22","nodeType":"YulIdentifier","src":"7070:9:22"},{"kind":"number","nativeSrc":"7081:3:22","nodeType":"YulLiteral","src":"7081:3:22","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"7066:3:22","nodeType":"YulIdentifier","src":"7066:3:22"},"nativeSrc":"7066:19:22","nodeType":"YulFunctionCall","src":"7066:19:22"},{"hexValue":"657373","kind":"string","nativeSrc":"7087:5:22","nodeType":"YulLiteral","src":"7087:5:22","type":"","value":"ess"}],"functionName":{"name":"mstore","nativeSrc":"7059:6:22","nodeType":"YulIdentifier","src":"7059:6:22"},"nativeSrc":"7059:34:22","nodeType":"YulFunctionCall","src":"7059:34:22"},"nativeSrc":"7059:34:22","nodeType":"YulExpressionStatement","src":"7059:34:22"},{"nativeSrc":"7102:27:22","nodeType":"YulAssignment","src":"7102:27:22","value":{"arguments":[{"name":"headStart","nativeSrc":"7114:9:22","nodeType":"YulIdentifier","src":"7114:9:22"},{"kind":"number","nativeSrc":"7125:3:22","nodeType":"YulLiteral","src":"7125:3:22","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"7110:3:22","nodeType":"YulIdentifier","src":"7110:3:22"},"nativeSrc":"7110:19:22","nodeType":"YulFunctionCall","src":"7110:19:22"},"variableNames":[{"name":"tail","nativeSrc":"7102:4:22","nodeType":"YulIdentifier","src":"7102:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_a498ec71a51c4164b1345afc4bf81a1bdbdf153eb10e276ed1006f2e929fdc84__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"6664:471:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6815:9:22","nodeType":"YulTypedName","src":"6815:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6829:4:22","nodeType":"YulTypedName","src":"6829:4:22","type":""}],"src":"6664:471:22"},{"body":{"nativeSrc":"7314:182:22","nodeType":"YulBlock","src":"7314:182:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"7331:9:22","nodeType":"YulIdentifier","src":"7331:9:22"},{"kind":"number","nativeSrc":"7342:2:22","nodeType":"YulLiteral","src":"7342:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"7324:6:22","nodeType":"YulIdentifier","src":"7324:6:22"},"nativeSrc":"7324:21:22","nodeType":"YulFunctionCall","src":"7324:21:22"},"nativeSrc":"7324:21:22","nodeType":"YulExpressionStatement","src":"7324:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7365:9:22","nodeType":"YulIdentifier","src":"7365:9:22"},{"kind":"number","nativeSrc":"7376:2:22","nodeType":"YulLiteral","src":"7376:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7361:3:22","nodeType":"YulIdentifier","src":"7361:3:22"},"nativeSrc":"7361:18:22","nodeType":"YulFunctionCall","src":"7361:18:22"},{"kind":"number","nativeSrc":"7381:2:22","nodeType":"YulLiteral","src":"7381:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"7354:6:22","nodeType":"YulIdentifier","src":"7354:6:22"},"nativeSrc":"7354:30:22","nodeType":"YulFunctionCall","src":"7354:30:22"},"nativeSrc":"7354:30:22","nodeType":"YulExpressionStatement","src":"7354:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7404:9:22","nodeType":"YulIdentifier","src":"7404:9:22"},{"kind":"number","nativeSrc":"7415:2:22","nodeType":"YulLiteral","src":"7415:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7400:3:22","nodeType":"YulIdentifier","src":"7400:3:22"},"nativeSrc":"7400:18:22","nodeType":"YulFunctionCall","src":"7400:18:22"},{"hexValue":"416d6f756e74206d7573742062652067726561746572207468616e207a65726f","kind":"string","nativeSrc":"7420:34:22","nodeType":"YulLiteral","src":"7420:34:22","type":"","value":"Amount must be greater than zero"}],"functionName":{"name":"mstore","nativeSrc":"7393:6:22","nodeType":"YulIdentifier","src":"7393:6:22"},"nativeSrc":"7393:62:22","nodeType":"YulFunctionCall","src":"7393:62:22"},"nativeSrc":"7393:62:22","nodeType":"YulExpressionStatement","src":"7393:62:22"},{"nativeSrc":"7464:26:22","nodeType":"YulAssignment","src":"7464:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"7476:9:22","nodeType":"YulIdentifier","src":"7476:9:22"},{"kind":"number","nativeSrc":"7487:2:22","nodeType":"YulLiteral","src":"7487:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"7472:3:22","nodeType":"YulIdentifier","src":"7472:3:22"},"nativeSrc":"7472:18:22","nodeType":"YulFunctionCall","src":"7472:18:22"},"variableNames":[{"name":"tail","nativeSrc":"7464:4:22","nodeType":"YulIdentifier","src":"7464:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"7140:356:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7291:9:22","nodeType":"YulTypedName","src":"7291:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7305:4:22","nodeType":"YulTypedName","src":"7305:4:22","type":""}],"src":"7140:356:22"},{"body":{"nativeSrc":"7630:145:22","nodeType":"YulBlock","src":"7630:145:22","statements":[{"nativeSrc":"7640:26:22","nodeType":"YulAssignment","src":"7640:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"7652:9:22","nodeType":"YulIdentifier","src":"7652:9:22"},{"kind":"number","nativeSrc":"7663:2:22","nodeType":"YulLiteral","src":"7663:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7648:3:22","nodeType":"YulIdentifier","src":"7648:3:22"},"nativeSrc":"7648:18:22","nodeType":"YulFunctionCall","src":"7648:18:22"},"variableNames":[{"name":"tail","nativeSrc":"7640:4:22","nodeType":"YulIdentifier","src":"7640:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"7682:9:22","nodeType":"YulIdentifier","src":"7682:9:22"},{"arguments":[{"name":"value0","nativeSrc":"7697:6:22","nodeType":"YulIdentifier","src":"7697:6:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"7713:3:22","nodeType":"YulLiteral","src":"7713:3:22","type":"","value":"160"},{"kind":"number","nativeSrc":"7718:1:22","nodeType":"YulLiteral","src":"7718:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"7709:3:22","nodeType":"YulIdentifier","src":"7709:3:22"},"nativeSrc":"7709:11:22","nodeType":"YulFunctionCall","src":"7709:11:22"},{"kind":"number","nativeSrc":"7722:1:22","nodeType":"YulLiteral","src":"7722:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"7705:3:22","nodeType":"YulIdentifier","src":"7705:3:22"},"nativeSrc":"7705:19:22","nodeType":"YulFunctionCall","src":"7705:19:22"}],"functionName":{"name":"and","nativeSrc":"7693:3:22","nodeType":"YulIdentifier","src":"7693:3:22"},"nativeSrc":"7693:32:22","nodeType":"YulFunctionCall","src":"7693:32:22"}],"functionName":{"name":"mstore","nativeSrc":"7675:6:22","nodeType":"YulIdentifier","src":"7675:6:22"},"nativeSrc":"7675:51:22","nodeType":"YulFunctionCall","src":"7675:51:22"},"nativeSrc":"7675:51:22","nodeType":"YulExpressionStatement","src":"7675:51:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7746:9:22","nodeType":"YulIdentifier","src":"7746:9:22"},{"kind":"number","nativeSrc":"7757:2:22","nodeType":"YulLiteral","src":"7757:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7742:3:22","nodeType":"YulIdentifier","src":"7742:3:22"},"nativeSrc":"7742:18:22","nodeType":"YulFunctionCall","src":"7742:18:22"},{"name":"value1","nativeSrc":"7762:6:22","nodeType":"YulIdentifier","src":"7762:6:22"}],"functionName":{"name":"mstore","nativeSrc":"7735:6:22","nodeType":"YulIdentifier","src":"7735:6:22"},"nativeSrc":"7735:34:22","nodeType":"YulFunctionCall","src":"7735:34:22"},"nativeSrc":"7735:34:22","nodeType":"YulExpressionStatement","src":"7735:34:22"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"7501:274:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7591:9:22","nodeType":"YulTypedName","src":"7591:9:22","type":""},{"name":"value1","nativeSrc":"7602:6:22","nodeType":"YulTypedName","src":"7602:6:22","type":""},{"name":"value0","nativeSrc":"7610:6:22","nodeType":"YulTypedName","src":"7610:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7621:4:22","nodeType":"YulTypedName","src":"7621:4:22","type":""}],"src":"7501:274:22"},{"body":{"nativeSrc":"7858:199:22","nodeType":"YulBlock","src":"7858:199:22","statements":[{"body":{"nativeSrc":"7904:16:22","nodeType":"YulBlock","src":"7904:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7913:1:22","nodeType":"YulLiteral","src":"7913:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"7916:1:22","nodeType":"YulLiteral","src":"7916:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7906:6:22","nodeType":"YulIdentifier","src":"7906:6:22"},"nativeSrc":"7906:12:22","nodeType":"YulFunctionCall","src":"7906:12:22"},"nativeSrc":"7906:12:22","nodeType":"YulExpressionStatement","src":"7906:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"7879:7:22","nodeType":"YulIdentifier","src":"7879:7:22"},{"name":"headStart","nativeSrc":"7888:9:22","nodeType":"YulIdentifier","src":"7888:9:22"}],"functionName":{"name":"sub","nativeSrc":"7875:3:22","nodeType":"YulIdentifier","src":"7875:3:22"},"nativeSrc":"7875:23:22","nodeType":"YulFunctionCall","src":"7875:23:22"},{"kind":"number","nativeSrc":"7900:2:22","nodeType":"YulLiteral","src":"7900:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"7871:3:22","nodeType":"YulIdentifier","src":"7871:3:22"},"nativeSrc":"7871:32:22","nodeType":"YulFunctionCall","src":"7871:32:22"},"nativeSrc":"7868:52:22","nodeType":"YulIf","src":"7868:52:22"},{"nativeSrc":"7929:29:22","nodeType":"YulVariableDeclaration","src":"7929:29:22","value":{"arguments":[{"name":"headStart","nativeSrc":"7948:9:22","nodeType":"YulIdentifier","src":"7948:9:22"}],"functionName":{"name":"mload","nativeSrc":"7942:5:22","nodeType":"YulIdentifier","src":"7942:5:22"},"nativeSrc":"7942:16:22","nodeType":"YulFunctionCall","src":"7942:16:22"},"variables":[{"name":"value","nativeSrc":"7933:5:22","nodeType":"YulTypedName","src":"7933:5:22","type":""}]},{"body":{"nativeSrc":"8011:16:22","nodeType":"YulBlock","src":"8011:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8020:1:22","nodeType":"YulLiteral","src":"8020:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"8023:1:22","nodeType":"YulLiteral","src":"8023:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"8013:6:22","nodeType":"YulIdentifier","src":"8013:6:22"},"nativeSrc":"8013:12:22","nodeType":"YulFunctionCall","src":"8013:12:22"},"nativeSrc":"8013:12:22","nodeType":"YulExpressionStatement","src":"8013:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"7980:5:22","nodeType":"YulIdentifier","src":"7980:5:22"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"8001:5:22","nodeType":"YulIdentifier","src":"8001:5:22"}],"functionName":{"name":"iszero","nativeSrc":"7994:6:22","nodeType":"YulIdentifier","src":"7994:6:22"},"nativeSrc":"7994:13:22","nodeType":"YulFunctionCall","src":"7994:13:22"}],"functionName":{"name":"iszero","nativeSrc":"7987:6:22","nodeType":"YulIdentifier","src":"7987:6:22"},"nativeSrc":"7987:21:22","nodeType":"YulFunctionCall","src":"7987:21:22"}],"functionName":{"name":"eq","nativeSrc":"7977:2:22","nodeType":"YulIdentifier","src":"7977:2:22"},"nativeSrc":"7977:32:22","nodeType":"YulFunctionCall","src":"7977:32:22"}],"functionName":{"name":"iszero","nativeSrc":"7970:6:22","nodeType":"YulIdentifier","src":"7970:6:22"},"nativeSrc":"7970:40:22","nodeType":"YulFunctionCall","src":"7970:40:22"},"nativeSrc":"7967:60:22","nodeType":"YulIf","src":"7967:60:22"},{"nativeSrc":"8036:15:22","nodeType":"YulAssignment","src":"8036:15:22","value":{"name":"value","nativeSrc":"8046:5:22","nodeType":"YulIdentifier","src":"8046:5:22"},"variableNames":[{"name":"value0","nativeSrc":"8036:6:22","nodeType":"YulIdentifier","src":"8036:6:22"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nativeSrc":"7780:277:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7824:9:22","nodeType":"YulTypedName","src":"7824:9:22","type":""},{"name":"dataEnd","nativeSrc":"7835:7:22","nodeType":"YulTypedName","src":"7835:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"7847:6:22","nodeType":"YulTypedName","src":"7847:6:22","type":""}],"src":"7780:277:22"},{"body":{"nativeSrc":"8094:95:22","nodeType":"YulBlock","src":"8094:95:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8111:1:22","nodeType":"YulLiteral","src":"8111:1:22","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"8118:3:22","nodeType":"YulLiteral","src":"8118:3:22","type":"","value":"224"},{"kind":"number","nativeSrc":"8123:10:22","nodeType":"YulLiteral","src":"8123:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"8114:3:22","nodeType":"YulIdentifier","src":"8114:3:22"},"nativeSrc":"8114:20:22","nodeType":"YulFunctionCall","src":"8114:20:22"}],"functionName":{"name":"mstore","nativeSrc":"8104:6:22","nodeType":"YulIdentifier","src":"8104:6:22"},"nativeSrc":"8104:31:22","nodeType":"YulFunctionCall","src":"8104:31:22"},"nativeSrc":"8104:31:22","nodeType":"YulExpressionStatement","src":"8104:31:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"8151:1:22","nodeType":"YulLiteral","src":"8151:1:22","type":"","value":"4"},{"kind":"number","nativeSrc":"8154:4:22","nodeType":"YulLiteral","src":"8154:4:22","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"8144:6:22","nodeType":"YulIdentifier","src":"8144:6:22"},"nativeSrc":"8144:15:22","nodeType":"YulFunctionCall","src":"8144:15:22"},"nativeSrc":"8144:15:22","nodeType":"YulExpressionStatement","src":"8144:15:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"8175:1:22","nodeType":"YulLiteral","src":"8175:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"8178:4:22","nodeType":"YulLiteral","src":"8178:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"8168:6:22","nodeType":"YulIdentifier","src":"8168:6:22"},"nativeSrc":"8168:15:22","nodeType":"YulFunctionCall","src":"8168:15:22"},"nativeSrc":"8168:15:22","nodeType":"YulExpressionStatement","src":"8168:15:22"}]},"name":"panic_error_0x11","nativeSrc":"8062:127:22","nodeType":"YulFunctionDefinition","src":"8062:127:22"},{"body":{"nativeSrc":"8246:116:22","nodeType":"YulBlock","src":"8246:116:22","statements":[{"nativeSrc":"8256:20:22","nodeType":"YulAssignment","src":"8256:20:22","value":{"arguments":[{"name":"x","nativeSrc":"8271:1:22","nodeType":"YulIdentifier","src":"8271:1:22"},{"name":"y","nativeSrc":"8274:1:22","nodeType":"YulIdentifier","src":"8274:1:22"}],"functionName":{"name":"mul","nativeSrc":"8267:3:22","nodeType":"YulIdentifier","src":"8267:3:22"},"nativeSrc":"8267:9:22","nodeType":"YulFunctionCall","src":"8267:9:22"},"variableNames":[{"name":"product","nativeSrc":"8256:7:22","nodeType":"YulIdentifier","src":"8256:7:22"}]},{"body":{"nativeSrc":"8334:22:22","nodeType":"YulBlock","src":"8334:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"8336:16:22","nodeType":"YulIdentifier","src":"8336:16:22"},"nativeSrc":"8336:18:22","nodeType":"YulFunctionCall","src":"8336:18:22"},"nativeSrc":"8336:18:22","nodeType":"YulExpressionStatement","src":"8336:18:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nativeSrc":"8305:1:22","nodeType":"YulIdentifier","src":"8305:1:22"}],"functionName":{"name":"iszero","nativeSrc":"8298:6:22","nodeType":"YulIdentifier","src":"8298:6:22"},"nativeSrc":"8298:9:22","nodeType":"YulFunctionCall","src":"8298:9:22"},{"arguments":[{"name":"y","nativeSrc":"8312:1:22","nodeType":"YulIdentifier","src":"8312:1:22"},{"arguments":[{"name":"product","nativeSrc":"8319:7:22","nodeType":"YulIdentifier","src":"8319:7:22"},{"name":"x","nativeSrc":"8328:1:22","nodeType":"YulIdentifier","src":"8328:1:22"}],"functionName":{"name":"div","nativeSrc":"8315:3:22","nodeType":"YulIdentifier","src":"8315:3:22"},"nativeSrc":"8315:15:22","nodeType":"YulFunctionCall","src":"8315:15:22"}],"functionName":{"name":"eq","nativeSrc":"8309:2:22","nodeType":"YulIdentifier","src":"8309:2:22"},"nativeSrc":"8309:22:22","nodeType":"YulFunctionCall","src":"8309:22:22"}],"functionName":{"name":"or","nativeSrc":"8295:2:22","nodeType":"YulIdentifier","src":"8295:2:22"},"nativeSrc":"8295:37:22","nodeType":"YulFunctionCall","src":"8295:37:22"}],"functionName":{"name":"iszero","nativeSrc":"8288:6:22","nodeType":"YulIdentifier","src":"8288:6:22"},"nativeSrc":"8288:45:22","nodeType":"YulFunctionCall","src":"8288:45:22"},"nativeSrc":"8285:71:22","nodeType":"YulIf","src":"8285:71:22"}]},"name":"checked_mul_t_uint256","nativeSrc":"8194:168:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"8225:1:22","nodeType":"YulTypedName","src":"8225:1:22","type":""},{"name":"y","nativeSrc":"8228:1:22","nodeType":"YulTypedName","src":"8228:1:22","type":""}],"returnVariables":[{"name":"product","nativeSrc":"8234:7:22","nodeType":"YulTypedName","src":"8234:7:22","type":""}],"src":"8194:168:22"},{"body":{"nativeSrc":"8541:171:22","nodeType":"YulBlock","src":"8541:171:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"8558:9:22","nodeType":"YulIdentifier","src":"8558:9:22"},{"kind":"number","nativeSrc":"8569:2:22","nodeType":"YulLiteral","src":"8569:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"8551:6:22","nodeType":"YulIdentifier","src":"8551:6:22"},"nativeSrc":"8551:21:22","nodeType":"YulFunctionCall","src":"8551:21:22"},"nativeSrc":"8551:21:22","nodeType":"YulExpressionStatement","src":"8551:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8592:9:22","nodeType":"YulIdentifier","src":"8592:9:22"},{"kind":"number","nativeSrc":"8603:2:22","nodeType":"YulLiteral","src":"8603:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8588:3:22","nodeType":"YulIdentifier","src":"8588:3:22"},"nativeSrc":"8588:18:22","nodeType":"YulFunctionCall","src":"8588:18:22"},{"kind":"number","nativeSrc":"8608:2:22","nodeType":"YulLiteral","src":"8608:2:22","type":"","value":"21"}],"functionName":{"name":"mstore","nativeSrc":"8581:6:22","nodeType":"YulIdentifier","src":"8581:6:22"},"nativeSrc":"8581:30:22","nodeType":"YulFunctionCall","src":"8581:30:22"},"nativeSrc":"8581:30:22","nodeType":"YulExpressionStatement","src":"8581:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8631:9:22","nodeType":"YulIdentifier","src":"8631:9:22"},{"kind":"number","nativeSrc":"8642:2:22","nodeType":"YulLiteral","src":"8642:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8627:3:22","nodeType":"YulIdentifier","src":"8627:3:22"},"nativeSrc":"8627:18:22","nodeType":"YulFunctionCall","src":"8627:18:22"},{"hexValue":"5661756c742061646472657373206e6f7420736574","kind":"string","nativeSrc":"8647:23:22","nodeType":"YulLiteral","src":"8647:23:22","type":"","value":"Vault address not set"}],"functionName":{"name":"mstore","nativeSrc":"8620:6:22","nodeType":"YulIdentifier","src":"8620:6:22"},"nativeSrc":"8620:51:22","nodeType":"YulFunctionCall","src":"8620:51:22"},"nativeSrc":"8620:51:22","nodeType":"YulExpressionStatement","src":"8620:51:22"},{"nativeSrc":"8680:26:22","nodeType":"YulAssignment","src":"8680:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"8692:9:22","nodeType":"YulIdentifier","src":"8692:9:22"},{"kind":"number","nativeSrc":"8703:2:22","nodeType":"YulLiteral","src":"8703:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"8688:3:22","nodeType":"YulIdentifier","src":"8688:3:22"},"nativeSrc":"8688:18:22","nodeType":"YulFunctionCall","src":"8688:18:22"},"variableNames":[{"name":"tail","nativeSrc":"8680:4:22","nodeType":"YulIdentifier","src":"8680:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_2c0bfaf7cb6539155436714f38c4cb42f5eda75e9ba56026786122f864cadb75__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"8367:345:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8518:9:22","nodeType":"YulTypedName","src":"8518:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8532:4:22","nodeType":"YulTypedName","src":"8532:4:22","type":""}],"src":"8367:345:22"},{"body":{"nativeSrc":"8891:171:22","nodeType":"YulBlock","src":"8891:171:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"8908:9:22","nodeType":"YulIdentifier","src":"8908:9:22"},{"kind":"number","nativeSrc":"8919:2:22","nodeType":"YulLiteral","src":"8919:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"8901:6:22","nodeType":"YulIdentifier","src":"8901:6:22"},"nativeSrc":"8901:21:22","nodeType":"YulFunctionCall","src":"8901:21:22"},"nativeSrc":"8901:21:22","nodeType":"YulExpressionStatement","src":"8901:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8942:9:22","nodeType":"YulIdentifier","src":"8942:9:22"},{"kind":"number","nativeSrc":"8953:2:22","nodeType":"YulLiteral","src":"8953:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8938:3:22","nodeType":"YulIdentifier","src":"8938:3:22"},"nativeSrc":"8938:18:22","nodeType":"YulFunctionCall","src":"8938:18:22"},{"kind":"number","nativeSrc":"8958:2:22","nodeType":"YulLiteral","src":"8958:2:22","type":"","value":"21"}],"functionName":{"name":"mstore","nativeSrc":"8931:6:22","nodeType":"YulIdentifier","src":"8931:6:22"},"nativeSrc":"8931:30:22","nodeType":"YulFunctionCall","src":"8931:30:22"},"nativeSrc":"8931:30:22","nodeType":"YulExpressionStatement","src":"8931:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8981:9:22","nodeType":"YulIdentifier","src":"8981:9:22"},{"kind":"number","nativeSrc":"8992:2:22","nodeType":"YulLiteral","src":"8992:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8977:3:22","nodeType":"YulIdentifier","src":"8977:3:22"},"nativeSrc":"8977:18:22","nodeType":"YulFunctionCall","src":"8977:18:22"},{"hexValue":"496e76616c6964207661756c742061646472657373","kind":"string","nativeSrc":"8997:23:22","nodeType":"YulLiteral","src":"8997:23:22","type":"","value":"Invalid vault address"}],"functionName":{"name":"mstore","nativeSrc":"8970:6:22","nodeType":"YulIdentifier","src":"8970:6:22"},"nativeSrc":"8970:51:22","nodeType":"YulFunctionCall","src":"8970:51:22"},"nativeSrc":"8970:51:22","nodeType":"YulExpressionStatement","src":"8970:51:22"},{"nativeSrc":"9030:26:22","nodeType":"YulAssignment","src":"9030:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"9042:9:22","nodeType":"YulIdentifier","src":"9042:9:22"},{"kind":"number","nativeSrc":"9053:2:22","nodeType":"YulLiteral","src":"9053:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"9038:3:22","nodeType":"YulIdentifier","src":"9038:3:22"},"nativeSrc":"9038:18:22","nodeType":"YulFunctionCall","src":"9038:18:22"},"variableNames":[{"name":"tail","nativeSrc":"9030:4:22","nodeType":"YulIdentifier","src":"9030:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_1d4b05e5256c70cb19cbeae4f5dbc68cbf63906eed2b6782a552ca8fc044422e__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"8717:345:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8868:9:22","nodeType":"YulTypedName","src":"8868:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8882:4:22","nodeType":"YulTypedName","src":"8882:4:22","type":""}],"src":"8717:345:22"},{"body":{"nativeSrc":"9241:167:22","nodeType":"YulBlock","src":"9241:167:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"9258:9:22","nodeType":"YulIdentifier","src":"9258:9:22"},{"kind":"number","nativeSrc":"9269:2:22","nodeType":"YulLiteral","src":"9269:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"9251:6:22","nodeType":"YulIdentifier","src":"9251:6:22"},"nativeSrc":"9251:21:22","nodeType":"YulFunctionCall","src":"9251:21:22"},"nativeSrc":"9251:21:22","nodeType":"YulExpressionStatement","src":"9251:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9292:9:22","nodeType":"YulIdentifier","src":"9292:9:22"},{"kind":"number","nativeSrc":"9303:2:22","nodeType":"YulLiteral","src":"9303:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9288:3:22","nodeType":"YulIdentifier","src":"9288:3:22"},"nativeSrc":"9288:18:22","nodeType":"YulFunctionCall","src":"9288:18:22"},{"kind":"number","nativeSrc":"9308:2:22","nodeType":"YulLiteral","src":"9308:2:22","type":"","value":"17"}],"functionName":{"name":"mstore","nativeSrc":"9281:6:22","nodeType":"YulIdentifier","src":"9281:6:22"},"nativeSrc":"9281:30:22","nodeType":"YulFunctionCall","src":"9281:30:22"},"nativeSrc":"9281:30:22","nodeType":"YulExpressionStatement","src":"9281:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9331:9:22","nodeType":"YulIdentifier","src":"9331:9:22"},{"kind":"number","nativeSrc":"9342:2:22","nodeType":"YulLiteral","src":"9342:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"9327:3:22","nodeType":"YulIdentifier","src":"9327:3:22"},"nativeSrc":"9327:18:22","nodeType":"YulFunctionCall","src":"9327:18:22"},{"hexValue":"5661756c7420616c726561647920736574","kind":"string","nativeSrc":"9347:19:22","nodeType":"YulLiteral","src":"9347:19:22","type":"","value":"Vault already set"}],"functionName":{"name":"mstore","nativeSrc":"9320:6:22","nodeType":"YulIdentifier","src":"9320:6:22"},"nativeSrc":"9320:47:22","nodeType":"YulFunctionCall","src":"9320:47:22"},"nativeSrc":"9320:47:22","nodeType":"YulExpressionStatement","src":"9320:47:22"},{"nativeSrc":"9376:26:22","nodeType":"YulAssignment","src":"9376:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"9388:9:22","nodeType":"YulIdentifier","src":"9388:9:22"},{"kind":"number","nativeSrc":"9399:2:22","nodeType":"YulLiteral","src":"9399:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"9384:3:22","nodeType":"YulIdentifier","src":"9384:3:22"},"nativeSrc":"9384:18:22","nodeType":"YulFunctionCall","src":"9384:18:22"},"variableNames":[{"name":"tail","nativeSrc":"9376:4:22","nodeType":"YulIdentifier","src":"9376:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_e38982e17d63c9cd56d683e451db7cf94d5da609636149268849933c3fcb1d61__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"9067:341:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9218:9:22","nodeType":"YulTypedName","src":"9218:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9232:4:22","nodeType":"YulTypedName","src":"9232:4:22","type":""}],"src":"9067:341:22"},{"body":{"nativeSrc":"9445:95:22","nodeType":"YulBlock","src":"9445:95:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9462:1:22","nodeType":"YulLiteral","src":"9462:1:22","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"9469:3:22","nodeType":"YulLiteral","src":"9469:3:22","type":"","value":"224"},{"kind":"number","nativeSrc":"9474:10:22","nodeType":"YulLiteral","src":"9474:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"9465:3:22","nodeType":"YulIdentifier","src":"9465:3:22"},"nativeSrc":"9465:20:22","nodeType":"YulFunctionCall","src":"9465:20:22"}],"functionName":{"name":"mstore","nativeSrc":"9455:6:22","nodeType":"YulIdentifier","src":"9455:6:22"},"nativeSrc":"9455:31:22","nodeType":"YulFunctionCall","src":"9455:31:22"},"nativeSrc":"9455:31:22","nodeType":"YulExpressionStatement","src":"9455:31:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"9502:1:22","nodeType":"YulLiteral","src":"9502:1:22","type":"","value":"4"},{"kind":"number","nativeSrc":"9505:4:22","nodeType":"YulLiteral","src":"9505:4:22","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"9495:6:22","nodeType":"YulIdentifier","src":"9495:6:22"},"nativeSrc":"9495:15:22","nodeType":"YulFunctionCall","src":"9495:15:22"},"nativeSrc":"9495:15:22","nodeType":"YulExpressionStatement","src":"9495:15:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"9526:1:22","nodeType":"YulLiteral","src":"9526:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"9529:4:22","nodeType":"YulLiteral","src":"9529:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"9519:6:22","nodeType":"YulIdentifier","src":"9519:6:22"},"nativeSrc":"9519:15:22","nodeType":"YulFunctionCall","src":"9519:15:22"},"nativeSrc":"9519:15:22","nodeType":"YulExpressionStatement","src":"9519:15:22"}]},"name":"panic_error_0x41","nativeSrc":"9413:127:22","nodeType":"YulFunctionDefinition","src":"9413:127:22"},{"body":{"nativeSrc":"9593:77:22","nodeType":"YulBlock","src":"9593:77:22","statements":[{"nativeSrc":"9603:16:22","nodeType":"YulAssignment","src":"9603:16:22","value":{"arguments":[{"name":"x","nativeSrc":"9614:1:22","nodeType":"YulIdentifier","src":"9614:1:22"},{"name":"y","nativeSrc":"9617:1:22","nodeType":"YulIdentifier","src":"9617:1:22"}],"functionName":{"name":"add","nativeSrc":"9610:3:22","nodeType":"YulIdentifier","src":"9610:3:22"},"nativeSrc":"9610:9:22","nodeType":"YulFunctionCall","src":"9610:9:22"},"variableNames":[{"name":"sum","nativeSrc":"9603:3:22","nodeType":"YulIdentifier","src":"9603:3:22"}]},{"body":{"nativeSrc":"9642:22:22","nodeType":"YulBlock","src":"9642:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"9644:16:22","nodeType":"YulIdentifier","src":"9644:16:22"},"nativeSrc":"9644:18:22","nodeType":"YulFunctionCall","src":"9644:18:22"},"nativeSrc":"9644:18:22","nodeType":"YulExpressionStatement","src":"9644:18:22"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"9634:1:22","nodeType":"YulIdentifier","src":"9634:1:22"},{"name":"sum","nativeSrc":"9637:3:22","nodeType":"YulIdentifier","src":"9637:3:22"}],"functionName":{"name":"gt","nativeSrc":"9631:2:22","nodeType":"YulIdentifier","src":"9631:2:22"},"nativeSrc":"9631:10:22","nodeType":"YulFunctionCall","src":"9631:10:22"},"nativeSrc":"9628:36:22","nodeType":"YulIf","src":"9628:36:22"}]},"name":"checked_add_t_uint256","nativeSrc":"9545:125:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"9576:1:22","nodeType":"YulTypedName","src":"9576:1:22","type":""},{"name":"y","nativeSrc":"9579:1:22","nodeType":"YulTypedName","src":"9579:1:22","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"9585:3:22","nodeType":"YulTypedName","src":"9585:3:22","type":""}],"src":"9545:125:22"},{"body":{"nativeSrc":"9849:225:22","nodeType":"YulBlock","src":"9849:225:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"9866:9:22","nodeType":"YulIdentifier","src":"9866:9:22"},{"kind":"number","nativeSrc":"9877:2:22","nodeType":"YulLiteral","src":"9877:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"9859:6:22","nodeType":"YulIdentifier","src":"9859:6:22"},"nativeSrc":"9859:21:22","nodeType":"YulFunctionCall","src":"9859:21:22"},"nativeSrc":"9859:21:22","nodeType":"YulExpressionStatement","src":"9859:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9900:9:22","nodeType":"YulIdentifier","src":"9900:9:22"},{"kind":"number","nativeSrc":"9911:2:22","nodeType":"YulLiteral","src":"9911:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9896:3:22","nodeType":"YulIdentifier","src":"9896:3:22"},"nativeSrc":"9896:18:22","nodeType":"YulFunctionCall","src":"9896:18:22"},{"kind":"number","nativeSrc":"9916:2:22","nodeType":"YulLiteral","src":"9916:2:22","type":"","value":"35"}],"functionName":{"name":"mstore","nativeSrc":"9889:6:22","nodeType":"YulIdentifier","src":"9889:6:22"},"nativeSrc":"9889:30:22","nodeType":"YulFunctionCall","src":"9889:30:22"},"nativeSrc":"9889:30:22","nodeType":"YulExpressionStatement","src":"9889:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9939:9:22","nodeType":"YulIdentifier","src":"9939:9:22"},{"kind":"number","nativeSrc":"9950:2:22","nodeType":"YulLiteral","src":"9950:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"9935:3:22","nodeType":"YulIdentifier","src":"9935:3:22"},"nativeSrc":"9935:18:22","nodeType":"YulFunctionCall","src":"9935:18:22"},{"hexValue":"496e73756666696369656e74205765692073656e7420746f2062757920746f6b","kind":"string","nativeSrc":"9955:34:22","nodeType":"YulLiteral","src":"9955:34:22","type":"","value":"Insufficient Wei sent to buy tok"}],"functionName":{"name":"mstore","nativeSrc":"9928:6:22","nodeType":"YulIdentifier","src":"9928:6:22"},"nativeSrc":"9928:62:22","nodeType":"YulFunctionCall","src":"9928:62:22"},"nativeSrc":"9928:62:22","nodeType":"YulExpressionStatement","src":"9928:62:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10010:9:22","nodeType":"YulIdentifier","src":"10010:9:22"},{"kind":"number","nativeSrc":"10021:2:22","nodeType":"YulLiteral","src":"10021:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"10006:3:22","nodeType":"YulIdentifier","src":"10006:3:22"},"nativeSrc":"10006:18:22","nodeType":"YulFunctionCall","src":"10006:18:22"},{"hexValue":"656e73","kind":"string","nativeSrc":"10026:5:22","nodeType":"YulLiteral","src":"10026:5:22","type":"","value":"ens"}],"functionName":{"name":"mstore","nativeSrc":"9999:6:22","nodeType":"YulIdentifier","src":"9999:6:22"},"nativeSrc":"9999:33:22","nodeType":"YulFunctionCall","src":"9999:33:22"},"nativeSrc":"9999:33:22","nodeType":"YulExpressionStatement","src":"9999:33:22"},{"nativeSrc":"10041:27:22","nodeType":"YulAssignment","src":"10041:27:22","value":{"arguments":[{"name":"headStart","nativeSrc":"10053:9:22","nodeType":"YulIdentifier","src":"10053:9:22"},{"kind":"number","nativeSrc":"10064:3:22","nodeType":"YulLiteral","src":"10064:3:22","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"10049:3:22","nodeType":"YulIdentifier","src":"10049:3:22"},"nativeSrc":"10049:19:22","nodeType":"YulFunctionCall","src":"10049:19:22"},"variableNames":[{"name":"tail","nativeSrc":"10041:4:22","nodeType":"YulIdentifier","src":"10041:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_86507a7d7d18d00edab41068eefc3ef3ff83737ee53442e526a0ea723f603949__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"9675:399:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9826:9:22","nodeType":"YulTypedName","src":"9826:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9840:4:22","nodeType":"YulTypedName","src":"9840:4:22","type":""}],"src":"9675:399:22"},{"body":{"nativeSrc":"10128:79:22","nodeType":"YulBlock","src":"10128:79:22","statements":[{"nativeSrc":"10138:17:22","nodeType":"YulAssignment","src":"10138:17:22","value":{"arguments":[{"name":"x","nativeSrc":"10150:1:22","nodeType":"YulIdentifier","src":"10150:1:22"},{"name":"y","nativeSrc":"10153:1:22","nodeType":"YulIdentifier","src":"10153:1:22"}],"functionName":{"name":"sub","nativeSrc":"10146:3:22","nodeType":"YulIdentifier","src":"10146:3:22"},"nativeSrc":"10146:9:22","nodeType":"YulFunctionCall","src":"10146:9:22"},"variableNames":[{"name":"diff","nativeSrc":"10138:4:22","nodeType":"YulIdentifier","src":"10138:4:22"}]},{"body":{"nativeSrc":"10179:22:22","nodeType":"YulBlock","src":"10179:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"10181:16:22","nodeType":"YulIdentifier","src":"10181:16:22"},"nativeSrc":"10181:18:22","nodeType":"YulFunctionCall","src":"10181:18:22"},"nativeSrc":"10181:18:22","nodeType":"YulExpressionStatement","src":"10181:18:22"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"10170:4:22","nodeType":"YulIdentifier","src":"10170:4:22"},{"name":"x","nativeSrc":"10176:1:22","nodeType":"YulIdentifier","src":"10176:1:22"}],"functionName":{"name":"gt","nativeSrc":"10167:2:22","nodeType":"YulIdentifier","src":"10167:2:22"},"nativeSrc":"10167:11:22","nodeType":"YulFunctionCall","src":"10167:11:22"},"nativeSrc":"10164:37:22","nodeType":"YulIf","src":"10164:37:22"}]},"name":"checked_sub_t_uint256","nativeSrc":"10079:128:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"10110:1:22","nodeType":"YulTypedName","src":"10110:1:22","type":""},{"name":"y","nativeSrc":"10113:1:22","nodeType":"YulTypedName","src":"10113:1:22","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"10119:4:22","nodeType":"YulTypedName","src":"10119:4:22","type":""}],"src":"10079:128:22"},{"body":{"nativeSrc":"10293:103:22","nodeType":"YulBlock","src":"10293:103:22","statements":[{"body":{"nativeSrc":"10339:16:22","nodeType":"YulBlock","src":"10339:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10348:1:22","nodeType":"YulLiteral","src":"10348:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"10351:1:22","nodeType":"YulLiteral","src":"10351:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"10341:6:22","nodeType":"YulIdentifier","src":"10341:6:22"},"nativeSrc":"10341:12:22","nodeType":"YulFunctionCall","src":"10341:12:22"},"nativeSrc":"10341:12:22","nodeType":"YulExpressionStatement","src":"10341:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"10314:7:22","nodeType":"YulIdentifier","src":"10314:7:22"},{"name":"headStart","nativeSrc":"10323:9:22","nodeType":"YulIdentifier","src":"10323:9:22"}],"functionName":{"name":"sub","nativeSrc":"10310:3:22","nodeType":"YulIdentifier","src":"10310:3:22"},"nativeSrc":"10310:23:22","nodeType":"YulFunctionCall","src":"10310:23:22"},{"kind":"number","nativeSrc":"10335:2:22","nodeType":"YulLiteral","src":"10335:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"10306:3:22","nodeType":"YulIdentifier","src":"10306:3:22"},"nativeSrc":"10306:32:22","nodeType":"YulFunctionCall","src":"10306:32:22"},"nativeSrc":"10303:52:22","nodeType":"YulIf","src":"10303:52:22"},{"nativeSrc":"10364:26:22","nodeType":"YulAssignment","src":"10364:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"10380:9:22","nodeType":"YulIdentifier","src":"10380:9:22"}],"functionName":{"name":"mload","nativeSrc":"10374:5:22","nodeType":"YulIdentifier","src":"10374:5:22"},"nativeSrc":"10374:16:22","nodeType":"YulFunctionCall","src":"10374:16:22"},"variableNames":[{"name":"value0","nativeSrc":"10364:6:22","nodeType":"YulIdentifier","src":"10364:6:22"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nativeSrc":"10212:184:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10259:9:22","nodeType":"YulTypedName","src":"10259:9:22","type":""},{"name":"dataEnd","nativeSrc":"10270:7:22","nodeType":"YulTypedName","src":"10270:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"10282:6:22","nodeType":"YulTypedName","src":"10282:6:22","type":""}],"src":"10212:184:22"},{"body":{"nativeSrc":"10575:231:22","nodeType":"YulBlock","src":"10575:231:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"10592:9:22","nodeType":"YulIdentifier","src":"10592:9:22"},{"kind":"number","nativeSrc":"10603:2:22","nodeType":"YulLiteral","src":"10603:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"10585:6:22","nodeType":"YulIdentifier","src":"10585:6:22"},"nativeSrc":"10585:21:22","nodeType":"YulFunctionCall","src":"10585:21:22"},"nativeSrc":"10585:21:22","nodeType":"YulExpressionStatement","src":"10585:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10626:9:22","nodeType":"YulIdentifier","src":"10626:9:22"},{"kind":"number","nativeSrc":"10637:2:22","nodeType":"YulLiteral","src":"10637:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10622:3:22","nodeType":"YulIdentifier","src":"10622:3:22"},"nativeSrc":"10622:18:22","nodeType":"YulFunctionCall","src":"10622:18:22"},{"kind":"number","nativeSrc":"10642:2:22","nodeType":"YulLiteral","src":"10642:2:22","type":"","value":"41"}],"functionName":{"name":"mstore","nativeSrc":"10615:6:22","nodeType":"YulIdentifier","src":"10615:6:22"},"nativeSrc":"10615:30:22","nodeType":"YulFunctionCall","src":"10615:30:22"},"nativeSrc":"10615:30:22","nodeType":"YulExpressionStatement","src":"10615:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10665:9:22","nodeType":"YulIdentifier","src":"10665:9:22"},{"kind":"number","nativeSrc":"10676:2:22","nodeType":"YulLiteral","src":"10676:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"10661:3:22","nodeType":"YulIdentifier","src":"10661:3:22"},"nativeSrc":"10661:18:22","nodeType":"YulFunctionCall","src":"10661:18:22"},{"hexValue":"4e6f7420656e6f75676820746f6b656e7320696e204f7973746572546f6b656e","kind":"string","nativeSrc":"10681:34:22","nodeType":"YulLiteral","src":"10681:34:22","type":"","value":"Not enough tokens in OysterToken"}],"functionName":{"name":"mstore","nativeSrc":"10654:6:22","nodeType":"YulIdentifier","src":"10654:6:22"},"nativeSrc":"10654:62:22","nodeType":"YulFunctionCall","src":"10654:62:22"},"nativeSrc":"10654:62:22","nodeType":"YulExpressionStatement","src":"10654:62:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10736:9:22","nodeType":"YulIdentifier","src":"10736:9:22"},{"kind":"number","nativeSrc":"10747:2:22","nodeType":"YulLiteral","src":"10747:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"10732:3:22","nodeType":"YulIdentifier","src":"10732:3:22"},"nativeSrc":"10732:18:22","nodeType":"YulFunctionCall","src":"10732:18:22"},{"hexValue":"20636f6e7472616374","kind":"string","nativeSrc":"10752:11:22","nodeType":"YulLiteral","src":"10752:11:22","type":"","value":" contract"}],"functionName":{"name":"mstore","nativeSrc":"10725:6:22","nodeType":"YulIdentifier","src":"10725:6:22"},"nativeSrc":"10725:39:22","nodeType":"YulFunctionCall","src":"10725:39:22"},"nativeSrc":"10725:39:22","nodeType":"YulExpressionStatement","src":"10725:39:22"},{"nativeSrc":"10773:27:22","nodeType":"YulAssignment","src":"10773:27:22","value":{"arguments":[{"name":"headStart","nativeSrc":"10785:9:22","nodeType":"YulIdentifier","src":"10785:9:22"},{"kind":"number","nativeSrc":"10796:3:22","nodeType":"YulLiteral","src":"10796:3:22","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"10781:3:22","nodeType":"YulIdentifier","src":"10781:3:22"},"nativeSrc":"10781:19:22","nodeType":"YulFunctionCall","src":"10781:19:22"},"variableNames":[{"name":"tail","nativeSrc":"10773:4:22","nodeType":"YulIdentifier","src":"10773:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_ca3cad5b864a3d4af13eee9d3c0d044aa408ce904e7fe3c87ecd049c253491b7__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"10401:405:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10552:9:22","nodeType":"YulTypedName","src":"10552:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10566:4:22","nodeType":"YulTypedName","src":"10566:4:22","type":""}],"src":"10401:405:22"},{"body":{"nativeSrc":"11002:14:22","nodeType":"YulBlock","src":"11002:14:22","statements":[{"nativeSrc":"11004:10:22","nodeType":"YulAssignment","src":"11004:10:22","value":{"name":"pos","nativeSrc":"11011:3:22","nodeType":"YulIdentifier","src":"11011:3:22"},"variableNames":[{"name":"end","nativeSrc":"11004:3:22","nodeType":"YulIdentifier","src":"11004:3:22"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"10811:205:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"10986:3:22","nodeType":"YulTypedName","src":"10986:3:22","type":""}],"returnVariables":[{"name":"end","nativeSrc":"10994:3:22","nodeType":"YulTypedName","src":"10994:3:22","type":""}],"src":"10811:205:22"},{"body":{"nativeSrc":"11195:180:22","nodeType":"YulBlock","src":"11195:180:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"11212:9:22","nodeType":"YulIdentifier","src":"11212:9:22"},{"kind":"number","nativeSrc":"11223:2:22","nodeType":"YulLiteral","src":"11223:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"11205:6:22","nodeType":"YulIdentifier","src":"11205:6:22"},"nativeSrc":"11205:21:22","nodeType":"YulFunctionCall","src":"11205:21:22"},"nativeSrc":"11205:21:22","nodeType":"YulExpressionStatement","src":"11205:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11246:9:22","nodeType":"YulIdentifier","src":"11246:9:22"},{"kind":"number","nativeSrc":"11257:2:22","nodeType":"YulLiteral","src":"11257:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11242:3:22","nodeType":"YulIdentifier","src":"11242:3:22"},"nativeSrc":"11242:18:22","nodeType":"YulFunctionCall","src":"11242:18:22"},{"kind":"number","nativeSrc":"11262:2:22","nodeType":"YulLiteral","src":"11262:2:22","type":"","value":"30"}],"functionName":{"name":"mstore","nativeSrc":"11235:6:22","nodeType":"YulIdentifier","src":"11235:6:22"},"nativeSrc":"11235:30:22","nodeType":"YulFunctionCall","src":"11235:30:22"},"nativeSrc":"11235:30:22","nodeType":"YulExpressionStatement","src":"11235:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11285:9:22","nodeType":"YulIdentifier","src":"11285:9:22"},{"kind":"number","nativeSrc":"11296:2:22","nodeType":"YulLiteral","src":"11296:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"11281:3:22","nodeType":"YulIdentifier","src":"11281:3:22"},"nativeSrc":"11281:18:22","nodeType":"YulFunctionCall","src":"11281:18:22"},{"hexValue":"4661696c656420746f2073656e642072656d61696e696e67204574686572","kind":"string","nativeSrc":"11301:32:22","nodeType":"YulLiteral","src":"11301:32:22","type":"","value":"Failed to send remaining Ether"}],"functionName":{"name":"mstore","nativeSrc":"11274:6:22","nodeType":"YulIdentifier","src":"11274:6:22"},"nativeSrc":"11274:60:22","nodeType":"YulFunctionCall","src":"11274:60:22"},"nativeSrc":"11274:60:22","nodeType":"YulExpressionStatement","src":"11274:60:22"},{"nativeSrc":"11343:26:22","nodeType":"YulAssignment","src":"11343:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"11355:9:22","nodeType":"YulIdentifier","src":"11355:9:22"},{"kind":"number","nativeSrc":"11366:2:22","nodeType":"YulLiteral","src":"11366:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"11351:3:22","nodeType":"YulIdentifier","src":"11351:3:22"},"nativeSrc":"11351:18:22","nodeType":"YulFunctionCall","src":"11351:18:22"},"variableNames":[{"name":"tail","nativeSrc":"11343:4:22","nodeType":"YulIdentifier","src":"11343:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_fa207173f56547efb95af4cef634dbfa0d7f314b8618baeae97339d76512f226__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"11021:354:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11172:9:22","nodeType":"YulTypedName","src":"11172:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11186:4:22","nodeType":"YulTypedName","src":"11186:4:22","type":""}],"src":"11021:354:22"},{"body":{"nativeSrc":"11621:346:22","nodeType":"YulBlock","src":"11621:346:22","statements":[{"nativeSrc":"11631:27:22","nodeType":"YulAssignment","src":"11631:27:22","value":{"arguments":[{"name":"headStart","nativeSrc":"11643:9:22","nodeType":"YulIdentifier","src":"11643:9:22"},{"kind":"number","nativeSrc":"11654:3:22","nodeType":"YulLiteral","src":"11654:3:22","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"11639:3:22","nodeType":"YulIdentifier","src":"11639:3:22"},"nativeSrc":"11639:19:22","nodeType":"YulFunctionCall","src":"11639:19:22"},"variableNames":[{"name":"tail","nativeSrc":"11631:4:22","nodeType":"YulIdentifier","src":"11631:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"11674:9:22","nodeType":"YulIdentifier","src":"11674:9:22"},{"name":"value0","nativeSrc":"11685:6:22","nodeType":"YulIdentifier","src":"11685:6:22"}],"functionName":{"name":"mstore","nativeSrc":"11667:6:22","nodeType":"YulIdentifier","src":"11667:6:22"},"nativeSrc":"11667:25:22","nodeType":"YulFunctionCall","src":"11667:25:22"},"nativeSrc":"11667:25:22","nodeType":"YulExpressionStatement","src":"11667:25:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11712:9:22","nodeType":"YulIdentifier","src":"11712:9:22"},{"kind":"number","nativeSrc":"11723:2:22","nodeType":"YulLiteral","src":"11723:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11708:3:22","nodeType":"YulIdentifier","src":"11708:3:22"},"nativeSrc":"11708:18:22","nodeType":"YulFunctionCall","src":"11708:18:22"},{"arguments":[{"name":"value1","nativeSrc":"11732:6:22","nodeType":"YulIdentifier","src":"11732:6:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"11748:3:22","nodeType":"YulLiteral","src":"11748:3:22","type":"","value":"160"},{"kind":"number","nativeSrc":"11753:1:22","nodeType":"YulLiteral","src":"11753:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"11744:3:22","nodeType":"YulIdentifier","src":"11744:3:22"},"nativeSrc":"11744:11:22","nodeType":"YulFunctionCall","src":"11744:11:22"},{"kind":"number","nativeSrc":"11757:1:22","nodeType":"YulLiteral","src":"11757:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"11740:3:22","nodeType":"YulIdentifier","src":"11740:3:22"},"nativeSrc":"11740:19:22","nodeType":"YulFunctionCall","src":"11740:19:22"}],"functionName":{"name":"and","nativeSrc":"11728:3:22","nodeType":"YulIdentifier","src":"11728:3:22"},"nativeSrc":"11728:32:22","nodeType":"YulFunctionCall","src":"11728:32:22"}],"functionName":{"name":"mstore","nativeSrc":"11701:6:22","nodeType":"YulIdentifier","src":"11701:6:22"},"nativeSrc":"11701:60:22","nodeType":"YulFunctionCall","src":"11701:60:22"},"nativeSrc":"11701:60:22","nodeType":"YulExpressionStatement","src":"11701:60:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11781:9:22","nodeType":"YulIdentifier","src":"11781:9:22"},{"kind":"number","nativeSrc":"11792:2:22","nodeType":"YulLiteral","src":"11792:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"11777:3:22","nodeType":"YulIdentifier","src":"11777:3:22"},"nativeSrc":"11777:18:22","nodeType":"YulFunctionCall","src":"11777:18:22"},{"arguments":[{"name":"value2","nativeSrc":"11801:6:22","nodeType":"YulIdentifier","src":"11801:6:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"11817:3:22","nodeType":"YulLiteral","src":"11817:3:22","type":"","value":"160"},{"kind":"number","nativeSrc":"11822:1:22","nodeType":"YulLiteral","src":"11822:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"11813:3:22","nodeType":"YulIdentifier","src":"11813:3:22"},"nativeSrc":"11813:11:22","nodeType":"YulFunctionCall","src":"11813:11:22"},{"kind":"number","nativeSrc":"11826:1:22","nodeType":"YulLiteral","src":"11826:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"11809:3:22","nodeType":"YulIdentifier","src":"11809:3:22"},"nativeSrc":"11809:19:22","nodeType":"YulFunctionCall","src":"11809:19:22"}],"functionName":{"name":"and","nativeSrc":"11797:3:22","nodeType":"YulIdentifier","src":"11797:3:22"},"nativeSrc":"11797:32:22","nodeType":"YulFunctionCall","src":"11797:32:22"}],"functionName":{"name":"mstore","nativeSrc":"11770:6:22","nodeType":"YulIdentifier","src":"11770:6:22"},"nativeSrc":"11770:60:22","nodeType":"YulFunctionCall","src":"11770:60:22"},"nativeSrc":"11770:60:22","nodeType":"YulExpressionStatement","src":"11770:60:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11850:9:22","nodeType":"YulIdentifier","src":"11850:9:22"},{"kind":"number","nativeSrc":"11861:2:22","nodeType":"YulLiteral","src":"11861:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"11846:3:22","nodeType":"YulIdentifier","src":"11846:3:22"},"nativeSrc":"11846:18:22","nodeType":"YulFunctionCall","src":"11846:18:22"},{"name":"value3","nativeSrc":"11866:6:22","nodeType":"YulIdentifier","src":"11866:6:22"}],"functionName":{"name":"mstore","nativeSrc":"11839:6:22","nodeType":"YulIdentifier","src":"11839:6:22"},"nativeSrc":"11839:34:22","nodeType":"YulFunctionCall","src":"11839:34:22"},"nativeSrc":"11839:34:22","nodeType":"YulExpressionStatement","src":"11839:34:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11893:9:22","nodeType":"YulIdentifier","src":"11893:9:22"},{"kind":"number","nativeSrc":"11904:3:22","nodeType":"YulLiteral","src":"11904:3:22","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"11889:3:22","nodeType":"YulIdentifier","src":"11889:3:22"},"nativeSrc":"11889:19:22","nodeType":"YulFunctionCall","src":"11889:19:22"},{"name":"value4","nativeSrc":"11910:6:22","nodeType":"YulIdentifier","src":"11910:6:22"}],"functionName":{"name":"mstore","nativeSrc":"11882:6:22","nodeType":"YulIdentifier","src":"11882:6:22"},"nativeSrc":"11882:35:22","nodeType":"YulFunctionCall","src":"11882:35:22"},"nativeSrc":"11882:35:22","nodeType":"YulExpressionStatement","src":"11882:35:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11937:9:22","nodeType":"YulIdentifier","src":"11937:9:22"},{"kind":"number","nativeSrc":"11948:3:22","nodeType":"YulLiteral","src":"11948:3:22","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"11933:3:22","nodeType":"YulIdentifier","src":"11933:3:22"},"nativeSrc":"11933:19:22","nodeType":"YulFunctionCall","src":"11933:19:22"},{"name":"value5","nativeSrc":"11954:6:22","nodeType":"YulIdentifier","src":"11954:6:22"}],"functionName":{"name":"mstore","nativeSrc":"11926:6:22","nodeType":"YulIdentifier","src":"11926:6:22"},"nativeSrc":"11926:35:22","nodeType":"YulFunctionCall","src":"11926:35:22"},"nativeSrc":"11926:35:22","nodeType":"YulExpressionStatement","src":"11926:35:22"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"11380:587:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11550:9:22","nodeType":"YulTypedName","src":"11550:9:22","type":""},{"name":"value5","nativeSrc":"11561:6:22","nodeType":"YulTypedName","src":"11561:6:22","type":""},{"name":"value4","nativeSrc":"11569:6:22","nodeType":"YulTypedName","src":"11569:6:22","type":""},{"name":"value3","nativeSrc":"11577:6:22","nodeType":"YulTypedName","src":"11577:6:22","type":""},{"name":"value2","nativeSrc":"11585:6:22","nodeType":"YulTypedName","src":"11585:6:22","type":""},{"name":"value1","nativeSrc":"11593:6:22","nodeType":"YulTypedName","src":"11593:6:22","type":""},{"name":"value0","nativeSrc":"11601:6:22","nodeType":"YulTypedName","src":"11601:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11612:4:22","nodeType":"YulTypedName","src":"11612:4:22","type":""}],"src":"11380:587:22"},{"body":{"nativeSrc":"12101:171:22","nodeType":"YulBlock","src":"12101:171:22","statements":[{"nativeSrc":"12111:26:22","nodeType":"YulAssignment","src":"12111:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"12123:9:22","nodeType":"YulIdentifier","src":"12123:9:22"},{"kind":"number","nativeSrc":"12134:2:22","nodeType":"YulLiteral","src":"12134:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12119:3:22","nodeType":"YulIdentifier","src":"12119:3:22"},"nativeSrc":"12119:18:22","nodeType":"YulFunctionCall","src":"12119:18:22"},"variableNames":[{"name":"tail","nativeSrc":"12111:4:22","nodeType":"YulIdentifier","src":"12111:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"12153:9:22","nodeType":"YulIdentifier","src":"12153:9:22"},{"arguments":[{"name":"value0","nativeSrc":"12168:6:22","nodeType":"YulIdentifier","src":"12168:6:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"12184:3:22","nodeType":"YulLiteral","src":"12184:3:22","type":"","value":"160"},{"kind":"number","nativeSrc":"12189:1:22","nodeType":"YulLiteral","src":"12189:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"12180:3:22","nodeType":"YulIdentifier","src":"12180:3:22"},"nativeSrc":"12180:11:22","nodeType":"YulFunctionCall","src":"12180:11:22"},{"kind":"number","nativeSrc":"12193:1:22","nodeType":"YulLiteral","src":"12193:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"12176:3:22","nodeType":"YulIdentifier","src":"12176:3:22"},"nativeSrc":"12176:19:22","nodeType":"YulFunctionCall","src":"12176:19:22"}],"functionName":{"name":"and","nativeSrc":"12164:3:22","nodeType":"YulIdentifier","src":"12164:3:22"},"nativeSrc":"12164:32:22","nodeType":"YulFunctionCall","src":"12164:32:22"}],"functionName":{"name":"mstore","nativeSrc":"12146:6:22","nodeType":"YulIdentifier","src":"12146:6:22"},"nativeSrc":"12146:51:22","nodeType":"YulFunctionCall","src":"12146:51:22"},"nativeSrc":"12146:51:22","nodeType":"YulExpressionStatement","src":"12146:51:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12217:9:22","nodeType":"YulIdentifier","src":"12217:9:22"},{"kind":"number","nativeSrc":"12228:2:22","nodeType":"YulLiteral","src":"12228:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12213:3:22","nodeType":"YulIdentifier","src":"12213:3:22"},"nativeSrc":"12213:18:22","nodeType":"YulFunctionCall","src":"12213:18:22"},{"arguments":[{"name":"value1","nativeSrc":"12237:6:22","nodeType":"YulIdentifier","src":"12237:6:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"12253:3:22","nodeType":"YulLiteral","src":"12253:3:22","type":"","value":"160"},{"kind":"number","nativeSrc":"12258:1:22","nodeType":"YulLiteral","src":"12258:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"12249:3:22","nodeType":"YulIdentifier","src":"12249:3:22"},"nativeSrc":"12249:11:22","nodeType":"YulFunctionCall","src":"12249:11:22"},{"kind":"number","nativeSrc":"12262:1:22","nodeType":"YulLiteral","src":"12262:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"12245:3:22","nodeType":"YulIdentifier","src":"12245:3:22"},"nativeSrc":"12245:19:22","nodeType":"YulFunctionCall","src":"12245:19:22"}],"functionName":{"name":"and","nativeSrc":"12233:3:22","nodeType":"YulIdentifier","src":"12233:3:22"},"nativeSrc":"12233:32:22","nodeType":"YulFunctionCall","src":"12233:32:22"}],"functionName":{"name":"mstore","nativeSrc":"12206:6:22","nodeType":"YulIdentifier","src":"12206:6:22"},"nativeSrc":"12206:60:22","nodeType":"YulFunctionCall","src":"12206:60:22"},"nativeSrc":"12206:60:22","nodeType":"YulExpressionStatement","src":"12206:60:22"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nativeSrc":"11972:300:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12062:9:22","nodeType":"YulTypedName","src":"12062:9:22","type":""},{"name":"value1","nativeSrc":"12073:6:22","nodeType":"YulTypedName","src":"12073:6:22","type":""},{"name":"value0","nativeSrc":"12081:6:22","nodeType":"YulTypedName","src":"12081:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12092:4:22","nodeType":"YulTypedName","src":"12092:4:22","type":""}],"src":"11972:300:22"},{"body":{"nativeSrc":"12434:188:22","nodeType":"YulBlock","src":"12434:188:22","statements":[{"nativeSrc":"12444:26:22","nodeType":"YulAssignment","src":"12444:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"12456:9:22","nodeType":"YulIdentifier","src":"12456:9:22"},{"kind":"number","nativeSrc":"12467:2:22","nodeType":"YulLiteral","src":"12467:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"12452:3:22","nodeType":"YulIdentifier","src":"12452:3:22"},"nativeSrc":"12452:18:22","nodeType":"YulFunctionCall","src":"12452:18:22"},"variableNames":[{"name":"tail","nativeSrc":"12444:4:22","nodeType":"YulIdentifier","src":"12444:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"12486:9:22","nodeType":"YulIdentifier","src":"12486:9:22"},{"arguments":[{"name":"value0","nativeSrc":"12501:6:22","nodeType":"YulIdentifier","src":"12501:6:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"12517:3:22","nodeType":"YulLiteral","src":"12517:3:22","type":"","value":"160"},{"kind":"number","nativeSrc":"12522:1:22","nodeType":"YulLiteral","src":"12522:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"12513:3:22","nodeType":"YulIdentifier","src":"12513:3:22"},"nativeSrc":"12513:11:22","nodeType":"YulFunctionCall","src":"12513:11:22"},{"kind":"number","nativeSrc":"12526:1:22","nodeType":"YulLiteral","src":"12526:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"12509:3:22","nodeType":"YulIdentifier","src":"12509:3:22"},"nativeSrc":"12509:19:22","nodeType":"YulFunctionCall","src":"12509:19:22"}],"functionName":{"name":"and","nativeSrc":"12497:3:22","nodeType":"YulIdentifier","src":"12497:3:22"},"nativeSrc":"12497:32:22","nodeType":"YulFunctionCall","src":"12497:32:22"}],"functionName":{"name":"mstore","nativeSrc":"12479:6:22","nodeType":"YulIdentifier","src":"12479:6:22"},"nativeSrc":"12479:51:22","nodeType":"YulFunctionCall","src":"12479:51:22"},"nativeSrc":"12479:51:22","nodeType":"YulExpressionStatement","src":"12479:51:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12550:9:22","nodeType":"YulIdentifier","src":"12550:9:22"},{"kind":"number","nativeSrc":"12561:2:22","nodeType":"YulLiteral","src":"12561:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12546:3:22","nodeType":"YulIdentifier","src":"12546:3:22"},"nativeSrc":"12546:18:22","nodeType":"YulFunctionCall","src":"12546:18:22"},{"name":"value1","nativeSrc":"12566:6:22","nodeType":"YulIdentifier","src":"12566:6:22"}],"functionName":{"name":"mstore","nativeSrc":"12539:6:22","nodeType":"YulIdentifier","src":"12539:6:22"},"nativeSrc":"12539:34:22","nodeType":"YulFunctionCall","src":"12539:34:22"},"nativeSrc":"12539:34:22","nodeType":"YulExpressionStatement","src":"12539:34:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12593:9:22","nodeType":"YulIdentifier","src":"12593:9:22"},{"kind":"number","nativeSrc":"12604:2:22","nodeType":"YulLiteral","src":"12604:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12589:3:22","nodeType":"YulIdentifier","src":"12589:3:22"},"nativeSrc":"12589:18:22","nodeType":"YulFunctionCall","src":"12589:18:22"},{"name":"value2","nativeSrc":"12609:6:22","nodeType":"YulIdentifier","src":"12609:6:22"}],"functionName":{"name":"mstore","nativeSrc":"12582:6:22","nodeType":"YulIdentifier","src":"12582:6:22"},"nativeSrc":"12582:34:22","nodeType":"YulFunctionCall","src":"12582:34:22"},"nativeSrc":"12582:34:22","nodeType":"YulExpressionStatement","src":"12582:34:22"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"12277:345:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12387:9:22","nodeType":"YulTypedName","src":"12387:9:22","type":""},{"name":"value2","nativeSrc":"12398:6:22","nodeType":"YulTypedName","src":"12398:6:22","type":""},{"name":"value1","nativeSrc":"12406:6:22","nodeType":"YulTypedName","src":"12406:6:22","type":""},{"name":"value0","nativeSrc":"12414:6:22","nodeType":"YulTypedName","src":"12414:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12425:4:22","nodeType":"YulTypedName","src":"12425:4:22","type":""}],"src":"12277:345:22"},{"body":{"nativeSrc":"12840:276:22","nodeType":"YulBlock","src":"12840:276:22","statements":[{"nativeSrc":"12850:27:22","nodeType":"YulAssignment","src":"12850:27:22","value":{"arguments":[{"name":"headStart","nativeSrc":"12862:9:22","nodeType":"YulIdentifier","src":"12862:9:22"},{"kind":"number","nativeSrc":"12873:3:22","nodeType":"YulLiteral","src":"12873:3:22","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"12858:3:22","nodeType":"YulIdentifier","src":"12858:3:22"},"nativeSrc":"12858:19:22","nodeType":"YulFunctionCall","src":"12858:19:22"},"variableNames":[{"name":"tail","nativeSrc":"12850:4:22","nodeType":"YulIdentifier","src":"12850:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"12893:9:22","nodeType":"YulIdentifier","src":"12893:9:22"},{"name":"value0","nativeSrc":"12904:6:22","nodeType":"YulIdentifier","src":"12904:6:22"}],"functionName":{"name":"mstore","nativeSrc":"12886:6:22","nodeType":"YulIdentifier","src":"12886:6:22"},"nativeSrc":"12886:25:22","nodeType":"YulFunctionCall","src":"12886:25:22"},"nativeSrc":"12886:25:22","nodeType":"YulExpressionStatement","src":"12886:25:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12931:9:22","nodeType":"YulIdentifier","src":"12931:9:22"},{"kind":"number","nativeSrc":"12942:2:22","nodeType":"YulLiteral","src":"12942:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12927:3:22","nodeType":"YulIdentifier","src":"12927:3:22"},"nativeSrc":"12927:18:22","nodeType":"YulFunctionCall","src":"12927:18:22"},{"name":"value1","nativeSrc":"12947:6:22","nodeType":"YulIdentifier","src":"12947:6:22"}],"functionName":{"name":"mstore","nativeSrc":"12920:6:22","nodeType":"YulIdentifier","src":"12920:6:22"},"nativeSrc":"12920:34:22","nodeType":"YulFunctionCall","src":"12920:34:22"},"nativeSrc":"12920:34:22","nodeType":"YulExpressionStatement","src":"12920:34:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12974:9:22","nodeType":"YulIdentifier","src":"12974:9:22"},{"kind":"number","nativeSrc":"12985:2:22","nodeType":"YulLiteral","src":"12985:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12970:3:22","nodeType":"YulIdentifier","src":"12970:3:22"},"nativeSrc":"12970:18:22","nodeType":"YulFunctionCall","src":"12970:18:22"},{"name":"value2","nativeSrc":"12990:6:22","nodeType":"YulIdentifier","src":"12990:6:22"}],"functionName":{"name":"mstore","nativeSrc":"12963:6:22","nodeType":"YulIdentifier","src":"12963:6:22"},"nativeSrc":"12963:34:22","nodeType":"YulFunctionCall","src":"12963:34:22"},"nativeSrc":"12963:34:22","nodeType":"YulExpressionStatement","src":"12963:34:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13017:9:22","nodeType":"YulIdentifier","src":"13017:9:22"},{"kind":"number","nativeSrc":"13028:2:22","nodeType":"YulLiteral","src":"13028:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"13013:3:22","nodeType":"YulIdentifier","src":"13013:3:22"},"nativeSrc":"13013:18:22","nodeType":"YulFunctionCall","src":"13013:18:22"},{"name":"value3","nativeSrc":"13033:6:22","nodeType":"YulIdentifier","src":"13033:6:22"}],"functionName":{"name":"mstore","nativeSrc":"13006:6:22","nodeType":"YulIdentifier","src":"13006:6:22"},"nativeSrc":"13006:34:22","nodeType":"YulFunctionCall","src":"13006:34:22"},"nativeSrc":"13006:34:22","nodeType":"YulExpressionStatement","src":"13006:34:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13060:9:22","nodeType":"YulIdentifier","src":"13060:9:22"},{"kind":"number","nativeSrc":"13071:3:22","nodeType":"YulLiteral","src":"13071:3:22","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"13056:3:22","nodeType":"YulIdentifier","src":"13056:3:22"},"nativeSrc":"13056:19:22","nodeType":"YulFunctionCall","src":"13056:19:22"},{"arguments":[{"name":"value4","nativeSrc":"13081:6:22","nodeType":"YulIdentifier","src":"13081:6:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"13097:3:22","nodeType":"YulLiteral","src":"13097:3:22","type":"","value":"160"},{"kind":"number","nativeSrc":"13102:1:22","nodeType":"YulLiteral","src":"13102:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"13093:3:22","nodeType":"YulIdentifier","src":"13093:3:22"},"nativeSrc":"13093:11:22","nodeType":"YulFunctionCall","src":"13093:11:22"},{"kind":"number","nativeSrc":"13106:1:22","nodeType":"YulLiteral","src":"13106:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"13089:3:22","nodeType":"YulIdentifier","src":"13089:3:22"},"nativeSrc":"13089:19:22","nodeType":"YulFunctionCall","src":"13089:19:22"}],"functionName":{"name":"and","nativeSrc":"13077:3:22","nodeType":"YulIdentifier","src":"13077:3:22"},"nativeSrc":"13077:32:22","nodeType":"YulFunctionCall","src":"13077:32:22"}],"functionName":{"name":"mstore","nativeSrc":"13049:6:22","nodeType":"YulIdentifier","src":"13049:6:22"},"nativeSrc":"13049:61:22","nodeType":"YulFunctionCall","src":"13049:61:22"},"nativeSrc":"13049:61:22","nodeType":"YulExpressionStatement","src":"13049:61:22"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nativeSrc":"12627:489:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12777:9:22","nodeType":"YulTypedName","src":"12777:9:22","type":""},{"name":"value4","nativeSrc":"12788:6:22","nodeType":"YulTypedName","src":"12788:6:22","type":""},{"name":"value3","nativeSrc":"12796:6:22","nodeType":"YulTypedName","src":"12796:6:22","type":""},{"name":"value2","nativeSrc":"12804:6:22","nodeType":"YulTypedName","src":"12804:6:22","type":""},{"name":"value1","nativeSrc":"12812:6:22","nodeType":"YulTypedName","src":"12812:6:22","type":""},{"name":"value0","nativeSrc":"12820:6:22","nodeType":"YulTypedName","src":"12820:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12831:4:22","nodeType":"YulTypedName","src":"12831:4:22","type":""}],"src":"12627:489:22"},{"body":{"nativeSrc":"13302:217:22","nodeType":"YulBlock","src":"13302:217:22","statements":[{"nativeSrc":"13312:27:22","nodeType":"YulAssignment","src":"13312:27:22","value":{"arguments":[{"name":"headStart","nativeSrc":"13324:9:22","nodeType":"YulIdentifier","src":"13324:9:22"},{"kind":"number","nativeSrc":"13335:3:22","nodeType":"YulLiteral","src":"13335:3:22","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"13320:3:22","nodeType":"YulIdentifier","src":"13320:3:22"},"nativeSrc":"13320:19:22","nodeType":"YulFunctionCall","src":"13320:19:22"},"variableNames":[{"name":"tail","nativeSrc":"13312:4:22","nodeType":"YulIdentifier","src":"13312:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"13355:9:22","nodeType":"YulIdentifier","src":"13355:9:22"},{"name":"value0","nativeSrc":"13366:6:22","nodeType":"YulIdentifier","src":"13366:6:22"}],"functionName":{"name":"mstore","nativeSrc":"13348:6:22","nodeType":"YulIdentifier","src":"13348:6:22"},"nativeSrc":"13348:25:22","nodeType":"YulFunctionCall","src":"13348:25:22"},"nativeSrc":"13348:25:22","nodeType":"YulExpressionStatement","src":"13348:25:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13393:9:22","nodeType":"YulIdentifier","src":"13393:9:22"},{"kind":"number","nativeSrc":"13404:2:22","nodeType":"YulLiteral","src":"13404:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13389:3:22","nodeType":"YulIdentifier","src":"13389:3:22"},"nativeSrc":"13389:18:22","nodeType":"YulFunctionCall","src":"13389:18:22"},{"arguments":[{"name":"value1","nativeSrc":"13413:6:22","nodeType":"YulIdentifier","src":"13413:6:22"},{"kind":"number","nativeSrc":"13421:4:22","nodeType":"YulLiteral","src":"13421:4:22","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"13409:3:22","nodeType":"YulIdentifier","src":"13409:3:22"},"nativeSrc":"13409:17:22","nodeType":"YulFunctionCall","src":"13409:17:22"}],"functionName":{"name":"mstore","nativeSrc":"13382:6:22","nodeType":"YulIdentifier","src":"13382:6:22"},"nativeSrc":"13382:45:22","nodeType":"YulFunctionCall","src":"13382:45:22"},"nativeSrc":"13382:45:22","nodeType":"YulExpressionStatement","src":"13382:45:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13447:9:22","nodeType":"YulIdentifier","src":"13447:9:22"},{"kind":"number","nativeSrc":"13458:2:22","nodeType":"YulLiteral","src":"13458:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"13443:3:22","nodeType":"YulIdentifier","src":"13443:3:22"},"nativeSrc":"13443:18:22","nodeType":"YulFunctionCall","src":"13443:18:22"},{"name":"value2","nativeSrc":"13463:6:22","nodeType":"YulIdentifier","src":"13463:6:22"}],"functionName":{"name":"mstore","nativeSrc":"13436:6:22","nodeType":"YulIdentifier","src":"13436:6:22"},"nativeSrc":"13436:34:22","nodeType":"YulFunctionCall","src":"13436:34:22"},"nativeSrc":"13436:34:22","nodeType":"YulExpressionStatement","src":"13436:34:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13490:9:22","nodeType":"YulIdentifier","src":"13490:9:22"},{"kind":"number","nativeSrc":"13501:2:22","nodeType":"YulLiteral","src":"13501:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"13486:3:22","nodeType":"YulIdentifier","src":"13486:3:22"},"nativeSrc":"13486:18:22","nodeType":"YulFunctionCall","src":"13486:18:22"},{"name":"value3","nativeSrc":"13506:6:22","nodeType":"YulIdentifier","src":"13506:6:22"}],"functionName":{"name":"mstore","nativeSrc":"13479:6:22","nodeType":"YulIdentifier","src":"13479:6:22"},"nativeSrc":"13479:34:22","nodeType":"YulFunctionCall","src":"13479:34:22"},"nativeSrc":"13479:34:22","nodeType":"YulExpressionStatement","src":"13479:34:22"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nativeSrc":"13121:398:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13247:9:22","nodeType":"YulTypedName","src":"13247:9:22","type":""},{"name":"value3","nativeSrc":"13258:6:22","nodeType":"YulTypedName","src":"13258:6:22","type":""},{"name":"value2","nativeSrc":"13266:6:22","nodeType":"YulTypedName","src":"13266:6:22","type":""},{"name":"value1","nativeSrc":"13274:6:22","nodeType":"YulTypedName","src":"13274:6:22","type":""},{"name":"value0","nativeSrc":"13282:6:22","nodeType":"YulTypedName","src":"13282:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13293:4:22","nodeType":"YulTypedName","src":"13293:4:22","type":""}],"src":"13121:398:22"},{"body":{"nativeSrc":"13556:95:22","nodeType":"YulBlock","src":"13556:95:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"13573:1:22","nodeType":"YulLiteral","src":"13573:1:22","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"13580:3:22","nodeType":"YulLiteral","src":"13580:3:22","type":"","value":"224"},{"kind":"number","nativeSrc":"13585:10:22","nodeType":"YulLiteral","src":"13585:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"13576:3:22","nodeType":"YulIdentifier","src":"13576:3:22"},"nativeSrc":"13576:20:22","nodeType":"YulFunctionCall","src":"13576:20:22"}],"functionName":{"name":"mstore","nativeSrc":"13566:6:22","nodeType":"YulIdentifier","src":"13566:6:22"},"nativeSrc":"13566:31:22","nodeType":"YulFunctionCall","src":"13566:31:22"},"nativeSrc":"13566:31:22","nodeType":"YulExpressionStatement","src":"13566:31:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"13613:1:22","nodeType":"YulLiteral","src":"13613:1:22","type":"","value":"4"},{"kind":"number","nativeSrc":"13616:4:22","nodeType":"YulLiteral","src":"13616:4:22","type":"","value":"0x21"}],"functionName":{"name":"mstore","nativeSrc":"13606:6:22","nodeType":"YulIdentifier","src":"13606:6:22"},"nativeSrc":"13606:15:22","nodeType":"YulFunctionCall","src":"13606:15:22"},"nativeSrc":"13606:15:22","nodeType":"YulExpressionStatement","src":"13606:15:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"13637:1:22","nodeType":"YulLiteral","src":"13637:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"13640:4:22","nodeType":"YulLiteral","src":"13640:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"13630:6:22","nodeType":"YulIdentifier","src":"13630:6:22"},"nativeSrc":"13630:15:22","nodeType":"YulFunctionCall","src":"13630:15:22"},"nativeSrc":"13630:15:22","nodeType":"YulExpressionStatement","src":"13630:15:22"}]},"name":"panic_error_0x21","nativeSrc":"13524:127:22","nodeType":"YulFunctionDefinition","src":"13524:127:22"}]},"contents":"{\n    { }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(add(pos, i), 0x20), mload(add(add(value, i), 0x20)))\n        }\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := 0\n        value_2 := calldataload(add(headStart, 64))\n        value2 := value_2\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_contract$_OysterVault_$8069(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, shl(248, 255)))\n        mstore(add(headStart, 32), 224)\n        let tail_1 := abi_encode_string(value1, add(headStart, 224))\n        mstore(add(headStart, 64), sub(tail_1, headStart))\n        let tail_2 := abi_encode_string(value2, tail_1)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), sub(tail_2, headStart))\n        let pos := tail_2\n        let length := mload(value6)\n        mstore(tail_2, length)\n        pos := add(tail_2, 32)\n        let srcPtr := add(value6, 32)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, 32)\n            srcPtr := add(srcPtr, 32)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := 0\n        value_2 := calldataload(add(headStart, 64))\n        value2 := value_2\n        let value_3 := 0\n        value_3 := calldataload(add(headStart, 96))\n        value3 := value_3\n        let value_4 := calldataload(add(headStart, 128))\n        if iszero(eq(value_4, and(value_4, 0xff))) { revert(0, 0) }\n        value4 := value_4\n        let value_5 := 0\n        value_5 := calldataload(add(headStart, 160))\n        value5 := value_5\n        let value_6 := 0\n        value_6 := calldataload(add(headStart, 192))\n        value6 := value_6\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_contract$_OysterVault_$8069__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_a498ec71a51c4164b1345afc4bf81a1bdbdf153eb10e276ed1006f2e929fdc84__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 67)\n        mstore(add(headStart, 64), \"This function can only be called\")\n        mstore(add(headStart, 96), \" by the valid MusicContract addr\")\n        mstore(add(headStart, 128), \"ess\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Amount must be greater than zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_2c0bfaf7cb6539155436714f38c4cb42f5eda75e9ba56026786122f864cadb75__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Vault address not set\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1d4b05e5256c70cb19cbeae4f5dbc68cbf63906eed2b6782a552ca8fc044422e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Invalid vault address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e38982e17d63c9cd56d683e451db7cf94d5da609636149268849933c3fcb1d61__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Vault already set\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_86507a7d7d18d00edab41068eefc3ef3ff83737ee53442e526a0ea723f603949__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"Insufficient Wei sent to buy tok\")\n        mstore(add(headStart, 96), \"ens\")\n        tail := add(headStart, 128)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_ca3cad5b864a3d4af13eee9d3c0d044aa408ce904e7fe3c87ecd049c253491b7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"Not enough tokens in OysterToken\")\n        mstore(add(headStart, 96), \" contract\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_stringliteral_fa207173f56547efb95af4cef634dbfa0d7f314b8618baeae97339d76512f226__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Failed to send remaining Ether\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n}","id":22,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"3178":[{"length":32,"start":3892}],"3180":[{"length":32,"start":3850}],"3182":[{"length":32,"start":3808}],"3184":[{"length":32,"start":3973}],"3186":[{"length":32,"start":4013}],"3189":[{"length":32,"start":4183}],"3192":[{"length":32,"start":4228}]},"linkReferences":{},"object":"6080604052600436106101405760003560e01c80637eb4cde7116100b6578063a9059cbb1161006f578063a9059cbb14610367578063d505accf14610387578063dd62ed3e146103a7578063f2fde38b146103ed578063f89fbe6a1461040d578063fbfa77cf1461043d57600080fd5b80637eb4cde7146102b05780637ecebe00146102d057806384b0196e146102f05780638da5cb5b14610318578063917b1bf51461034a57806395d89b411461035257600080fd5b806324c938371161010857806324c93837146101f2578063313ce567146102145780633644e515146102305780636817031b1461024557806370a0823114610265578063715018a61461029b57600080fd5b806306fdde0314610145578063095ea7b3146101705780630a3871eb146101a057806318160ddd146101b357806323b872dd146101d2575b600080fd5b34801561015157600080fd5b5061015a61045d565b60405161016791906115e4565b60405180910390f35b34801561017c57600080fd5b5061019061018b366004611613565b6104ef565b6040519015158152602001610167565b6101906101ae366004611613565b610509565b3480156101bf57600080fd5b506002545b604051908152602001610167565b3480156101de57600080fd5b506101906101ed36600461163f565b6106a2565b3480156101fe57600080fd5b5061021261020d366004611680565b6106c6565b005b34801561022057600080fd5b5060405160128152602001610167565b34801561023c57600080fd5b506101c4610737565b34801561025157600080fd5b50610212610260366004611699565b610746565b34801561027157600080fd5b506101c4610280366004611699565b6001600160a01b031660009081526020819052604090205490565b3480156102a757600080fd5b5061021261080b565b3480156102bc57600080fd5b506101906102cb366004611699565b61081f565b3480156102dc57600080fd5b506101c46102eb366004611699565b61088b565b3480156102fc57600080fd5b506103056108a9565b60405161016797969594939291906116b6565b34801561032457600080fd5b506005546001600160a01b03165b6040516001600160a01b039091168152602001610167565b6101906108ef565b34801561035e57600080fd5b5061015a610bea565b34801561037357600080fd5b50610190610382366004611613565b610bf9565b34801561039357600080fd5b506102126103a236600461174e565b610c07565b3480156103b357600080fd5b506101c46103c23660046117c5565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3480156103f957600080fd5b50610212610408366004611699565b610d41565b34801561041957600080fd5b50610190610428366004611699565b600a6020526000908152604090205460ff1681565b34801561044957600080fd5b50600954610332906001600160a01b031681565b60606003805461046c906117fe565b80601f0160208091040260200160405190810160405280929190818152602001828054610498906117fe565b80156104e55780601f106104ba576101008083540402835291602001916104e5565b820191906000526020600020905b8154815290600101906020018083116104c857829003601f168201915b5050505050905090565b6000336104fd818585610d7c565b60019150505b92915050565b336000908152600a602052604081205460ff166105415760405162461bcd60e51b815260040161053890611838565b60405180910390fd5b600082116105915760405162461bcd60e51b815260206004820181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f6044820152606401610538565b600954604051630357291360e41b8152336004820152602481018490526001600160a01b03909116906335729130906044016020604051808303816000875af11580156105e2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060691906118a1565b50652d79883d2000600061061a84836118d9565b6040519091506001600160a01b0386169082156108fc029083906000818181858888f19350505050158015610653573d6000803e3d6000fd5b50846001600160a01b03167f66002148a13b0a635b2dd6a9f2f5f8dd5a438fc69cb89f096b1cb6facf14b2ea8260405161068f91815260200190565b60405180910390a2506001949350505050565b6000336106b0858285610d8e565b6106bb858585610e0d565b506001949350505050565b6106ce610e6c565b6009546001600160a01b031661071e5760405162461bcd60e51b815260206004820152601560248201527415985d5b1d081859191c995cdcc81b9bdd081cd95d605a1b6044820152606401610538565b600954610734906001600160a01b031682610e99565b50565b6000610741610ed3565b905090565b61074e610e6c565b6001600160a01b03811661079c5760405162461bcd60e51b8152602060048201526015602482015274496e76616c6964207661756c74206164647265737360581b6044820152606401610538565b6009546001600160a01b0316156107e95760405162461bcd60e51b815260206004820152601160248201527015985d5b1d08185b1c9958591e481cd95d607a1b6044820152606401610538565b600980546001600160a01b0319166001600160a01b0392909216919091179055565b610813610e6c565b61081d6000610ffe565b565b6000610829610e6c565b6001600160a01b0382166000818152600a6020908152604091829020805460ff1916600190811790915591519182527f8828c88ef46029fc10c19655c4c67e16d76903c9fbd9170b8298d51194ed7508910160405180910390a2506001919050565b6001600160a01b038116600090815260086020526040812054610503565b6000606080600080600060606108bd611050565b6108c561107d565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b336000908152600a602052604081205460ff1661091e5760405162461bcd60e51b815260040161053890611838565b65b5e620f48000606461c35060008361093783856118d9565b61094590633b9aca006118d9565b61094f91906118f0565b9050803410156109ad5760405162461bcd60e51b815260206004820152602360248201527f496e73756666696369656e74205765692073656e7420746f2062757920746f6b604482015262656e7360e81b6064820152608401610538565b60006109b98234611903565b905083600960009054906101000a90046001600160a01b03166001600160a01b0316631f4aad2a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a0f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a339190611916565b1015610a935760405162461bcd60e51b815260206004820152602960248201527f4e6f7420656e6f75676820746f6b656e7320696e204f7973746572546f6b656e6044820152680818dbdb9d1c9858dd60ba1b6064820152608401610538565b8015610b3357604051600090339083908381818185875af1925050503d8060008114610adb576040519150601f19603f3d011682016040523d82523d6000602084013e610ae0565b606091505b5050905080610b315760405162461bcd60e51b815260206004820152601e60248201527f4661696c656420746f2073656e642072656d61696e696e6720457468657200006044820152606401610538565b505b600954604051632093325760e11b8152336004820152602481018690526001600160a01b039091169063412664ae906044016020604051808303816000875af1158015610b84573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba891906118a1565b5060405181815233907ffec51bd7a12167abbae91302df382bf09c27aab7a4fddd88f056c6ab1c9b8e209060200160405180910390a260019550505050505090565b60606004805461046c906117fe565b6000336104fd818585610e0d565b83421115610c2b5760405163313c898160e11b815260048101859052602401610538565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610c788c6001600160a01b0316600090815260086020526040902080546001810190915590565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610cd3826110aa565b90506000610ce3828787876110d7565b9050896001600160a01b0316816001600160a01b031614610d2a576040516325c0072360e11b81526001600160a01b0380831660048301528b166024820152604401610538565b610d358a8a8a610d7c565b50505050505050505050565b610d49610e6c565b6001600160a01b038116610d7357604051631e4fbdf760e01b815260006004820152602401610538565b61073481610ffe565b610d898383836001611105565b505050565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811015610e075781811015610df857604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610538565b610e0784848484036000611105565b50505050565b6001600160a01b038316610e3757604051634b637e8f60e11b815260006004820152602401610538565b6001600160a01b038216610e615760405163ec442f0560e01b815260006004820152602401610538565b610d898383836111da565b6005546001600160a01b0316331461081d5760405163118cdaa760e01b8152336004820152602401610538565b6001600160a01b038216610ec35760405163ec442f0560e01b815260006004820152602401610538565b610ecf600083836111da565b5050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015610f2c57507f000000000000000000000000000000000000000000000000000000000000000046145b15610f5657507f000000000000000000000000000000000000000000000000000000000000000090565b610741604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60606107417f00000000000000000000000000000000000000000000000000000000000000006006611304565b60606107417f00000000000000000000000000000000000000000000000000000000000000006007611304565b60006105036110b7610ed3565b8360405161190160f01b8152600281019290925260228201526042902090565b6000806000806110e9888888886113af565b9250925092506110f9828261147e565b50909695505050505050565b6001600160a01b03841661112f5760405163e602df0560e01b815260006004820152602401610538565b6001600160a01b03831661115957604051634a1406b160e11b815260006004820152602401610538565b6001600160a01b0380851660009081526001602090815260408083209387168352929052208290558015610e0757826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516111cc91815260200190565b60405180910390a350505050565b6001600160a01b0383166112055780600260008282546111fa91906118f0565b909155506112779050565b6001600160a01b038316600090815260208190526040902054818110156112585760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610538565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216611293576002805482900390556112b2565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516112f791815260200190565b60405180910390a3505050565b606060ff831461131e5761131783611537565b9050610503565b81805461132a906117fe565b80601f0160208091040260200160405190810160405280929190818152602001828054611356906117fe565b80156113a35780601f10611378576101008083540402835291602001916113a3565b820191906000526020600020905b81548152906001019060200180831161138657829003601f168201915b50505050509050610503565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411156113ea5750600091506003905082611474565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa15801561143e573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661146a57506000925060019150829050611474565b9250600091508190505b9450945094915050565b60008260038111156114925761149261192f565b0361149b575050565b60018260038111156114af576114af61192f565b036114cd5760405163f645eedf60e01b815260040160405180910390fd5b60028260038111156114e1576114e161192f565b036115025760405163fce698f760e01b815260048101829052602401610538565b60038260038111156115165761151661192f565b03610ecf576040516335e2f38360e21b815260048101829052602401610538565b6060600061154483611576565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b600060ff8216601f81111561050357604051632cd44ac360e21b815260040160405180910390fd5b6000815180845260005b818110156115c4576020818501810151868301820152016115a8565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006115f7602083018461159e565b9392505050565b6001600160a01b038116811461073457600080fd5b6000806040838503121561162657600080fd5b8235611631816115fe565b946020939093013593505050565b60008060006060848603121561165457600080fd5b833561165f816115fe565b9250602084013561166f816115fe565b929592945050506040919091013590565b60006020828403121561169257600080fd5b5035919050565b6000602082840312156116ab57600080fd5b81356115f7816115fe565b60ff60f81b8816815260e0602082015260006116d560e083018961159e565b82810360408401526116e7818961159e565b606084018890526001600160a01b038716608085015260a0840186905283810360c08501528451808252602080870193509091019060005b8181101561173d57835183526020938401939092019160010161171f565b50909b9a5050505050505050505050565b600080600080600080600060e0888a03121561176957600080fd5b8735611774816115fe565b96506020880135611784816115fe565b95506040880135945060608801359350608088013560ff811681146117a857600080fd5b9699959850939692959460a0840135945060c09093013592915050565b600080604083850312156117d857600080fd5b82356117e3816115fe565b915060208301356117f3816115fe565b809150509250929050565b600181811c9082168061181257607f821691505b60208210810361183257634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526043908201527f546869732066756e6374696f6e2063616e206f6e6c792062652063616c6c656460408201527f206279207468652076616c6964204d75736963436f6e7472616374206164647260608201526265737360e81b608082015260a00190565b6000602082840312156118b357600080fd5b815180151581146115f757600080fd5b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417610503576105036118c3565b80820180821115610503576105036118c3565b81810381811115610503576105036118c3565b60006020828403121561192857600080fd5b5051919050565b634e487b7160e01b600052602160045260246000fdfea264697066735822122053f4badff65e53809a299932d84bd5d10a0203321fae391d76ea2b49e0d1359964736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x140 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7EB4CDE7 GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x367 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x387 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3A7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3ED JUMPI DUP1 PUSH4 0xF89FBE6A EQ PUSH2 0x40D JUMPI DUP1 PUSH4 0xFBFA77CF EQ PUSH2 0x43D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7EB4CDE7 EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x318 JUMPI DUP1 PUSH4 0x917B1BF5 EQ PUSH2 0x34A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x352 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x24C93837 GT PUSH2 0x108 JUMPI DUP1 PUSH4 0x24C93837 EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x6817031B EQ PUSH2 0x245 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x29B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0xA3871EB EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1D2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x151 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15A PUSH2 0x45D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x15E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x190 PUSH2 0x18B CALLDATASIZE PUSH1 0x4 PUSH2 0x1613 JUMP JUMPDEST PUSH2 0x4EF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x167 JUMP JUMPDEST PUSH2 0x190 PUSH2 0x1AE CALLDATASIZE PUSH1 0x4 PUSH2 0x1613 JUMP JUMPDEST PUSH2 0x509 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x167 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x190 PUSH2 0x1ED CALLDATASIZE PUSH1 0x4 PUSH2 0x163F JUMP JUMPDEST PUSH2 0x6A2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x212 PUSH2 0x20D CALLDATASIZE PUSH1 0x4 PUSH2 0x1680 JUMP JUMPDEST PUSH2 0x6C6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x167 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C4 PUSH2 0x737 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x251 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x212 PUSH2 0x260 CALLDATASIZE PUSH1 0x4 PUSH2 0x1699 JUMP JUMPDEST PUSH2 0x746 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x271 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C4 PUSH2 0x280 CALLDATASIZE PUSH1 0x4 PUSH2 0x1699 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x212 PUSH2 0x80B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x190 PUSH2 0x2CB CALLDATASIZE PUSH1 0x4 PUSH2 0x1699 JUMP JUMPDEST PUSH2 0x81F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C4 PUSH2 0x2EB CALLDATASIZE PUSH1 0x4 PUSH2 0x1699 JUMP JUMPDEST PUSH2 0x88B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x305 PUSH2 0x8A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x167 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x16B6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x324 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x167 JUMP JUMPDEST PUSH2 0x190 PUSH2 0x8EF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15A PUSH2 0xBEA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x373 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x190 PUSH2 0x382 CALLDATASIZE PUSH1 0x4 PUSH2 0x1613 JUMP JUMPDEST PUSH2 0xBF9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x393 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x212 PUSH2 0x3A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x174E JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C4 PUSH2 0x3C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x17C5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x212 PUSH2 0x408 CALLDATASIZE PUSH1 0x4 PUSH2 0x1699 JUMP JUMPDEST PUSH2 0xD41 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x419 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x190 PUSH2 0x428 CALLDATASIZE PUSH1 0x4 PUSH2 0x1699 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x449 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x9 SLOAD PUSH2 0x332 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x46C SWAP1 PUSH2 0x17FE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x498 SWAP1 PUSH2 0x17FE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4E5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4BA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4E5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4C8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x4FD DUP2 DUP6 DUP6 PUSH2 0xD7C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x541 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x538 SWAP1 PUSH2 0x1838 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x591 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x538 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0x3572913 PUSH1 0xE4 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x35729130 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5E2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x606 SWAP2 SWAP1 PUSH2 0x18A1 JUMP JUMPDEST POP PUSH6 0x2D79883D2000 PUSH1 0x0 PUSH2 0x61A DUP5 DUP4 PUSH2 0x18D9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x653 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x66002148A13B0A635B2DD6A9F2F5F8DD5A438FC69CB89F096B1CB6FACF14B2EA DUP3 PUSH1 0x40 MLOAD PUSH2 0x68F SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x6B0 DUP6 DUP3 DUP6 PUSH2 0xD8E JUMP JUMPDEST PUSH2 0x6BB DUP6 DUP6 DUP6 PUSH2 0xE0D JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x6CE PUSH2 0xE6C JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x71E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x15985D5B1D081859191C995CDCC81B9BDD081CD95D PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x538 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x734 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH2 0xE99 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x741 PUSH2 0xED3 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x74E PUSH2 0xE6C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x79C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x496E76616C6964207661756C742061646472657373 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x538 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x7E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x15985D5B1D08185B1C9958591E481CD95D PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x538 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x813 PUSH2 0xE6C JUMP JUMPDEST PUSH2 0x81D PUSH1 0x0 PUSH2 0xFFE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x829 PUSH2 0xE6C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x8828C88EF46029FC10C19655C4C67E16D76903C9FBD9170B8298D51194ED7508 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x503 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0x8BD PUSH2 0x1050 JUMP JUMPDEST PUSH2 0x8C5 PUSH2 0x107D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0xF PUSH1 0xF8 SHL SWAP12 SWAP4 SWAP11 POP SWAP2 SWAP9 POP CHAINID SWAP8 POP ADDRESS SWAP7 POP SWAP5 POP SWAP3 POP SWAP1 POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x91E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x538 SWAP1 PUSH2 0x1838 JUMP JUMPDEST PUSH6 0xB5E620F48000 PUSH1 0x64 PUSH2 0xC350 PUSH1 0x0 DUP4 PUSH2 0x937 DUP4 DUP6 PUSH2 0x18D9 JUMP JUMPDEST PUSH2 0x945 SWAP1 PUSH4 0x3B9ACA00 PUSH2 0x18D9 JUMP JUMPDEST PUSH2 0x94F SWAP2 SWAP1 PUSH2 0x18F0 JUMP JUMPDEST SWAP1 POP DUP1 CALLVALUE LT ISZERO PUSH2 0x9AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74205765692073656E7420746F2062757920746F6B PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x656E73 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x538 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9B9 DUP3 CALLVALUE PUSH2 0x1903 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1F4AAD2A PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA0F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA33 SWAP2 SWAP1 PUSH2 0x1916 JUMP JUMPDEST LT ISZERO PUSH2 0xA93 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F75676820746F6B656E7320696E204F7973746572546F6B656E PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x818DBDB9D1C9858DD PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x538 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB33 JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 CALLER SWAP1 DUP4 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xADB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xAE0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xB31 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661696C656420746F2073656E642072656D61696E696E672045746865720000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x538 JUMP JUMPDEST POP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0x20933257 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x412664AE SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB84 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBA8 SWAP2 SWAP1 PUSH2 0x18A1 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0xFEC51BD7A12167ABBAE91302DF382BF09C27AAB7A4FDDD88F056C6AB1C9B8E20 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP6 POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x46C SWAP1 PUSH2 0x17FE JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x4FD DUP2 DUP6 DUP6 PUSH2 0xE0D JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0xC2B JUMPI PUSH1 0x40 MLOAD PUSH4 0x313C8981 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x538 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0xC78 DUP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP1 DUP7 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0xE0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0xCD3 DUP3 PUSH2 0x10AA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xCE3 DUP3 DUP8 DUP8 DUP8 PUSH2 0x10D7 JUMP JUMPDEST SWAP1 POP DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xD2A JUMPI PUSH1 0x40 MLOAD PUSH4 0x25C00723 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE DUP12 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x538 JUMP JUMPDEST PUSH2 0xD35 DUP11 DUP11 DUP11 PUSH2 0xD7C JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xD49 PUSH2 0xE6C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xD73 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x538 JUMP JUMPDEST PUSH2 0x734 DUP2 PUSH2 0xFFE JUMP JUMPDEST PUSH2 0xD89 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1105 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 LT ISZERO PUSH2 0xE07 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xDF8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x538 JUMP JUMPDEST PUSH2 0xE07 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x1105 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xE37 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x538 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xE61 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x538 JUMP JUMPDEST PUSH2 0xD89 DUP4 DUP4 DUP4 PUSH2 0x11DA JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x81D JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x538 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xEC3 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x538 JUMP JUMPDEST PUSH2 0xECF PUSH1 0x0 DUP4 DUP4 PUSH2 0x11DA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 ISZERO PUSH2 0xF2C JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0xF56 JUMPI POP PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x741 PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x0 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x741 PUSH32 0x0 PUSH1 0x6 PUSH2 0x1304 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x741 PUSH32 0x0 PUSH1 0x7 PUSH2 0x1304 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x503 PUSH2 0x10B7 PUSH2 0xED3 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x10E9 DUP9 DUP9 DUP9 DUP9 PUSH2 0x13AF JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x10F9 DUP3 DUP3 PUSH2 0x147E JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x112F JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x538 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1159 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x538 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0xE07 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x11CC SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1205 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x11FA SWAP2 SWAP1 PUSH2 0x18F0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1277 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1258 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x538 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1293 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x12B2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x12F7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF DUP4 EQ PUSH2 0x131E JUMPI PUSH2 0x1317 DUP4 PUSH2 0x1537 JUMP JUMPDEST SWAP1 POP PUSH2 0x503 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x132A SWAP1 PUSH2 0x17FE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1356 SWAP1 PUSH2 0x17FE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x13A3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1378 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x13A3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1386 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH2 0x503 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT ISZERO PUSH2 0x13EA JUMPI POP PUSH1 0x0 SWAP2 POP PUSH1 0x3 SWAP1 POP DUP3 PUSH2 0x1474 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP11 SWAP1 MSTORE PUSH1 0xFF DUP10 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x143E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x146A JUMPI POP PUSH1 0x0 SWAP3 POP PUSH1 0x1 SWAP2 POP DUP3 SWAP1 POP PUSH2 0x1474 JUMP JUMPDEST SWAP3 POP PUSH1 0x0 SWAP2 POP DUP2 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1492 JUMPI PUSH2 0x1492 PUSH2 0x192F JUMP JUMPDEST SUB PUSH2 0x149B JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x14AF JUMPI PUSH2 0x14AF PUSH2 0x192F JUMP JUMPDEST SUB PUSH2 0x14CD JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x14E1 JUMPI PUSH2 0x14E1 PUSH2 0x192F JUMP JUMPDEST SUB PUSH2 0x1502 JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x538 JUMP JUMPDEST PUSH1 0x3 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1516 JUMPI PUSH2 0x1516 PUSH2 0x192F JUMP JUMPDEST SUB PUSH2 0xECF JUMPI PUSH1 0x40 MLOAD PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x538 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1544 DUP4 PUSH2 0x1576 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP POP SWAP2 DUP3 MSTORE POP PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x503 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CD44AC3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x15C4 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x15A8 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x15F7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x159E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x734 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1626 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1631 DUP2 PUSH2 0x15FE JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1654 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x165F DUP2 PUSH2 0x15FE JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x166F DUP2 PUSH2 0x15FE JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1692 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x15F7 DUP2 PUSH2 0x15FE JUMP JUMPDEST PUSH1 0xFF PUSH1 0xF8 SHL DUP9 AND DUP2 MSTORE PUSH1 0xE0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x16D5 PUSH1 0xE0 DUP4 ADD DUP10 PUSH2 0x159E JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x16E7 DUP2 DUP10 PUSH2 0x159E JUMP JUMPDEST PUSH1 0x60 DUP5 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD DUP7 SWAP1 MSTORE DUP4 DUP2 SUB PUSH1 0xC0 DUP6 ADD MSTORE DUP5 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP8 ADD SWAP4 POP SWAP1 SWAP2 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x173D JUMPI DUP4 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x171F JUMP JUMPDEST POP SWAP1 SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1769 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0x1774 DUP2 PUSH2 0x15FE JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH2 0x1784 DUP2 PUSH2 0x15FE JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x17A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 PUSH1 0xA0 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0xC0 SWAP1 SWAP4 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x17E3 DUP2 PUSH2 0x15FE JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x17F3 DUP2 PUSH2 0x15FE JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1812 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1832 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x43 SWAP1 DUP3 ADD MSTORE PUSH32 0x546869732066756E6374696F6E2063616E206F6E6C792062652063616C6C6564 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x206279207468652076616C6964204D75736963436F6E74726163742061646472 PUSH1 0x60 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x15F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x503 JUMPI PUSH2 0x503 PUSH2 0x18C3 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x503 JUMPI PUSH2 0x503 PUSH2 0x18C3 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x503 JUMPI PUSH2 0x503 PUSH2 0x18C3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1928 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE8 DELEGATECALL 0xBA 0xDF 0xF6 MCOPY MSTORE8 DUP1 SWAP11 0x29 SWAP10 ORIGIN 0xD8 0x4B 0xD5 0xD1 EXP MUL SUB ORIGIN 0x1F 0xAE CODECOPY SAR PUSH23 0xEA2B49E0D1359964736F6C634300081C00330000000000 ","sourceMap":"240:3260:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;;;;;-1:-1:-1;3998:186:3;;;;;:::i;:::-;;:::i;:::-;;;1317:14:22;;1310:22;1292:41;;1280:2;1265:18;3998:186:3;1152:187:22;3026:471:21;;;;;;:::i;:::-;;:::i;2849:97:3:-;;;;;;;;;;-1:-1:-1;2927:12:3;;2849:97;;;1490:25:22;;;1478:2;1463:18;2849:97:3;1344:177:22;4776:244:3;;;;;;;;;;-1:-1:-1;4776:244:3;;;;;:::i;:::-;;:::i;1362:174:21:-;;;;;;;;;;-1:-1:-1;1362:174:21;;;;;:::i;:::-;;:::i;:::-;;2707:82:3;;;;;;;;;;-1:-1:-1;2707:82:3;;2780:2;2412:36:22;;2400:2;2385:18;2707:82:3;2270:184:22;2659:112:5;;;;;;;;;;;;;:::i;997:334:21:-;;;;;;;;;;-1:-1:-1;997:334:21;;;;;:::i;:::-;;:::i;3004:116:3:-;;;;;;;;;;-1:-1:-1;3004:116:3;;;;;:::i;:::-;-1:-1:-1;;;;;3095:18:3;3069:7;3095:18;;;;;;;;;;;;3004:116;2293:101:0;;;;;;;;;;;;;:::i;1607:248:21:-;;;;;;;;;;-1:-1:-1;1607:248:21;;;;;:::i;:::-;;:::i;2409:143:5:-;;;;;;;;;;-1:-1:-1;2409:143:5;;;;;:::i;:::-;;:::i;5144:557:15:-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;1638:85:0:-;;;;;;;;;;-1:-1:-1;1710:6:0;;-1:-1:-1;;;;;1710:6:0;1638:85;;;-1:-1:-1;;;;;4572:32:22;;;4554:51;;4542:2;4527:18;1638:85:0;4408:203:22;1926:1058:21;;;:::i;1981:93:3:-;;;;;;;;;;;;;:::i;3315:178::-;;;;;;;;;;-1:-1:-1;3315:178:3;;;;;:::i;:::-;;:::i;1683:672:5:-;;;;;;;;;;-1:-1:-1;1683:672:5;;;;;:::i;:::-;;:::i;3551:140:3:-;;;;;;;;;;-1:-1:-1;3551:140:3;;;;;:::i;:::-;-1:-1:-1;;;;;3657:18:3;;;3631:7;3657:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3551:140;2543:215:0;;;;;;;;;;-1:-1:-1;2543:215:0;;;;;:::i;:::-;;:::i;328:51:21:-;;;;;;;;;;-1:-1:-1;328:51:21;;;;;:::i;:::-;;;;;;;;;;;;;;;;298:24;;;;;;;;;;-1:-1:-1;298:24:21;;;;-1:-1:-1;;;;;298:24:21;;;1779:89:3;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;735:10:8;4125:31:3;735:10:8;4141:7:3;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;;:::o;3026:471:21:-;664:10;3132:4;644:31;;;:19;:31;;;;;;;;636:111;;;;-1:-1:-1;;;636:111:21;;;;;;;:::i;:::-;;;;;;;;;3165:1:::1;3156:6;:10;3148:55;;;::::0;-1:-1:-1;;;3148:55:21;;7342:2:22;3148:55:21::1;::::0;::::1;7324:21:22::0;;;7361:18;;;7354:30;7420:34;7400:18;;;7393:62;7472:18;;3148:55:21::1;7140:356:22::0;3148:55:21::1;3214:5;::::0;:39:::1;::::0;-1:-1:-1;;;3214:39:21;;3234:10:::1;3214:39;::::0;::::1;7675:51:22::0;7742:18;;;7735:34;;;-1:-1:-1;;;;;3214:5:21;;::::1;::::0;:19:::1;::::0;7648:18:22;;3214:39:21::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;3289:11:21::1;3263:23;3335:24;3353:6:::0;3289:11;3335:24:::1;:::i;:::-;3369:40;::::0;3310:49;;-1:-1:-1;;;;;;3369:24:21;::::1;::::0;:40;::::1;;;::::0;3310:49;;3369:40:::1;::::0;;;3310:49;3369:24;:40;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;3446:6;-1:-1:-1::0;;;;;3425:44:21::1;;3454:14;3425:44;;;;1490:25:22::0;;1478:2;1463:18;;1344:177;3425:44:21::1;;;;;;;;-1:-1:-1::0;3486:4:21::1;::::0;3026:471;-1:-1:-1;;;;3026:471:21:o;4776:244:3:-;4863:4;735:10:8;4919:37:3;4935:4;735:10:8;4950:5:3;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;-1:-1:-1;5009:4:3;;4776:244;-1:-1:-1;;;;4776:244:3:o;1362:174:21:-;1531:13:0;:11;:13::i;:::-;1444:5:21::1;::::0;-1:-1:-1;;;;;1444:5:21::1;1428:62;;;::::0;-1:-1:-1;;;1428:62:21;;8569:2:22;1428:62:21::1;::::0;::::1;8551:21:22::0;8608:2;8588:18;;;8581:30;-1:-1:-1;;;8627:18:22;;;8620:51;8688:18;;1428:62:21::1;8367:345:22::0;1428:62:21::1;1514:5;::::0;1500:29:::1;::::0;-1:-1:-1;;;;;1514:5:21::1;1522:6:::0;1500:5:::1;:29::i;:::-;1362:174:::0;:::o;2659:112:5:-;2718:7;2744:20;:18;:20::i;:::-;2737:27;;2659:112;:::o;997:334:21:-;1531:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;1072:29:21;::::1;1064:63;;;::::0;-1:-1:-1;;;1064:63:21;;8919:2:22;1064:63:21::1;::::0;::::1;8901:21:22::0;8958:2;8938:18;;;8931:30;-1:-1:-1;;;8977:18:22;;;8970:51;9038:18;;1064:63:21::1;8717:345:22::0;1064:63:21::1;1207:5;::::0;-1:-1:-1;;;;;1207:5:21::1;1199:28:::0;1191:58:::1;;;::::0;-1:-1:-1;;;1191:58:21;;9269:2:22;1191:58:21::1;::::0;::::1;9251:21:22::0;9308:2;9288:18;;;9281:30;-1:-1:-1;;;9327:18:22;;;9320:47;9384:18;;1191:58:21::1;9067:341:22::0;1191:58:21::1;1310:5;:14:::0;;-1:-1:-1;;;;;;1310:14:21::1;-1:-1:-1::0;;;;;1310:14:21;;;::::1;::::0;;;::::1;::::0;;997:334::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1607:248:21:-;1697:4;1531:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;1713:41:21;::::1;;::::0;;;:19:::1;:41;::::0;;;;;;;;:48;;-1:-1:-1;;1713:48:21::1;1757:4;1713:48:::0;;::::1;::::0;;;1777:50;;1292:41:22;;;1777:50:21::1;::::0;1265:18:22;1777:50:21::1;;;;;;;-1:-1:-1::0;1844:4:21::1;1607:248:::0;;;:::o;2409:143:5:-;-1:-1:-1;;;;;624:14:9;;2500:7:5;624:14:9;;;:7;:14;;;;;;2526:19:5;538:107:9;5144:557:15;5242:13;5269:18;5301:21;5336:15;5365:25;5404:12;5430:27;5533:13;:11;:13::i;:::-;5560:16;:14;:16::i;:::-;5668;;;5652:1;5668:16;;;;;;;;;-1:-1:-1;;;5482:212:15;;;-1:-1:-1;5482:212:15;;-1:-1:-1;5590:13:15;;-1:-1:-1;5625:4:15;;-1:-1:-1;5652:1:15;-1:-1:-1;5668:16:15;-1:-1:-1;5482:212:15;-1:-1:-1;5144:557:15:o;1926:1058:21:-;664:10;2011:4;644:31;;;:19;:31;;;;;;;;636:111;;;;-1:-1:-1;;;636:111:21;;;;;;;:::i;:::-;2053:13:::1;2099:3;2135:6;2027:23;2053:13:::0;2175:26:::1;2135:6:::0;2099:3;2175:26:::1;:::i;:::-;:32;::::0;2204:3:::1;2175:32;:::i;:::-;:50;;;;:::i;:::-;2153:72;;2257:11;2244:9;:24;;2236:72;;;::::0;-1:-1:-1;;;2236:72:21;;9877:2:22;2236:72:21::1;::::0;::::1;9859:21:22::0;9916:2;9896:18;;;9889:30;9955:34;9935:18;;;9928:62;-1:-1:-1;;;10006:18:22;;;9999:33;10049:19;;2236:72:21::1;9675:399:22::0;2236:72:21::1;2319:20;2342:23;2354:11:::0;2342:9:::1;:23;:::i;:::-;2319:46;;2485:11;2458:5;;;;;;;;;-1:-1:-1::0;;;;;2458:5:21::1;-1:-1:-1::0;;;;;2458:21:21::1;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:38;;2450:92;;;::::0;-1:-1:-1;;;2450:92:21;;10603:2:22;2450:92:21::1;::::0;::::1;10585:21:22::0;10642:2;10622:18;;;10615:30;10681:34;10661:18;;;10654:62;-1:-1:-1;;;10732:18:22;;;10725:39;10781:19;;2450:92:21::1;10401:405:22::0;2450:92:21::1;2632:16:::0;;2628:179:::1;;2683:49;::::0;2665:12:::1;::::0;2691:10:::1;::::0;2715:12;;2665;2683:49;2665:12;2683:49;2715:12;2691:10;2683:49:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2664:68;;;2754:7;2746:50;;;::::0;-1:-1:-1;;;2746:50:21;;11223:2:22;2746:50:21::1;::::0;::::1;11205:21:22::0;11262:2;11242:18;;;11235:30;11301:32;11281:18;;;11274:60;11351:18;;2746:50:21::1;11021:354:22::0;2746:50:21::1;2650:157;2628:179;2863:5;::::0;:40:::1;::::0;-1:-1:-1;;;2863:40:21;;2879:10:::1;2863:40;::::0;::::1;7675:51:22::0;7742:18;;;7735:34;;;-1:-1:-1;;;;;2863:5:21;;::::1;::::0;:15:::1;::::0;7648:18:22;;2863:40:21::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;2919:37:21::1;::::0;1490:25:22;;;2931:10:21::1;::::0;2919:37:::1;::::0;1478:2:22;1463:18;2919:37:21::1;;;;;;;2973:4;2966:11;;;;;;;1926:1058:::0;:::o;1981:93:3:-;2028:13;2060:7;2053:14;;;;;:::i;3315:178::-;3384:4;735:10:8;3438:27:3;735:10:8;3455:2:3;3459:5;3438:9;:27::i;1683:672:5:-;1904:8;1886:15;:26;1882:97;;;1935:33;;-1:-1:-1;;;1935:33:5;;;;;1490:25:22;;;1463:18;;1935:33:5;1344:177:22;1882:97:5;1989:18;1024:95;2048:5;2055:7;2064:5;2071:16;2081:5;-1:-1:-1;;;;;1121:14:9;819:7;1121:14;;;:7;:14;;;;;:16;;;;;;;;;759:395;2071:16:5;2020:78;;;;;;11667:25:22;;;;-1:-1:-1;;;;;11728:32:22;;;11708:18;;;11701:60;11797:32;;;;11777:18;;;11770:60;11846:18;;;11839:34;11889:19;;;11882:35;11933:19;;;11926:35;;;11639:19;;2020:78:5;;;;;;;;;;;;2010:89;;;;;;1989:110;;2110:12;2125:28;2142:10;2125:16;:28::i;:::-;2110:43;;2164:14;2181:28;2195:4;2201:1;2204;2207;2181:13;:28::i;:::-;2164:45;;2233:5;-1:-1:-1;;;;;2223:15:5;:6;-1:-1:-1;;;;;2223:15:5;;2219:88;;2261:35;;-1:-1:-1;;;2261:35:5;;-1:-1:-1;;;;;12164:32:22;;;2261:35:5;;;12146:51:22;12233:32;;12213:18;;;12206:60;12119:18;;2261:35:5;11972:300:22;2219:88:5;2317:31;2326:5;2333:7;2342:5;2317:8;:31::i;:::-;1872:483;;;1683:672;;;;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;4554:51:22::0;4527:18;;2672:31:0::1;4408:203:22::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;8726:128:3:-:0;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;10415:476::-;-1:-1:-1;;;;;3657:18:3;;;10514:24;3657:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10580:36:3;;10576:309;;;10655:5;10636:16;:24;10632:130;;;10687:60;;-1:-1:-1;;;10687:60:3;;-1:-1:-1;;;;;12497:32:22;;10687:60:3;;;12479:51:22;12546:18;;;12539:34;;;12589:18;;;12582:34;;;12452:18;;10687:60:3;12277:345:22;10632:130:3;10803:57;10812:5;10819:7;10847:5;10828:16;:24;10854:5;10803:8;:57::i;:::-;10504:387;10415:476;;;:::o;5393:300::-;-1:-1:-1;;;;;5476:18:3;;5472:86;;5517:30;;-1:-1:-1;;;5517:30:3;;5544:1;5517:30;;;4554:51:22;4527:18;;5517:30:3;4408:203:22;5472:86:3;-1:-1:-1;;;;;5571:16:3;;5567:86;;5610:32;;-1:-1:-1;;;5610:32:3;;5639:1;5610:32;;;4554:51:22;4527:18;;5610:32:3;4408:203:22;5567:86:3;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;1796:162:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;735:10:8;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:8;1901:40:0;;;4554:51:22;4527:18;;1901:40:0;4408:203:22;7458:208:3;-1:-1:-1;;;;;7528:21:3;;7524:91;;7572:32;;-1:-1:-1;;;7572:32:3;;7601:1;7572:32;;;4554:51:22;4527:18;;7572:32:3;4408:203:22;7524:91:3;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;:::-;7458:208;;:::o;3845:262:15:-;3898:7;3929:4;-1:-1:-1;;;;;3938:11:15;3921:28;;:63;;;;;3970:14;3953:13;:31;3921:63;3917:184;;;-1:-1:-1;4007:22:15;;3845:262::o;3917:184::-;4067:23;4204:80;;;2079:95;4204:80;;;12886:25:22;4226:11:15;12927:18:22;;;12920:34;;;;4239:14:15;12970:18:22;;;12963:34;4255:13:15;13013:18:22;;;13006:34;4278:4:15;13056:19:22;;;13049:61;4168:7:15;;12858:19:22;;4204:80:15;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;6021:126:15:-;6067:13;6099:41;:5;6126:13;6099:26;:41::i;6473:135::-;6522:13;6554:47;:8;6584:16;6554:29;:47::i;4917:176::-;4994:7;5020:66;5053:20;:18;:20::i;:::-;5075:10;3501:4:16;3495:11;-1:-1:-1;;;3519:23:16;;3571:4;3562:14;;3555:39;;;;3623:4;3614:14;;3607:34;3679:4;3664:20;;;3326:374;6887:260:14;6972:7;6992:17;7011:18;7031:16;7051:25;7062:4;7068:1;7071;7074;7051:10;:25::i;:::-;6991:85;;;;;;7086:28;7098:5;7105:8;7086:11;:28::i;:::-;-1:-1:-1;7131:9:14;;6887:260;-1:-1:-1;;;;;;6887:260:14:o;9701:432:3:-;-1:-1:-1;;;;;9813:19:3;;9809:89;;9855:32;;-1:-1:-1;;;9855:32:3;;9884:1;9855:32;;;4554:51:22;4527:18;;9855:32:3;4408:203:22;9809:89:3;-1:-1:-1;;;;;9911:21:3;;9907:90;;9955:31;;-1:-1:-1;;;9955:31:3;;9983:1;9955:31;;;4554:51:22;4527:18;;9955:31:3;4408:203:22;9907:90:3;-1:-1:-1;;;;;10006:18:3;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10051:76;;;;10101:7;-1:-1:-1;;;;;10085:31:3;10094:5;-1:-1:-1;;;;;10085:31:3;;10110:5;10085:31;;;;1490:25:22;;1478:2;1463:18;;1344:177;10085:31:3;;;;;;;;9701:432;;;;:::o;6008:1107::-;-1:-1:-1;;;;;6097:18:3;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6093:540:3;;-1:-1:-1;6093:540:3;;-1:-1:-1;;;;;6307:15:3;;6285:19;6307:15;;;;;;;;;;;6340:19;;;6336:115;;;6386:50;;-1:-1:-1;;;6386:50:3;;-1:-1:-1;;;;;12497:32:22;;6386:50:3;;;12479:51:22;12546:18;;;12539:34;;;12589:18;;;12582:34;;;12452:18;;6386:50:3;12277:345:22;6336:115:3;-1:-1:-1;;;;;6571:15:3;;:9;:15;;;;;;;;;;6589:19;;;;6571:37;;6093:540;-1:-1:-1;;;;;6647:16:3;;6643:425;;6810:12;:21;;;;;;;6643:425;;;-1:-1:-1;;;;;7021:13:3;;:9;:13;;;;;;;;;;:22;;;;;;6643:425;7098:2;-1:-1:-1;;;;;7083:25:3;7092:4;-1:-1:-1;;;;;7083:25:3;;7102:5;7083:25;;;;1490::22;;1478:2;1463:18;;1344:177;7083:25:3;;;;;;;;6008:1107;;;:::o;3358:267:11:-;3452:13;1390:66;3481:46;;3477:142;;3550:15;3559:5;3550:8;:15::i;:::-;3543:22;;;;3477:142;3603:5;3596:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5203:1551:14;5329:17;;;6283:66;6270:79;;6266:164;;;-1:-1:-1;6381:1:14;;-1:-1:-1;6385:30:14;;-1:-1:-1;6417:1:14;6365:54;;6266:164;6541:24;;;6524:14;6541:24;;;;;;;;;13348:25:22;;;13421:4;13409:17;;13389:18;;;13382:45;;;;13443:18;;;13436:34;;;13486:18;;;13479:34;;;6541:24:14;;13320:19:22;;6541:24:14;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6541:24:14;;-1:-1:-1;;6541:24:14;;;-1:-1:-1;;;;;;;6579:20:14;;6575:113;;-1:-1:-1;6631:1:14;;-1:-1:-1;6635:29:14;;-1:-1:-1;6631:1:14;;-1:-1:-1;6615:62:14;;6575:113;6706:6;-1:-1:-1;6714:20:14;;-1:-1:-1;6714:20:14;;-1:-1:-1;5203:1551:14;;;;;;;;;:::o;7280:532::-;7375:20;7366:5;:29;;;;;;;;:::i;:::-;;7362:444;;7280:532;;:::o;7362:444::-;7471:29;7462:5;:38;;;;;;;;:::i;:::-;;7458:348;;7523:23;;-1:-1:-1;;;7523:23:14;;;;;;;;;;;7458:348;7576:35;7567:5;:44;;;;;;;;:::i;:::-;;7563:243;;7634:46;;-1:-1:-1;;;7634:46:14;;;;;1490:25:22;;;1463:18;;7634:46:14;1344:177:22;7563:243:14;7710:30;7701:5;:39;;;;;;;;:::i;:::-;;7697:109;;7763:32;;-1:-1:-1;;;7763:32:14;;;;;1490:25:22;;;1463:18;;7763:32:14;1344:177:22;2078:378:11;2137:13;2162:11;2176:16;2187:4;2176:10;:16::i;:::-;2300:14;;;2311:2;2300:14;;;;;;;;;2162:30;;-1:-1:-1;2280:17:11;;2300:14;;;;;;;;;-1:-1:-1;;;2363:16:11;;;-1:-1:-1;2408:4:11;2399:14;;2392:28;;;;-1:-1:-1;2363:16:11;2078:378::o;2528:245::-;2589:7;2661:4;2625:40;;2688:2;2679:11;;2675:69;;;2713:20;;-1:-1:-1;;;2713:20:11;;;;;;;;;;;14:400:22;56:3;94:5;88:12;121:6;116:3;109:19;146:1;156:139;170:6;167:1;164:13;156:139;;;278:4;263:13;;;259:24;;253:31;233:11;;;229:22;;222:63;185:12;156:139;;;160:3;340:1;333:4;324:6;319:3;315:16;311:27;304:38;403:4;396:2;392:7;387:2;379:6;375:15;371:29;366:3;362:39;358:50;351:57;;;14:400;;;;:::o;419:220::-;568:2;557:9;550:21;531:4;588:45;629:2;618:9;614:18;606:6;588:45;:::i;:::-;580:53;419:220;-1:-1:-1;;;419:220:22:o;644:131::-;-1:-1:-1;;;;;719:31:22;;709:42;;699:70;;765:1;762;755:12;780:367;848:6;856;909:2;897:9;888:7;884:23;880:32;877:52;;;925:1;922;915:12;877:52;964:9;951:23;983:31;1008:5;983:31;:::i;:::-;1033:5;1111:2;1096:18;;;;1083:32;;-1:-1:-1;;;780:367:22:o;1526:508::-;1603:6;1611;1619;1672:2;1660:9;1651:7;1647:23;1643:32;1640:52;;;1688:1;1685;1678:12;1640:52;1727:9;1714:23;1746:31;1771:5;1746:31;:::i;:::-;1796:5;-1:-1:-1;1853:2:22;1838:18;;1825:32;1866:33;1825:32;1866:33;:::i;:::-;1526:508;;1918:7;;-1:-1:-1;;;1998:2:22;1983:18;;;;1970:32;;1526:508::o;2039:226::-;2098:6;2151:2;2139:9;2130:7;2126:23;2122:32;2119:52;;;2167:1;2164;2157:12;2119:52;-1:-1:-1;2212:23:22;;2039:226;-1:-1:-1;2039:226:22:o;2641:267::-;2720:6;2773:2;2761:9;2752:7;2748:23;2744:32;2741:52;;;2789:1;2786;2779:12;2741:52;2828:9;2815:23;2847:31;2872:5;2847:31;:::i;3165:1238::-;3571:3;3566;3562:13;3554:6;3550:26;3539:9;3532:45;3613:3;3608:2;3597:9;3593:18;3586:31;3513:4;3640:46;3681:3;3670:9;3666:19;3658:6;3640:46;:::i;:::-;3734:9;3726:6;3722:22;3717:2;3706:9;3702:18;3695:50;3768:33;3794:6;3786;3768:33;:::i;:::-;3832:2;3817:18;;3810:34;;;-1:-1:-1;;;;;3881:32:22;;3875:3;3860:19;;3853:61;3901:3;3930:19;;3923:35;;;3995:22;;;3989:3;3974:19;;3967:51;4067:13;;4089:22;;;4139:2;4165:15;;;;-1:-1:-1;4127:15:22;;;;-1:-1:-1;4208:169:22;4222:6;4219:1;4216:13;4208:169;;;4283:13;;4271:26;;4326:2;4352:15;;;;4317:12;;;;4244:1;4237:9;4208:169;;;-1:-1:-1;4394:3:22;;3165:1238;-1:-1:-1;;;;;;;;;;;3165:1238:22:o;4616:1037::-;4727:6;4735;4743;4751;4759;4767;4775;4828:3;4816:9;4807:7;4803:23;4799:33;4796:53;;;4845:1;4842;4835:12;4796:53;4884:9;4871:23;4903:31;4928:5;4903:31;:::i;:::-;4953:5;-1:-1:-1;5010:2:22;4995:18;;4982:32;5023:33;4982:32;5023:33;:::i;:::-;5075:7;-1:-1:-1;5155:2:22;5140:18;;5127:32;;-1:-1:-1;5258:2:22;5243:18;;5230:32;;-1:-1:-1;5340:3:22;5325:19;;5312:33;5389:4;5376:18;;5364:31;;5354:59;;5409:1;5406;5399:12;5354:59;4616:1037;;;;-1:-1:-1;4616:1037:22;;;;5432:7;5512:3;5497:19;;5484:33;;-1:-1:-1;5616:3:22;5601:19;;;5588:33;;4616:1037;-1:-1:-1;;4616:1037:22:o;5658:388::-;5726:6;5734;5787:2;5775:9;5766:7;5762:23;5758:32;5755:52;;;5803:1;5800;5793:12;5755:52;5842:9;5829:23;5861:31;5886:5;5861:31;:::i;:::-;5911:5;-1:-1:-1;5968:2:22;5953:18;;5940:32;5981:33;5940:32;5981:33;:::i;:::-;6033:7;6023:17;;;5658:388;;;;;:::o;6279:380::-;6358:1;6354:12;;;;6401;;;6422:61;;6476:4;6468:6;6464:17;6454:27;;6422:61;6529:2;6521:6;6518:14;6498:18;6495:38;6492:161;;6575:10;6570:3;6566:20;6563:1;6556:31;6610:4;6607:1;6600:15;6638:4;6635:1;6628:15;6492:161;;6279:380;;;:::o;6664:471::-;6866:2;6848:21;;;6905:2;6885:18;;;6878:30;6944:34;6939:2;6924:18;;6917:62;7015:34;7010:2;6995:18;;6988:62;-1:-1:-1;;;7081:3:22;7066:19;;7059:34;7125:3;7110:19;;6664:471::o;7780:277::-;7847:6;7900:2;7888:9;7879:7;7875:23;7871:32;7868:52;;;7916:1;7913;7906:12;7868:52;7948:9;7942:16;8001:5;7994:13;7987:21;7980:5;7977:32;7967:60;;8023:1;8020;8013:12;8062:127;8123:10;8118:3;8114:20;8111:1;8104:31;8154:4;8151:1;8144:15;8178:4;8175:1;8168:15;8194:168;8267:9;;;8298;;8315:15;;;8309:22;;8295:37;8285:71;;8336:18;;:::i;9545:125::-;9610:9;;;9631:10;;;9628:36;;;9644:18;;:::i;10079:128::-;10146:9;;;10167:11;;;10164:37;;;10181:18;;:::i;10212:184::-;10282:6;10335:2;10323:9;10314:7;10310:23;10306:32;10303:52;;;10351:1;10348;10341:12;10303:52;-1:-1:-1;10374:16:22;;10212:184;-1:-1:-1;10212:184:22:o;13524:127::-;13585:10;13580:3;13576:20;13573:1;13566:31;13616:4;13613:1;13606:15;13640:4;13637:1;13630:15"},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","buy100OSTToMusicContract()":"917b1bf5","decimals()":"313ce567","eip712Domain()":"84b0196e","mintToVault(uint256)":"24c93837","name()":"06fdde03","nonces(address)":"7ecebe00","owner()":"8da5cb5b","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","renounceOwnership()":"715018a6","sellOysterToken(address,uint256)":"0a3871eb","setVault(address)":"6817031b","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","validMusicContracts(address)":"f89fbe6a","validateMusicContracts(address)":"7eb4cde7","vault()":"fbfa77cf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weiAmount\",\"type\":\"uint256\"}],\"name\":\"WeiRefunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weiAmount\",\"type\":\"uint256\"}],\"name\":\"transferViaTokenSale\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"name\":\"validatedMusicContract\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buy100OSTToMusicContract\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mintToVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sellOysterToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract OysterVault\",\"name\":\"_vault\",\"type\":\"address\"}],\"name\":\"setVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"validMusicContracts\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addressMusicContract\",\"type\":\"address\"}],\"name\":\"validateMusicContracts\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vault\",\"outputs\":[{\"internalType\":\"contract OysterVault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OysterToken.sol\":\"OysterToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xaa7f0646f49ebe2606eeca169f85c56451bbaeeeb06265fa076a03369a25d1d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee931d4e832385765967efe6366dcc6d00d6a2d794f9c66ee38283c03882de9c\",\"dweb:/ipfs/QmR6SkuJGYxpQeLz38rBdghqaWqEPfzUsL9kBoXgEXKtbD\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x27dbc90e5136ffe46c04f7596fc2dbcc3acebd8d504da3d93fdb8496e6de04f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea8b92e4245d75a5579c10f22f118f7b4ba07c57341f181f0b2a85ff8663de3\",\"dweb:/ipfs/Qme3Ss5ByjmkxxkMdLpyu7fQ1PCtjNFH1wEFszt2BZePiG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a\",\"dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x10eb97d047f8d84fe263a02bb4a656ac6674f6679d74532cc37546289e073a9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e41287d40b0c46982f1083d40d32de2761f009c5c51627fe79a7feb0ab1cf5c\",\"dweb:/ipfs/Qme7dbh6HX3ZvUJdbQAcVqXkmyXyfcLiUZRhhon3cU6K8p\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/OysterToken.sol\":{\"keccak256\":\"0x20584105d921d1d35c0820e7d6d888eb1d7c9934c74ca81a4dc3a78ec4570ad9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f1d35eb36921ee7ff351c7dcbb70d412498c4f0fcb85368726bf6c8d4f17c929\",\"dweb:/ipfs/QmZQsmrnfPjsNtTnKg1Ao7wngKNyefyemdsPd4z7q1BqDg\"]}},\"version\":1}"},"OysterVault":{"abi":[{"inputs":[{"internalType":"contract IERC20","name":"_oysterToken","type":"address"},{"internalType":"address","name":"initialOwner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"TokensDistributed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"TokensRecieved","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"oysterToken","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"musicContract","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"receiveTokens","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"musicContract","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"sendToken","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"viewTokensVault","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_7968":{"entryPoint":null,"id":7968,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":142,"id":146,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_contract$_IERC20_$902t_address_fromMemory":{"entryPoint":246,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"validator_revert_contract_IERC20":{"entryPoint":222,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:783:22","nodeType":"YulBlock","src":"0:783:22","statements":[{"nativeSrc":"6:3:22","nodeType":"YulBlock","src":"6:3:22","statements":[]},{"body":{"nativeSrc":"67:86:22","nodeType":"YulBlock","src":"67:86:22","statements":[{"body":{"nativeSrc":"131:16:22","nodeType":"YulBlock","src":"131:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"140:1:22","nodeType":"YulLiteral","src":"140:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"143:1:22","nodeType":"YulLiteral","src":"143:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"133:6:22","nodeType":"YulIdentifier","src":"133:6:22"},"nativeSrc":"133:12:22","nodeType":"YulFunctionCall","src":"133:12:22"},"nativeSrc":"133:12:22","nodeType":"YulExpressionStatement","src":"133:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"90:5:22","nodeType":"YulIdentifier","src":"90:5:22"},{"arguments":[{"name":"value","nativeSrc":"101:5:22","nodeType":"YulIdentifier","src":"101:5:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"116:3:22","nodeType":"YulLiteral","src":"116:3:22","type":"","value":"160"},{"kind":"number","nativeSrc":"121:1:22","nodeType":"YulLiteral","src":"121:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"112:3:22","nodeType":"YulIdentifier","src":"112:3:22"},"nativeSrc":"112:11:22","nodeType":"YulFunctionCall","src":"112:11:22"},{"kind":"number","nativeSrc":"125:1:22","nodeType":"YulLiteral","src":"125:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"108:3:22","nodeType":"YulIdentifier","src":"108:3:22"},"nativeSrc":"108:19:22","nodeType":"YulFunctionCall","src":"108:19:22"}],"functionName":{"name":"and","nativeSrc":"97:3:22","nodeType":"YulIdentifier","src":"97:3:22"},"nativeSrc":"97:31:22","nodeType":"YulFunctionCall","src":"97:31:22"}],"functionName":{"name":"eq","nativeSrc":"87:2:22","nodeType":"YulIdentifier","src":"87:2:22"},"nativeSrc":"87:42:22","nodeType":"YulFunctionCall","src":"87:42:22"}],"functionName":{"name":"iszero","nativeSrc":"80:6:22","nodeType":"YulIdentifier","src":"80:6:22"},"nativeSrc":"80:50:22","nodeType":"YulFunctionCall","src":"80:50:22"},"nativeSrc":"77:70:22","nodeType":"YulIf","src":"77:70:22"}]},"name":"validator_revert_contract_IERC20","nativeSrc":"14:139:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"56:5:22","nodeType":"YulTypedName","src":"56:5:22","type":""}],"src":"14:139:22"},{"body":{"nativeSrc":"270:303:22","nodeType":"YulBlock","src":"270:303:22","statements":[{"body":{"nativeSrc":"316:16:22","nodeType":"YulBlock","src":"316:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"325:1:22","nodeType":"YulLiteral","src":"325:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"328:1:22","nodeType":"YulLiteral","src":"328:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"318:6:22","nodeType":"YulIdentifier","src":"318:6:22"},"nativeSrc":"318:12:22","nodeType":"YulFunctionCall","src":"318:12:22"},"nativeSrc":"318:12:22","nodeType":"YulExpressionStatement","src":"318:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"291:7:22","nodeType":"YulIdentifier","src":"291:7:22"},{"name":"headStart","nativeSrc":"300:9:22","nodeType":"YulIdentifier","src":"300:9:22"}],"functionName":{"name":"sub","nativeSrc":"287:3:22","nodeType":"YulIdentifier","src":"287:3:22"},"nativeSrc":"287:23:22","nodeType":"YulFunctionCall","src":"287:23:22"},{"kind":"number","nativeSrc":"312:2:22","nodeType":"YulLiteral","src":"312:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"283:3:22","nodeType":"YulIdentifier","src":"283:3:22"},"nativeSrc":"283:32:22","nodeType":"YulFunctionCall","src":"283:32:22"},"nativeSrc":"280:52:22","nodeType":"YulIf","src":"280:52:22"},{"nativeSrc":"341:29:22","nodeType":"YulVariableDeclaration","src":"341:29:22","value":{"arguments":[{"name":"headStart","nativeSrc":"360:9:22","nodeType":"YulIdentifier","src":"360:9:22"}],"functionName":{"name":"mload","nativeSrc":"354:5:22","nodeType":"YulIdentifier","src":"354:5:22"},"nativeSrc":"354:16:22","nodeType":"YulFunctionCall","src":"354:16:22"},"variables":[{"name":"value","nativeSrc":"345:5:22","nodeType":"YulTypedName","src":"345:5:22","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"412:5:22","nodeType":"YulIdentifier","src":"412:5:22"}],"functionName":{"name":"validator_revert_contract_IERC20","nativeSrc":"379:32:22","nodeType":"YulIdentifier","src":"379:32:22"},"nativeSrc":"379:39:22","nodeType":"YulFunctionCall","src":"379:39:22"},"nativeSrc":"379:39:22","nodeType":"YulExpressionStatement","src":"379:39:22"},{"nativeSrc":"427:15:22","nodeType":"YulAssignment","src":"427:15:22","value":{"name":"value","nativeSrc":"437:5:22","nodeType":"YulIdentifier","src":"437:5:22"},"variableNames":[{"name":"value0","nativeSrc":"427:6:22","nodeType":"YulIdentifier","src":"427:6:22"}]},{"nativeSrc":"451:40:22","nodeType":"YulVariableDeclaration","src":"451:40:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"476:9:22","nodeType":"YulIdentifier","src":"476:9:22"},{"kind":"number","nativeSrc":"487:2:22","nodeType":"YulLiteral","src":"487:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"472:3:22","nodeType":"YulIdentifier","src":"472:3:22"},"nativeSrc":"472:18:22","nodeType":"YulFunctionCall","src":"472:18:22"}],"functionName":{"name":"mload","nativeSrc":"466:5:22","nodeType":"YulIdentifier","src":"466:5:22"},"nativeSrc":"466:25:22","nodeType":"YulFunctionCall","src":"466:25:22"},"variables":[{"name":"value_1","nativeSrc":"455:7:22","nodeType":"YulTypedName","src":"455:7:22","type":""}]},{"expression":{"arguments":[{"name":"value_1","nativeSrc":"533:7:22","nodeType":"YulIdentifier","src":"533:7:22"}],"functionName":{"name":"validator_revert_contract_IERC20","nativeSrc":"500:32:22","nodeType":"YulIdentifier","src":"500:32:22"},"nativeSrc":"500:41:22","nodeType":"YulFunctionCall","src":"500:41:22"},"nativeSrc":"500:41:22","nodeType":"YulExpressionStatement","src":"500:41:22"},{"nativeSrc":"550:17:22","nodeType":"YulAssignment","src":"550:17:22","value":{"name":"value_1","nativeSrc":"560:7:22","nodeType":"YulIdentifier","src":"560:7:22"},"variableNames":[{"name":"value1","nativeSrc":"550:6:22","nodeType":"YulIdentifier","src":"550:6:22"}]}]},"name":"abi_decode_tuple_t_contract$_IERC20_$902t_address_fromMemory","nativeSrc":"158:415:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"228:9:22","nodeType":"YulTypedName","src":"228:9:22","type":""},{"name":"dataEnd","nativeSrc":"239:7:22","nodeType":"YulTypedName","src":"239:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"251:6:22","nodeType":"YulTypedName","src":"251:6:22","type":""},{"name":"value1","nativeSrc":"259:6:22","nodeType":"YulTypedName","src":"259:6:22","type":""}],"src":"158:415:22"},{"body":{"nativeSrc":"679:102:22","nodeType":"YulBlock","src":"679:102:22","statements":[{"nativeSrc":"689:26:22","nodeType":"YulAssignment","src":"689:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"701:9:22","nodeType":"YulIdentifier","src":"701:9:22"},{"kind":"number","nativeSrc":"712:2:22","nodeType":"YulLiteral","src":"712:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"697:3:22","nodeType":"YulIdentifier","src":"697:3:22"},"nativeSrc":"697:18:22","nodeType":"YulFunctionCall","src":"697:18:22"},"variableNames":[{"name":"tail","nativeSrc":"689:4:22","nodeType":"YulIdentifier","src":"689:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"731:9:22","nodeType":"YulIdentifier","src":"731:9:22"},{"arguments":[{"name":"value0","nativeSrc":"746:6:22","nodeType":"YulIdentifier","src":"746:6:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"762:3:22","nodeType":"YulLiteral","src":"762:3:22","type":"","value":"160"},{"kind":"number","nativeSrc":"767:1:22","nodeType":"YulLiteral","src":"767:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"758:3:22","nodeType":"YulIdentifier","src":"758:3:22"},"nativeSrc":"758:11:22","nodeType":"YulFunctionCall","src":"758:11:22"},{"kind":"number","nativeSrc":"771:1:22","nodeType":"YulLiteral","src":"771:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"754:3:22","nodeType":"YulIdentifier","src":"754:3:22"},"nativeSrc":"754:19:22","nodeType":"YulFunctionCall","src":"754:19:22"}],"functionName":{"name":"and","nativeSrc":"742:3:22","nodeType":"YulIdentifier","src":"742:3:22"},"nativeSrc":"742:32:22","nodeType":"YulFunctionCall","src":"742:32:22"}],"functionName":{"name":"mstore","nativeSrc":"724:6:22","nodeType":"YulIdentifier","src":"724:6:22"},"nativeSrc":"724:51:22","nodeType":"YulFunctionCall","src":"724:51:22"},"nativeSrc":"724:51:22","nodeType":"YulExpressionStatement","src":"724:51:22"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"578:203:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"648:9:22","nodeType":"YulTypedName","src":"648:9:22","type":""},{"name":"value0","nativeSrc":"659:6:22","nodeType":"YulTypedName","src":"659:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"670:4:22","nodeType":"YulTypedName","src":"670:4:22","type":""}],"src":"578:203:22"}]},"contents":"{\n    { }\n    function validator_revert_contract_IERC20(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_contract$_IERC20_$902t_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_contract_IERC20(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_contract_IERC20(value_1)\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}","id":22,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b5060405161086e38038061086e83398101604081905261002f916100f6565b806001600160a01b03811661005e57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6100678161008e565b5050600180546001600160a01b0319166001600160a01b0392909216919091179055610130565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811681146100f357600080fd5b50565b6000806040838503121561010957600080fd5b8251610114816100de565b6020840151909250610125816100de565b809150509250929050565b61072f8061013f6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063715018a61161005b578063715018a6146100d35780638da5cb5b146100dd578063f2fde38b14610102578063fd994c161461011557600080fd5b80631f4aad2a14610082578063357291301461009d578063412664ae146100c0575b600080fd5b61008a610128565b6040519081526020015b60405180910390f35b6100b06100ab366004610615565b61019a565b6040519015158152602001610094565b6100b06100ce366004610615565b6102e2565b6100db61052a565b005b6000546001600160a01b03165b6040516001600160a01b039091168152602001610094565b6100db61011036600461063f565b61053e565b6001546100ea906001600160a01b031681565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610171573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101959190610661565b905090565b6001546000906001600160a01b031633146101d05760405162461bcd60e51b81526004016101c79061067a565b60405180910390fd5b6001546040516323b872dd60e01b81526001600160a01b0385811660048301523060248301526044820185905260009216906323b872dd906064016020604051808303816000875af115801561022a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061024e91906106d7565b9050806102955760405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b60448201526064016101c7565b836001600160a01b03167f656c83d0d1a4a41c0e34ea8b02d211385e09a2cf0c0922435884dc1a64cd9ce0846040516102d091815260200190565b60405180910390a25060019392505050565b6001546000906001600160a01b0316331461030f5760405162461bcd60e51b81526004016101c79061067a565b6000821161035f5760405162461bcd60e51b815260206004820181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f60448201526064016101c7565b6001546040516370a0823160e01b815230600482015283916001600160a01b0316906370a0823190602401602060405180830381865afa1580156103a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103cb9190610661565b10156104235760405162461bcd60e51b815260206004820152602160248201527f5661756c7420646f6573206e6f74206861766520656e6f75676820746f6b656e6044820152607360f81b60648201526084016101c7565b60015460405163a9059cbb60e01b81526001600160a01b038581166004830152602482018590529091169063a9059cbb906044016020604051808303816000875af1158015610476573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049a91906106d7565b6104de5760405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b60448201526064016101c7565b826001600160a01b03167f16b0da2ffcb90c6723317bd637d9aad7f04711f42bbe0ac0918ebe10f1f9001c8360405161051991815260200190565b60405180910390a250600192915050565b61053261057c565b61053c60006105a9565b565b61054661057c565b6001600160a01b03811661057057604051631e4fbdf760e01b8152600060048201526024016101c7565b610579816105a9565b50565b6000546001600160a01b0316331461053c5760405163118cdaa760e01b81523360048201526024016101c7565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461061057600080fd5b919050565b6000806040838503121561062857600080fd5b610631836105f9565b946020939093013593505050565b60006020828403121561065157600080fd5b61065a826105f9565b9392505050565b60006020828403121561067357600080fd5b5051919050565b6020808252603b908201527f546869732066756e6374696f6e2063616e206f6e6c792062652063616c6c656460408201527f20627920746865206f7973746572546f6b656e20616464726573730000000000606082015260800190565b6000602082840312156106e957600080fd5b8151801515811461065a57600080fdfea2646970667358221220d4d8cac16297d80063160a96e05d1daa5f3605b586ce3ef41fe7f673472f85b464736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x86E CODESIZE SUB DUP1 PUSH2 0x86E DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0xF6 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5E JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x67 DUP2 PUSH2 0x8E JUMP JUMPDEST POP POP PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x130 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x109 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH2 0x114 DUP2 PUSH2 0xDE JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP3 POP PUSH2 0x125 DUP2 PUSH2 0xDE JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x72F DUP1 PUSH2 0x13F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0xFD994C16 EQ PUSH2 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1F4AAD2A EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x35729130 EQ PUSH2 0x9D JUMPI DUP1 PUSH4 0x412664AE EQ PUSH2 0xC0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A PUSH2 0x128 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB0 PUSH2 0xAB CALLDATASIZE PUSH1 0x4 PUSH2 0x615 JUMP JUMPDEST PUSH2 0x19A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x94 JUMP JUMPDEST PUSH2 0xB0 PUSH2 0xCE CALLDATASIZE PUSH1 0x4 PUSH2 0x615 JUMP JUMPDEST PUSH2 0x2E2 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x52A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x94 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x110 CALLDATASIZE PUSH1 0x4 PUSH2 0x63F JUMP JUMPDEST PUSH2 0x53E JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xEA SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x171 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x195 SWAP2 SWAP1 PUSH2 0x661 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C7 SWAP1 PUSH2 0x67A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x0 SWAP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x22A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x24E SWAP2 SWAP1 PUSH2 0x6D7 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x295 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x151BDAD95B881D1C985B9CD9995C8819985A5B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1C7 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x656C83D0D1A4A41C0E34EA8B02D211385E09A2CF0C0922435884DC1A64CD9CE0 DUP5 PUSH1 0x40 MLOAD PUSH2 0x2D0 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x30F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C7 SWAP1 PUSH2 0x67A JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x35F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1C7 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP4 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3A7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3CB SWAP2 SWAP1 PUSH2 0x661 JUMP JUMPDEST LT ISZERO PUSH2 0x423 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5661756C7420646F6573206E6F74206861766520656E6F75676820746F6B656E PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1C7 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x476 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x49A SWAP2 SWAP1 PUSH2 0x6D7 JUMP JUMPDEST PUSH2 0x4DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x151BDAD95B881D1C985B9CD9995C8819985A5B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1C7 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x16B0DA2FFCB90C6723317BD637D9AAD7F04711F42BBE0AC0918EBE10F1F9001C DUP4 PUSH1 0x40 MLOAD PUSH2 0x519 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x532 PUSH2 0x57C JUMP JUMPDEST PUSH2 0x53C PUSH1 0x0 PUSH2 0x5A9 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x546 PUSH2 0x57C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x570 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x1C7 JUMP JUMPDEST PUSH2 0x579 DUP2 PUSH2 0x5A9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x53C JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x1C7 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x610 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x628 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x631 DUP4 PUSH2 0x5F9 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x651 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x65A DUP3 PUSH2 0x5F9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x673 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x3B SWAP1 DUP3 ADD MSTORE PUSH32 0x546869732066756E6374696F6E2063616E206F6E6C792062652063616C6C6564 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x20627920746865206F7973746572546F6B656E20616464726573730000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x65A JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 0xD8 0xCA 0xC1 PUSH3 0x97D800 PUSH4 0x160A96E0 TSTORE SAR 0xAA PUSH0 CALLDATASIZE SDIV 0xB5 DUP7 0xCE RETURNDATACOPY DELEGATECALL 0x1F 0xE7 0xF6 PUSH20 0x472F85B464736F6C634300081C00330000000000 ","sourceMap":"3502:1460:21:-:0;;;3869:120;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3932:12;-1:-1:-1;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;724:51:22;697:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;;3956:11:21::1;:26:::0;;-1:-1:-1;;;;;;3956:26:21::1;-1:-1:-1::0;;;;;3956:26:21;;;::::1;::::0;;;::::1;::::0;;3502:1460;;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:139:22:-;-1:-1:-1;;;;;97:31:22;;87:42;;77:70;;143:1;140;133:12;77:70;14:139;:::o;158:415::-;251:6;259;312:2;300:9;291:7;287:23;283:32;280:52;;;328:1;325;318:12;280:52;360:9;354:16;379:39;412:5;379:39;:::i;:::-;487:2;472:18;;466:25;437:5;;-1:-1:-1;500:41:22;466:25;500:41;:::i;:::-;560:7;550:17;;;158:415;;;;;:::o;578:203::-;3502:1460:21;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_84":{"entryPoint":1404,"id":84,"parameterSlots":0,"returnSlots":0},"@_msgSender_1130":{"entryPoint":null,"id":1130,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_146":{"entryPoint":1449,"id":146,"parameterSlots":1,"returnSlots":0},"@owner_67":{"entryPoint":null,"id":67,"parameterSlots":0,"returnSlots":1},"@oysterToken_7925":{"entryPoint":null,"id":7925,"parameterSlots":0,"returnSlots":0},"@receiveTokens_8054":{"entryPoint":410,"id":8054,"parameterSlots":2,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":1322,"id":98,"parameterSlots":0,"returnSlots":0},"@sendToken_8016":{"entryPoint":738,"id":8016,"parameterSlots":2,"returnSlots":1},"@transferOwnership_126":{"entryPoint":1342,"id":126,"parameterSlots":1,"returnSlots":0},"@viewTokensVault_8068":{"entryPoint":296,"id":8068,"parameterSlots":0,"returnSlots":1},"abi_decode_address":{"entryPoint":1529,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":1599,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":1557,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":1751,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":1633,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IERC20_$902__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cc19085001e9818f32dd30d3cc43fa530e646a53f894e501ea6a63ca41ede20a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1658,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_eb82580376e5d7bd4b895a715ffd64472b5471ab14ab5b2b30156085d7bfd252__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:4110:22","nodeType":"YulBlock","src":"0:4110:22","statements":[{"nativeSrc":"6:3:22","nodeType":"YulBlock","src":"6:3:22","statements":[]},{"body":{"nativeSrc":"115:76:22","nodeType":"YulBlock","src":"115:76:22","statements":[{"nativeSrc":"125:26:22","nodeType":"YulAssignment","src":"125:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"137:9:22","nodeType":"YulIdentifier","src":"137:9:22"},{"kind":"number","nativeSrc":"148:2:22","nodeType":"YulLiteral","src":"148:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"133:3:22","nodeType":"YulIdentifier","src":"133:3:22"},"nativeSrc":"133:18:22","nodeType":"YulFunctionCall","src":"133:18:22"},"variableNames":[{"name":"tail","nativeSrc":"125:4:22","nodeType":"YulIdentifier","src":"125:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"167:9:22","nodeType":"YulIdentifier","src":"167:9:22"},{"name":"value0","nativeSrc":"178:6:22","nodeType":"YulIdentifier","src":"178:6:22"}],"functionName":{"name":"mstore","nativeSrc":"160:6:22","nodeType":"YulIdentifier","src":"160:6:22"},"nativeSrc":"160:25:22","nodeType":"YulFunctionCall","src":"160:25:22"},"nativeSrc":"160:25:22","nodeType":"YulExpressionStatement","src":"160:25:22"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"14:177:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"84:9:22","nodeType":"YulTypedName","src":"84:9:22","type":""},{"name":"value0","nativeSrc":"95:6:22","nodeType":"YulTypedName","src":"95:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"106:4:22","nodeType":"YulTypedName","src":"106:4:22","type":""}],"src":"14:177:22"},{"body":{"nativeSrc":"245:124:22","nodeType":"YulBlock","src":"245:124:22","statements":[{"nativeSrc":"255:29:22","nodeType":"YulAssignment","src":"255:29:22","value":{"arguments":[{"name":"offset","nativeSrc":"277:6:22","nodeType":"YulIdentifier","src":"277:6:22"}],"functionName":{"name":"calldataload","nativeSrc":"264:12:22","nodeType":"YulIdentifier","src":"264:12:22"},"nativeSrc":"264:20:22","nodeType":"YulFunctionCall","src":"264:20:22"},"variableNames":[{"name":"value","nativeSrc":"255:5:22","nodeType":"YulIdentifier","src":"255:5:22"}]},{"body":{"nativeSrc":"347:16:22","nodeType":"YulBlock","src":"347:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"356:1:22","nodeType":"YulLiteral","src":"356:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"359:1:22","nodeType":"YulLiteral","src":"359:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"349:6:22","nodeType":"YulIdentifier","src":"349:6:22"},"nativeSrc":"349:12:22","nodeType":"YulFunctionCall","src":"349:12:22"},"nativeSrc":"349:12:22","nodeType":"YulExpressionStatement","src":"349:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"306:5:22","nodeType":"YulIdentifier","src":"306:5:22"},{"arguments":[{"name":"value","nativeSrc":"317:5:22","nodeType":"YulIdentifier","src":"317:5:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"332:3:22","nodeType":"YulLiteral","src":"332:3:22","type":"","value":"160"},{"kind":"number","nativeSrc":"337:1:22","nodeType":"YulLiteral","src":"337:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"328:3:22","nodeType":"YulIdentifier","src":"328:3:22"},"nativeSrc":"328:11:22","nodeType":"YulFunctionCall","src":"328:11:22"},{"kind":"number","nativeSrc":"341:1:22","nodeType":"YulLiteral","src":"341:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"324:3:22","nodeType":"YulIdentifier","src":"324:3:22"},"nativeSrc":"324:19:22","nodeType":"YulFunctionCall","src":"324:19:22"}],"functionName":{"name":"and","nativeSrc":"313:3:22","nodeType":"YulIdentifier","src":"313:3:22"},"nativeSrc":"313:31:22","nodeType":"YulFunctionCall","src":"313:31:22"}],"functionName":{"name":"eq","nativeSrc":"303:2:22","nodeType":"YulIdentifier","src":"303:2:22"},"nativeSrc":"303:42:22","nodeType":"YulFunctionCall","src":"303:42:22"}],"functionName":{"name":"iszero","nativeSrc":"296:6:22","nodeType":"YulIdentifier","src":"296:6:22"},"nativeSrc":"296:50:22","nodeType":"YulFunctionCall","src":"296:50:22"},"nativeSrc":"293:70:22","nodeType":"YulIf","src":"293:70:22"}]},"name":"abi_decode_address","nativeSrc":"196:173:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"224:6:22","nodeType":"YulTypedName","src":"224:6:22","type":""}],"returnVariables":[{"name":"value","nativeSrc":"235:5:22","nodeType":"YulTypedName","src":"235:5:22","type":""}],"src":"196:173:22"},{"body":{"nativeSrc":"461:167:22","nodeType":"YulBlock","src":"461:167:22","statements":[{"body":{"nativeSrc":"507:16:22","nodeType":"YulBlock","src":"507:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"516:1:22","nodeType":"YulLiteral","src":"516:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"519:1:22","nodeType":"YulLiteral","src":"519:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"509:6:22","nodeType":"YulIdentifier","src":"509:6:22"},"nativeSrc":"509:12:22","nodeType":"YulFunctionCall","src":"509:12:22"},"nativeSrc":"509:12:22","nodeType":"YulExpressionStatement","src":"509:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"482:7:22","nodeType":"YulIdentifier","src":"482:7:22"},{"name":"headStart","nativeSrc":"491:9:22","nodeType":"YulIdentifier","src":"491:9:22"}],"functionName":{"name":"sub","nativeSrc":"478:3:22","nodeType":"YulIdentifier","src":"478:3:22"},"nativeSrc":"478:23:22","nodeType":"YulFunctionCall","src":"478:23:22"},{"kind":"number","nativeSrc":"503:2:22","nodeType":"YulLiteral","src":"503:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"474:3:22","nodeType":"YulIdentifier","src":"474:3:22"},"nativeSrc":"474:32:22","nodeType":"YulFunctionCall","src":"474:32:22"},"nativeSrc":"471:52:22","nodeType":"YulIf","src":"471:52:22"},{"nativeSrc":"532:39:22","nodeType":"YulAssignment","src":"532:39:22","value":{"arguments":[{"name":"headStart","nativeSrc":"561:9:22","nodeType":"YulIdentifier","src":"561:9:22"}],"functionName":{"name":"abi_decode_address","nativeSrc":"542:18:22","nodeType":"YulIdentifier","src":"542:18:22"},"nativeSrc":"542:29:22","nodeType":"YulFunctionCall","src":"542:29:22"},"variableNames":[{"name":"value0","nativeSrc":"532:6:22","nodeType":"YulIdentifier","src":"532:6:22"}]},{"nativeSrc":"580:42:22","nodeType":"YulAssignment","src":"580:42:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"607:9:22","nodeType":"YulIdentifier","src":"607:9:22"},{"kind":"number","nativeSrc":"618:2:22","nodeType":"YulLiteral","src":"618:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"603:3:22","nodeType":"YulIdentifier","src":"603:3:22"},"nativeSrc":"603:18:22","nodeType":"YulFunctionCall","src":"603:18:22"}],"functionName":{"name":"calldataload","nativeSrc":"590:12:22","nodeType":"YulIdentifier","src":"590:12:22"},"nativeSrc":"590:32:22","nodeType":"YulFunctionCall","src":"590:32:22"},"variableNames":[{"name":"value1","nativeSrc":"580:6:22","nodeType":"YulIdentifier","src":"580:6:22"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"374:254:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"419:9:22","nodeType":"YulTypedName","src":"419:9:22","type":""},{"name":"dataEnd","nativeSrc":"430:7:22","nodeType":"YulTypedName","src":"430:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"442:6:22","nodeType":"YulTypedName","src":"442:6:22","type":""},{"name":"value1","nativeSrc":"450:6:22","nodeType":"YulTypedName","src":"450:6:22","type":""}],"src":"374:254:22"},{"body":{"nativeSrc":"728:92:22","nodeType":"YulBlock","src":"728:92:22","statements":[{"nativeSrc":"738:26:22","nodeType":"YulAssignment","src":"738:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"750:9:22","nodeType":"YulIdentifier","src":"750:9:22"},{"kind":"number","nativeSrc":"761:2:22","nodeType":"YulLiteral","src":"761:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"746:3:22","nodeType":"YulIdentifier","src":"746:3:22"},"nativeSrc":"746:18:22","nodeType":"YulFunctionCall","src":"746:18:22"},"variableNames":[{"name":"tail","nativeSrc":"738:4:22","nodeType":"YulIdentifier","src":"738:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"780:9:22","nodeType":"YulIdentifier","src":"780:9:22"},{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"805:6:22","nodeType":"YulIdentifier","src":"805:6:22"}],"functionName":{"name":"iszero","nativeSrc":"798:6:22","nodeType":"YulIdentifier","src":"798:6:22"},"nativeSrc":"798:14:22","nodeType":"YulFunctionCall","src":"798:14:22"}],"functionName":{"name":"iszero","nativeSrc":"791:6:22","nodeType":"YulIdentifier","src":"791:6:22"},"nativeSrc":"791:22:22","nodeType":"YulFunctionCall","src":"791:22:22"}],"functionName":{"name":"mstore","nativeSrc":"773:6:22","nodeType":"YulIdentifier","src":"773:6:22"},"nativeSrc":"773:41:22","nodeType":"YulFunctionCall","src":"773:41:22"},"nativeSrc":"773:41:22","nodeType":"YulExpressionStatement","src":"773:41:22"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"633:187:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"697:9:22","nodeType":"YulTypedName","src":"697:9:22","type":""},{"name":"value0","nativeSrc":"708:6:22","nodeType":"YulTypedName","src":"708:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"719:4:22","nodeType":"YulTypedName","src":"719:4:22","type":""}],"src":"633:187:22"},{"body":{"nativeSrc":"926:102:22","nodeType":"YulBlock","src":"926:102:22","statements":[{"nativeSrc":"936:26:22","nodeType":"YulAssignment","src":"936:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"948:9:22","nodeType":"YulIdentifier","src":"948:9:22"},{"kind":"number","nativeSrc":"959:2:22","nodeType":"YulLiteral","src":"959:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"944:3:22","nodeType":"YulIdentifier","src":"944:3:22"},"nativeSrc":"944:18:22","nodeType":"YulFunctionCall","src":"944:18:22"},"variableNames":[{"name":"tail","nativeSrc":"936:4:22","nodeType":"YulIdentifier","src":"936:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"978:9:22","nodeType":"YulIdentifier","src":"978:9:22"},{"arguments":[{"name":"value0","nativeSrc":"993:6:22","nodeType":"YulIdentifier","src":"993:6:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1009:3:22","nodeType":"YulLiteral","src":"1009:3:22","type":"","value":"160"},{"kind":"number","nativeSrc":"1014:1:22","nodeType":"YulLiteral","src":"1014:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1005:3:22","nodeType":"YulIdentifier","src":"1005:3:22"},"nativeSrc":"1005:11:22","nodeType":"YulFunctionCall","src":"1005:11:22"},{"kind":"number","nativeSrc":"1018:1:22","nodeType":"YulLiteral","src":"1018:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1001:3:22","nodeType":"YulIdentifier","src":"1001:3:22"},"nativeSrc":"1001:19:22","nodeType":"YulFunctionCall","src":"1001:19:22"}],"functionName":{"name":"and","nativeSrc":"989:3:22","nodeType":"YulIdentifier","src":"989:3:22"},"nativeSrc":"989:32:22","nodeType":"YulFunctionCall","src":"989:32:22"}],"functionName":{"name":"mstore","nativeSrc":"971:6:22","nodeType":"YulIdentifier","src":"971:6:22"},"nativeSrc":"971:51:22","nodeType":"YulFunctionCall","src":"971:51:22"},"nativeSrc":"971:51:22","nodeType":"YulExpressionStatement","src":"971:51:22"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"825:203:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"895:9:22","nodeType":"YulTypedName","src":"895:9:22","type":""},{"name":"value0","nativeSrc":"906:6:22","nodeType":"YulTypedName","src":"906:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"917:4:22","nodeType":"YulTypedName","src":"917:4:22","type":""}],"src":"825:203:22"},{"body":{"nativeSrc":"1103:116:22","nodeType":"YulBlock","src":"1103:116:22","statements":[{"body":{"nativeSrc":"1149:16:22","nodeType":"YulBlock","src":"1149:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1158:1:22","nodeType":"YulLiteral","src":"1158:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"1161:1:22","nodeType":"YulLiteral","src":"1161:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1151:6:22","nodeType":"YulIdentifier","src":"1151:6:22"},"nativeSrc":"1151:12:22","nodeType":"YulFunctionCall","src":"1151:12:22"},"nativeSrc":"1151:12:22","nodeType":"YulExpressionStatement","src":"1151:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1124:7:22","nodeType":"YulIdentifier","src":"1124:7:22"},{"name":"headStart","nativeSrc":"1133:9:22","nodeType":"YulIdentifier","src":"1133:9:22"}],"functionName":{"name":"sub","nativeSrc":"1120:3:22","nodeType":"YulIdentifier","src":"1120:3:22"},"nativeSrc":"1120:23:22","nodeType":"YulFunctionCall","src":"1120:23:22"},{"kind":"number","nativeSrc":"1145:2:22","nodeType":"YulLiteral","src":"1145:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"1116:3:22","nodeType":"YulIdentifier","src":"1116:3:22"},"nativeSrc":"1116:32:22","nodeType":"YulFunctionCall","src":"1116:32:22"},"nativeSrc":"1113:52:22","nodeType":"YulIf","src":"1113:52:22"},{"nativeSrc":"1174:39:22","nodeType":"YulAssignment","src":"1174:39:22","value":{"arguments":[{"name":"headStart","nativeSrc":"1203:9:22","nodeType":"YulIdentifier","src":"1203:9:22"}],"functionName":{"name":"abi_decode_address","nativeSrc":"1184:18:22","nodeType":"YulIdentifier","src":"1184:18:22"},"nativeSrc":"1184:29:22","nodeType":"YulFunctionCall","src":"1184:29:22"},"variableNames":[{"name":"value0","nativeSrc":"1174:6:22","nodeType":"YulIdentifier","src":"1174:6:22"}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"1033:186:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1069:9:22","nodeType":"YulTypedName","src":"1069:9:22","type":""},{"name":"dataEnd","nativeSrc":"1080:7:22","nodeType":"YulTypedName","src":"1080:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1092:6:22","nodeType":"YulTypedName","src":"1092:6:22","type":""}],"src":"1033:186:22"},{"body":{"nativeSrc":"1339:102:22","nodeType":"YulBlock","src":"1339:102:22","statements":[{"nativeSrc":"1349:26:22","nodeType":"YulAssignment","src":"1349:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"1361:9:22","nodeType":"YulIdentifier","src":"1361:9:22"},{"kind":"number","nativeSrc":"1372:2:22","nodeType":"YulLiteral","src":"1372:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1357:3:22","nodeType":"YulIdentifier","src":"1357:3:22"},"nativeSrc":"1357:18:22","nodeType":"YulFunctionCall","src":"1357:18:22"},"variableNames":[{"name":"tail","nativeSrc":"1349:4:22","nodeType":"YulIdentifier","src":"1349:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1391:9:22","nodeType":"YulIdentifier","src":"1391:9:22"},{"arguments":[{"name":"value0","nativeSrc":"1406:6:22","nodeType":"YulIdentifier","src":"1406:6:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1422:3:22","nodeType":"YulLiteral","src":"1422:3:22","type":"","value":"160"},{"kind":"number","nativeSrc":"1427:1:22","nodeType":"YulLiteral","src":"1427:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1418:3:22","nodeType":"YulIdentifier","src":"1418:3:22"},"nativeSrc":"1418:11:22","nodeType":"YulFunctionCall","src":"1418:11:22"},{"kind":"number","nativeSrc":"1431:1:22","nodeType":"YulLiteral","src":"1431:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1414:3:22","nodeType":"YulIdentifier","src":"1414:3:22"},"nativeSrc":"1414:19:22","nodeType":"YulFunctionCall","src":"1414:19:22"}],"functionName":{"name":"and","nativeSrc":"1402:3:22","nodeType":"YulIdentifier","src":"1402:3:22"},"nativeSrc":"1402:32:22","nodeType":"YulFunctionCall","src":"1402:32:22"}],"functionName":{"name":"mstore","nativeSrc":"1384:6:22","nodeType":"YulIdentifier","src":"1384:6:22"},"nativeSrc":"1384:51:22","nodeType":"YulFunctionCall","src":"1384:51:22"},"nativeSrc":"1384:51:22","nodeType":"YulExpressionStatement","src":"1384:51:22"}]},"name":"abi_encode_tuple_t_contract$_IERC20_$902__to_t_address__fromStack_reversed","nativeSrc":"1224:217:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1308:9:22","nodeType":"YulTypedName","src":"1308:9:22","type":""},{"name":"value0","nativeSrc":"1319:6:22","nodeType":"YulTypedName","src":"1319:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1330:4:22","nodeType":"YulTypedName","src":"1330:4:22","type":""}],"src":"1224:217:22"},{"body":{"nativeSrc":"1527:103:22","nodeType":"YulBlock","src":"1527:103:22","statements":[{"body":{"nativeSrc":"1573:16:22","nodeType":"YulBlock","src":"1573:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1582:1:22","nodeType":"YulLiteral","src":"1582:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"1585:1:22","nodeType":"YulLiteral","src":"1585:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1575:6:22","nodeType":"YulIdentifier","src":"1575:6:22"},"nativeSrc":"1575:12:22","nodeType":"YulFunctionCall","src":"1575:12:22"},"nativeSrc":"1575:12:22","nodeType":"YulExpressionStatement","src":"1575:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1548:7:22","nodeType":"YulIdentifier","src":"1548:7:22"},{"name":"headStart","nativeSrc":"1557:9:22","nodeType":"YulIdentifier","src":"1557:9:22"}],"functionName":{"name":"sub","nativeSrc":"1544:3:22","nodeType":"YulIdentifier","src":"1544:3:22"},"nativeSrc":"1544:23:22","nodeType":"YulFunctionCall","src":"1544:23:22"},{"kind":"number","nativeSrc":"1569:2:22","nodeType":"YulLiteral","src":"1569:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"1540:3:22","nodeType":"YulIdentifier","src":"1540:3:22"},"nativeSrc":"1540:32:22","nodeType":"YulFunctionCall","src":"1540:32:22"},"nativeSrc":"1537:52:22","nodeType":"YulIf","src":"1537:52:22"},{"nativeSrc":"1598:26:22","nodeType":"YulAssignment","src":"1598:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"1614:9:22","nodeType":"YulIdentifier","src":"1614:9:22"}],"functionName":{"name":"mload","nativeSrc":"1608:5:22","nodeType":"YulIdentifier","src":"1608:5:22"},"nativeSrc":"1608:16:22","nodeType":"YulFunctionCall","src":"1608:16:22"},"variableNames":[{"name":"value0","nativeSrc":"1598:6:22","nodeType":"YulIdentifier","src":"1598:6:22"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nativeSrc":"1446:184:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1493:9:22","nodeType":"YulTypedName","src":"1493:9:22","type":""},{"name":"dataEnd","nativeSrc":"1504:7:22","nodeType":"YulTypedName","src":"1504:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1516:6:22","nodeType":"YulTypedName","src":"1516:6:22","type":""}],"src":"1446:184:22"},{"body":{"nativeSrc":"1809:249:22","nodeType":"YulBlock","src":"1809:249:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1826:9:22","nodeType":"YulIdentifier","src":"1826:9:22"},{"kind":"number","nativeSrc":"1837:2:22","nodeType":"YulLiteral","src":"1837:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"1819:6:22","nodeType":"YulIdentifier","src":"1819:6:22"},"nativeSrc":"1819:21:22","nodeType":"YulFunctionCall","src":"1819:21:22"},"nativeSrc":"1819:21:22","nodeType":"YulExpressionStatement","src":"1819:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1860:9:22","nodeType":"YulIdentifier","src":"1860:9:22"},{"kind":"number","nativeSrc":"1871:2:22","nodeType":"YulLiteral","src":"1871:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1856:3:22","nodeType":"YulIdentifier","src":"1856:3:22"},"nativeSrc":"1856:18:22","nodeType":"YulFunctionCall","src":"1856:18:22"},{"kind":"number","nativeSrc":"1876:2:22","nodeType":"YulLiteral","src":"1876:2:22","type":"","value":"59"}],"functionName":{"name":"mstore","nativeSrc":"1849:6:22","nodeType":"YulIdentifier","src":"1849:6:22"},"nativeSrc":"1849:30:22","nodeType":"YulFunctionCall","src":"1849:30:22"},"nativeSrc":"1849:30:22","nodeType":"YulExpressionStatement","src":"1849:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1899:9:22","nodeType":"YulIdentifier","src":"1899:9:22"},{"kind":"number","nativeSrc":"1910:2:22","nodeType":"YulLiteral","src":"1910:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"1895:3:22","nodeType":"YulIdentifier","src":"1895:3:22"},"nativeSrc":"1895:18:22","nodeType":"YulFunctionCall","src":"1895:18:22"},{"hexValue":"546869732066756e6374696f6e2063616e206f6e6c792062652063616c6c6564","kind":"string","nativeSrc":"1915:34:22","nodeType":"YulLiteral","src":"1915:34:22","type":"","value":"This function can only be called"}],"functionName":{"name":"mstore","nativeSrc":"1888:6:22","nodeType":"YulIdentifier","src":"1888:6:22"},"nativeSrc":"1888:62:22","nodeType":"YulFunctionCall","src":"1888:62:22"},"nativeSrc":"1888:62:22","nodeType":"YulExpressionStatement","src":"1888:62:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1970:9:22","nodeType":"YulIdentifier","src":"1970:9:22"},{"kind":"number","nativeSrc":"1981:2:22","nodeType":"YulLiteral","src":"1981:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"1966:3:22","nodeType":"YulIdentifier","src":"1966:3:22"},"nativeSrc":"1966:18:22","nodeType":"YulFunctionCall","src":"1966:18:22"},{"hexValue":"20627920746865206f7973746572546f6b656e2061646472657373","kind":"string","nativeSrc":"1986:29:22","nodeType":"YulLiteral","src":"1986:29:22","type":"","value":" by the oysterToken address"}],"functionName":{"name":"mstore","nativeSrc":"1959:6:22","nodeType":"YulIdentifier","src":"1959:6:22"},"nativeSrc":"1959:57:22","nodeType":"YulFunctionCall","src":"1959:57:22"},"nativeSrc":"1959:57:22","nodeType":"YulExpressionStatement","src":"1959:57:22"},{"nativeSrc":"2025:27:22","nodeType":"YulAssignment","src":"2025:27:22","value":{"arguments":[{"name":"headStart","nativeSrc":"2037:9:22","nodeType":"YulIdentifier","src":"2037:9:22"},{"kind":"number","nativeSrc":"2048:3:22","nodeType":"YulLiteral","src":"2048:3:22","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"2033:3:22","nodeType":"YulIdentifier","src":"2033:3:22"},"nativeSrc":"2033:19:22","nodeType":"YulFunctionCall","src":"2033:19:22"},"variableNames":[{"name":"tail","nativeSrc":"2025:4:22","nodeType":"YulIdentifier","src":"2025:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_cc19085001e9818f32dd30d3cc43fa530e646a53f894e501ea6a63ca41ede20a__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"1635:423:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1786:9:22","nodeType":"YulTypedName","src":"1786:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1800:4:22","nodeType":"YulTypedName","src":"1800:4:22","type":""}],"src":"1635:423:22"},{"body":{"nativeSrc":"2220:214:22","nodeType":"YulBlock","src":"2220:214:22","statements":[{"nativeSrc":"2230:26:22","nodeType":"YulAssignment","src":"2230:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"2242:9:22","nodeType":"YulIdentifier","src":"2242:9:22"},{"kind":"number","nativeSrc":"2253:2:22","nodeType":"YulLiteral","src":"2253:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"2238:3:22","nodeType":"YulIdentifier","src":"2238:3:22"},"nativeSrc":"2238:18:22","nodeType":"YulFunctionCall","src":"2238:18:22"},"variableNames":[{"name":"tail","nativeSrc":"2230:4:22","nodeType":"YulIdentifier","src":"2230:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2272:9:22","nodeType":"YulIdentifier","src":"2272:9:22"},{"arguments":[{"name":"value0","nativeSrc":"2287:6:22","nodeType":"YulIdentifier","src":"2287:6:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2303:3:22","nodeType":"YulLiteral","src":"2303:3:22","type":"","value":"160"},{"kind":"number","nativeSrc":"2308:1:22","nodeType":"YulLiteral","src":"2308:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"2299:3:22","nodeType":"YulIdentifier","src":"2299:3:22"},"nativeSrc":"2299:11:22","nodeType":"YulFunctionCall","src":"2299:11:22"},{"kind":"number","nativeSrc":"2312:1:22","nodeType":"YulLiteral","src":"2312:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"2295:3:22","nodeType":"YulIdentifier","src":"2295:3:22"},"nativeSrc":"2295:19:22","nodeType":"YulFunctionCall","src":"2295:19:22"}],"functionName":{"name":"and","nativeSrc":"2283:3:22","nodeType":"YulIdentifier","src":"2283:3:22"},"nativeSrc":"2283:32:22","nodeType":"YulFunctionCall","src":"2283:32:22"}],"functionName":{"name":"mstore","nativeSrc":"2265:6:22","nodeType":"YulIdentifier","src":"2265:6:22"},"nativeSrc":"2265:51:22","nodeType":"YulFunctionCall","src":"2265:51:22"},"nativeSrc":"2265:51:22","nodeType":"YulExpressionStatement","src":"2265:51:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2336:9:22","nodeType":"YulIdentifier","src":"2336:9:22"},{"kind":"number","nativeSrc":"2347:2:22","nodeType":"YulLiteral","src":"2347:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2332:3:22","nodeType":"YulIdentifier","src":"2332:3:22"},"nativeSrc":"2332:18:22","nodeType":"YulFunctionCall","src":"2332:18:22"},{"arguments":[{"name":"value1","nativeSrc":"2356:6:22","nodeType":"YulIdentifier","src":"2356:6:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2372:3:22","nodeType":"YulLiteral","src":"2372:3:22","type":"","value":"160"},{"kind":"number","nativeSrc":"2377:1:22","nodeType":"YulLiteral","src":"2377:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"2368:3:22","nodeType":"YulIdentifier","src":"2368:3:22"},"nativeSrc":"2368:11:22","nodeType":"YulFunctionCall","src":"2368:11:22"},{"kind":"number","nativeSrc":"2381:1:22","nodeType":"YulLiteral","src":"2381:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"2364:3:22","nodeType":"YulIdentifier","src":"2364:3:22"},"nativeSrc":"2364:19:22","nodeType":"YulFunctionCall","src":"2364:19:22"}],"functionName":{"name":"and","nativeSrc":"2352:3:22","nodeType":"YulIdentifier","src":"2352:3:22"},"nativeSrc":"2352:32:22","nodeType":"YulFunctionCall","src":"2352:32:22"}],"functionName":{"name":"mstore","nativeSrc":"2325:6:22","nodeType":"YulIdentifier","src":"2325:6:22"},"nativeSrc":"2325:60:22","nodeType":"YulFunctionCall","src":"2325:60:22"},"nativeSrc":"2325:60:22","nodeType":"YulExpressionStatement","src":"2325:60:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2405:9:22","nodeType":"YulIdentifier","src":"2405:9:22"},{"kind":"number","nativeSrc":"2416:2:22","nodeType":"YulLiteral","src":"2416:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"2401:3:22","nodeType":"YulIdentifier","src":"2401:3:22"},"nativeSrc":"2401:18:22","nodeType":"YulFunctionCall","src":"2401:18:22"},{"name":"value2","nativeSrc":"2421:6:22","nodeType":"YulIdentifier","src":"2421:6:22"}],"functionName":{"name":"mstore","nativeSrc":"2394:6:22","nodeType":"YulIdentifier","src":"2394:6:22"},"nativeSrc":"2394:34:22","nodeType":"YulFunctionCall","src":"2394:34:22"},"nativeSrc":"2394:34:22","nodeType":"YulExpressionStatement","src":"2394:34:22"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nativeSrc":"2063:371:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2173:9:22","nodeType":"YulTypedName","src":"2173:9:22","type":""},{"name":"value2","nativeSrc":"2184:6:22","nodeType":"YulTypedName","src":"2184:6:22","type":""},{"name":"value1","nativeSrc":"2192:6:22","nodeType":"YulTypedName","src":"2192:6:22","type":""},{"name":"value0","nativeSrc":"2200:6:22","nodeType":"YulTypedName","src":"2200:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2211:4:22","nodeType":"YulTypedName","src":"2211:4:22","type":""}],"src":"2063:371:22"},{"body":{"nativeSrc":"2517:199:22","nodeType":"YulBlock","src":"2517:199:22","statements":[{"body":{"nativeSrc":"2563:16:22","nodeType":"YulBlock","src":"2563:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2572:1:22","nodeType":"YulLiteral","src":"2572:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"2575:1:22","nodeType":"YulLiteral","src":"2575:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2565:6:22","nodeType":"YulIdentifier","src":"2565:6:22"},"nativeSrc":"2565:12:22","nodeType":"YulFunctionCall","src":"2565:12:22"},"nativeSrc":"2565:12:22","nodeType":"YulExpressionStatement","src":"2565:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2538:7:22","nodeType":"YulIdentifier","src":"2538:7:22"},{"name":"headStart","nativeSrc":"2547:9:22","nodeType":"YulIdentifier","src":"2547:9:22"}],"functionName":{"name":"sub","nativeSrc":"2534:3:22","nodeType":"YulIdentifier","src":"2534:3:22"},"nativeSrc":"2534:23:22","nodeType":"YulFunctionCall","src":"2534:23:22"},{"kind":"number","nativeSrc":"2559:2:22","nodeType":"YulLiteral","src":"2559:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"2530:3:22","nodeType":"YulIdentifier","src":"2530:3:22"},"nativeSrc":"2530:32:22","nodeType":"YulFunctionCall","src":"2530:32:22"},"nativeSrc":"2527:52:22","nodeType":"YulIf","src":"2527:52:22"},{"nativeSrc":"2588:29:22","nodeType":"YulVariableDeclaration","src":"2588:29:22","value":{"arguments":[{"name":"headStart","nativeSrc":"2607:9:22","nodeType":"YulIdentifier","src":"2607:9:22"}],"functionName":{"name":"mload","nativeSrc":"2601:5:22","nodeType":"YulIdentifier","src":"2601:5:22"},"nativeSrc":"2601:16:22","nodeType":"YulFunctionCall","src":"2601:16:22"},"variables":[{"name":"value","nativeSrc":"2592:5:22","nodeType":"YulTypedName","src":"2592:5:22","type":""}]},{"body":{"nativeSrc":"2670:16:22","nodeType":"YulBlock","src":"2670:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2679:1:22","nodeType":"YulLiteral","src":"2679:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"2682:1:22","nodeType":"YulLiteral","src":"2682:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2672:6:22","nodeType":"YulIdentifier","src":"2672:6:22"},"nativeSrc":"2672:12:22","nodeType":"YulFunctionCall","src":"2672:12:22"},"nativeSrc":"2672:12:22","nodeType":"YulExpressionStatement","src":"2672:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2639:5:22","nodeType":"YulIdentifier","src":"2639:5:22"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2660:5:22","nodeType":"YulIdentifier","src":"2660:5:22"}],"functionName":{"name":"iszero","nativeSrc":"2653:6:22","nodeType":"YulIdentifier","src":"2653:6:22"},"nativeSrc":"2653:13:22","nodeType":"YulFunctionCall","src":"2653:13:22"}],"functionName":{"name":"iszero","nativeSrc":"2646:6:22","nodeType":"YulIdentifier","src":"2646:6:22"},"nativeSrc":"2646:21:22","nodeType":"YulFunctionCall","src":"2646:21:22"}],"functionName":{"name":"eq","nativeSrc":"2636:2:22","nodeType":"YulIdentifier","src":"2636:2:22"},"nativeSrc":"2636:32:22","nodeType":"YulFunctionCall","src":"2636:32:22"}],"functionName":{"name":"iszero","nativeSrc":"2629:6:22","nodeType":"YulIdentifier","src":"2629:6:22"},"nativeSrc":"2629:40:22","nodeType":"YulFunctionCall","src":"2629:40:22"},"nativeSrc":"2626:60:22","nodeType":"YulIf","src":"2626:60:22"},{"nativeSrc":"2695:15:22","nodeType":"YulAssignment","src":"2695:15:22","value":{"name":"value","nativeSrc":"2705:5:22","nodeType":"YulIdentifier","src":"2705:5:22"},"variableNames":[{"name":"value0","nativeSrc":"2695:6:22","nodeType":"YulIdentifier","src":"2695:6:22"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nativeSrc":"2439:277:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2483:9:22","nodeType":"YulTypedName","src":"2483:9:22","type":""},{"name":"dataEnd","nativeSrc":"2494:7:22","nodeType":"YulTypedName","src":"2494:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2506:6:22","nodeType":"YulTypedName","src":"2506:6:22","type":""}],"src":"2439:277:22"},{"body":{"nativeSrc":"2895:171:22","nodeType":"YulBlock","src":"2895:171:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2912:9:22","nodeType":"YulIdentifier","src":"2912:9:22"},{"kind":"number","nativeSrc":"2923:2:22","nodeType":"YulLiteral","src":"2923:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"2905:6:22","nodeType":"YulIdentifier","src":"2905:6:22"},"nativeSrc":"2905:21:22","nodeType":"YulFunctionCall","src":"2905:21:22"},"nativeSrc":"2905:21:22","nodeType":"YulExpressionStatement","src":"2905:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2946:9:22","nodeType":"YulIdentifier","src":"2946:9:22"},{"kind":"number","nativeSrc":"2957:2:22","nodeType":"YulLiteral","src":"2957:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2942:3:22","nodeType":"YulIdentifier","src":"2942:3:22"},"nativeSrc":"2942:18:22","nodeType":"YulFunctionCall","src":"2942:18:22"},{"kind":"number","nativeSrc":"2962:2:22","nodeType":"YulLiteral","src":"2962:2:22","type":"","value":"21"}],"functionName":{"name":"mstore","nativeSrc":"2935:6:22","nodeType":"YulIdentifier","src":"2935:6:22"},"nativeSrc":"2935:30:22","nodeType":"YulFunctionCall","src":"2935:30:22"},"nativeSrc":"2935:30:22","nodeType":"YulExpressionStatement","src":"2935:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2985:9:22","nodeType":"YulIdentifier","src":"2985:9:22"},{"kind":"number","nativeSrc":"2996:2:22","nodeType":"YulLiteral","src":"2996:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"2981:3:22","nodeType":"YulIdentifier","src":"2981:3:22"},"nativeSrc":"2981:18:22","nodeType":"YulFunctionCall","src":"2981:18:22"},{"hexValue":"546f6b656e207472616e73666572206661696c6564","kind":"string","nativeSrc":"3001:23:22","nodeType":"YulLiteral","src":"3001:23:22","type":"","value":"Token transfer failed"}],"functionName":{"name":"mstore","nativeSrc":"2974:6:22","nodeType":"YulIdentifier","src":"2974:6:22"},"nativeSrc":"2974:51:22","nodeType":"YulFunctionCall","src":"2974:51:22"},"nativeSrc":"2974:51:22","nodeType":"YulExpressionStatement","src":"2974:51:22"},{"nativeSrc":"3034:26:22","nodeType":"YulAssignment","src":"3034:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"3046:9:22","nodeType":"YulIdentifier","src":"3046:9:22"},{"kind":"number","nativeSrc":"3057:2:22","nodeType":"YulLiteral","src":"3057:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"3042:3:22","nodeType":"YulIdentifier","src":"3042:3:22"},"nativeSrc":"3042:18:22","nodeType":"YulFunctionCall","src":"3042:18:22"},"variableNames":[{"name":"tail","nativeSrc":"3034:4:22","nodeType":"YulIdentifier","src":"3034:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"2721:345:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2872:9:22","nodeType":"YulTypedName","src":"2872:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2886:4:22","nodeType":"YulTypedName","src":"2886:4:22","type":""}],"src":"2721:345:22"},{"body":{"nativeSrc":"3245:182:22","nodeType":"YulBlock","src":"3245:182:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3262:9:22","nodeType":"YulIdentifier","src":"3262:9:22"},{"kind":"number","nativeSrc":"3273:2:22","nodeType":"YulLiteral","src":"3273:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"3255:6:22","nodeType":"YulIdentifier","src":"3255:6:22"},"nativeSrc":"3255:21:22","nodeType":"YulFunctionCall","src":"3255:21:22"},"nativeSrc":"3255:21:22","nodeType":"YulExpressionStatement","src":"3255:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3296:9:22","nodeType":"YulIdentifier","src":"3296:9:22"},{"kind":"number","nativeSrc":"3307:2:22","nodeType":"YulLiteral","src":"3307:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3292:3:22","nodeType":"YulIdentifier","src":"3292:3:22"},"nativeSrc":"3292:18:22","nodeType":"YulFunctionCall","src":"3292:18:22"},{"kind":"number","nativeSrc":"3312:2:22","nodeType":"YulLiteral","src":"3312:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"3285:6:22","nodeType":"YulIdentifier","src":"3285:6:22"},"nativeSrc":"3285:30:22","nodeType":"YulFunctionCall","src":"3285:30:22"},"nativeSrc":"3285:30:22","nodeType":"YulExpressionStatement","src":"3285:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3335:9:22","nodeType":"YulIdentifier","src":"3335:9:22"},{"kind":"number","nativeSrc":"3346:2:22","nodeType":"YulLiteral","src":"3346:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3331:3:22","nodeType":"YulIdentifier","src":"3331:3:22"},"nativeSrc":"3331:18:22","nodeType":"YulFunctionCall","src":"3331:18:22"},{"hexValue":"416d6f756e74206d7573742062652067726561746572207468616e207a65726f","kind":"string","nativeSrc":"3351:34:22","nodeType":"YulLiteral","src":"3351:34:22","type":"","value":"Amount must be greater than zero"}],"functionName":{"name":"mstore","nativeSrc":"3324:6:22","nodeType":"YulIdentifier","src":"3324:6:22"},"nativeSrc":"3324:62:22","nodeType":"YulFunctionCall","src":"3324:62:22"},"nativeSrc":"3324:62:22","nodeType":"YulExpressionStatement","src":"3324:62:22"},{"nativeSrc":"3395:26:22","nodeType":"YulAssignment","src":"3395:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"3407:9:22","nodeType":"YulIdentifier","src":"3407:9:22"},{"kind":"number","nativeSrc":"3418:2:22","nodeType":"YulLiteral","src":"3418:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"3403:3:22","nodeType":"YulIdentifier","src":"3403:3:22"},"nativeSrc":"3403:18:22","nodeType":"YulFunctionCall","src":"3403:18:22"},"variableNames":[{"name":"tail","nativeSrc":"3395:4:22","nodeType":"YulIdentifier","src":"3395:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"3071:356:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3222:9:22","nodeType":"YulTypedName","src":"3222:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3236:4:22","nodeType":"YulTypedName","src":"3236:4:22","type":""}],"src":"3071:356:22"},{"body":{"nativeSrc":"3606:223:22","nodeType":"YulBlock","src":"3606:223:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3623:9:22","nodeType":"YulIdentifier","src":"3623:9:22"},{"kind":"number","nativeSrc":"3634:2:22","nodeType":"YulLiteral","src":"3634:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"3616:6:22","nodeType":"YulIdentifier","src":"3616:6:22"},"nativeSrc":"3616:21:22","nodeType":"YulFunctionCall","src":"3616:21:22"},"nativeSrc":"3616:21:22","nodeType":"YulExpressionStatement","src":"3616:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3657:9:22","nodeType":"YulIdentifier","src":"3657:9:22"},{"kind":"number","nativeSrc":"3668:2:22","nodeType":"YulLiteral","src":"3668:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3653:3:22","nodeType":"YulIdentifier","src":"3653:3:22"},"nativeSrc":"3653:18:22","nodeType":"YulFunctionCall","src":"3653:18:22"},{"kind":"number","nativeSrc":"3673:2:22","nodeType":"YulLiteral","src":"3673:2:22","type":"","value":"33"}],"functionName":{"name":"mstore","nativeSrc":"3646:6:22","nodeType":"YulIdentifier","src":"3646:6:22"},"nativeSrc":"3646:30:22","nodeType":"YulFunctionCall","src":"3646:30:22"},"nativeSrc":"3646:30:22","nodeType":"YulExpressionStatement","src":"3646:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3696:9:22","nodeType":"YulIdentifier","src":"3696:9:22"},{"kind":"number","nativeSrc":"3707:2:22","nodeType":"YulLiteral","src":"3707:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3692:3:22","nodeType":"YulIdentifier","src":"3692:3:22"},"nativeSrc":"3692:18:22","nodeType":"YulFunctionCall","src":"3692:18:22"},{"hexValue":"5661756c7420646f6573206e6f74206861766520656e6f75676820746f6b656e","kind":"string","nativeSrc":"3712:34:22","nodeType":"YulLiteral","src":"3712:34:22","type":"","value":"Vault does not have enough token"}],"functionName":{"name":"mstore","nativeSrc":"3685:6:22","nodeType":"YulIdentifier","src":"3685:6:22"},"nativeSrc":"3685:62:22","nodeType":"YulFunctionCall","src":"3685:62:22"},"nativeSrc":"3685:62:22","nodeType":"YulExpressionStatement","src":"3685:62:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3767:9:22","nodeType":"YulIdentifier","src":"3767:9:22"},{"kind":"number","nativeSrc":"3778:2:22","nodeType":"YulLiteral","src":"3778:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"3763:3:22","nodeType":"YulIdentifier","src":"3763:3:22"},"nativeSrc":"3763:18:22","nodeType":"YulFunctionCall","src":"3763:18:22"},{"hexValue":"73","kind":"string","nativeSrc":"3783:3:22","nodeType":"YulLiteral","src":"3783:3:22","type":"","value":"s"}],"functionName":{"name":"mstore","nativeSrc":"3756:6:22","nodeType":"YulIdentifier","src":"3756:6:22"},"nativeSrc":"3756:31:22","nodeType":"YulFunctionCall","src":"3756:31:22"},"nativeSrc":"3756:31:22","nodeType":"YulExpressionStatement","src":"3756:31:22"},{"nativeSrc":"3796:27:22","nodeType":"YulAssignment","src":"3796:27:22","value":{"arguments":[{"name":"headStart","nativeSrc":"3808:9:22","nodeType":"YulIdentifier","src":"3808:9:22"},{"kind":"number","nativeSrc":"3819:3:22","nodeType":"YulLiteral","src":"3819:3:22","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"3804:3:22","nodeType":"YulIdentifier","src":"3804:3:22"},"nativeSrc":"3804:19:22","nodeType":"YulFunctionCall","src":"3804:19:22"},"variableNames":[{"name":"tail","nativeSrc":"3796:4:22","nodeType":"YulIdentifier","src":"3796:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_eb82580376e5d7bd4b895a715ffd64472b5471ab14ab5b2b30156085d7bfd252__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"3432:397:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3583:9:22","nodeType":"YulTypedName","src":"3583:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3597:4:22","nodeType":"YulTypedName","src":"3597:4:22","type":""}],"src":"3432:397:22"},{"body":{"nativeSrc":"3963:145:22","nodeType":"YulBlock","src":"3963:145:22","statements":[{"nativeSrc":"3973:26:22","nodeType":"YulAssignment","src":"3973:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"3985:9:22","nodeType":"YulIdentifier","src":"3985:9:22"},{"kind":"number","nativeSrc":"3996:2:22","nodeType":"YulLiteral","src":"3996:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3981:3:22","nodeType":"YulIdentifier","src":"3981:3:22"},"nativeSrc":"3981:18:22","nodeType":"YulFunctionCall","src":"3981:18:22"},"variableNames":[{"name":"tail","nativeSrc":"3973:4:22","nodeType":"YulIdentifier","src":"3973:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4015:9:22","nodeType":"YulIdentifier","src":"4015:9:22"},{"arguments":[{"name":"value0","nativeSrc":"4030:6:22","nodeType":"YulIdentifier","src":"4030:6:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4046:3:22","nodeType":"YulLiteral","src":"4046:3:22","type":"","value":"160"},{"kind":"number","nativeSrc":"4051:1:22","nodeType":"YulLiteral","src":"4051:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"4042:3:22","nodeType":"YulIdentifier","src":"4042:3:22"},"nativeSrc":"4042:11:22","nodeType":"YulFunctionCall","src":"4042:11:22"},{"kind":"number","nativeSrc":"4055:1:22","nodeType":"YulLiteral","src":"4055:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"4038:3:22","nodeType":"YulIdentifier","src":"4038:3:22"},"nativeSrc":"4038:19:22","nodeType":"YulFunctionCall","src":"4038:19:22"}],"functionName":{"name":"and","nativeSrc":"4026:3:22","nodeType":"YulIdentifier","src":"4026:3:22"},"nativeSrc":"4026:32:22","nodeType":"YulFunctionCall","src":"4026:32:22"}],"functionName":{"name":"mstore","nativeSrc":"4008:6:22","nodeType":"YulIdentifier","src":"4008:6:22"},"nativeSrc":"4008:51:22","nodeType":"YulFunctionCall","src":"4008:51:22"},"nativeSrc":"4008:51:22","nodeType":"YulExpressionStatement","src":"4008:51:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4079:9:22","nodeType":"YulIdentifier","src":"4079:9:22"},{"kind":"number","nativeSrc":"4090:2:22","nodeType":"YulLiteral","src":"4090:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4075:3:22","nodeType":"YulIdentifier","src":"4075:3:22"},"nativeSrc":"4075:18:22","nodeType":"YulFunctionCall","src":"4075:18:22"},{"name":"value1","nativeSrc":"4095:6:22","nodeType":"YulIdentifier","src":"4095:6:22"}],"functionName":{"name":"mstore","nativeSrc":"4068:6:22","nodeType":"YulIdentifier","src":"4068:6:22"},"nativeSrc":"4068:34:22","nodeType":"YulFunctionCall","src":"4068:34:22"},"nativeSrc":"4068:34:22","nodeType":"YulExpressionStatement","src":"4068:34:22"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"3834:274:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3924:9:22","nodeType":"YulTypedName","src":"3924:9:22","type":""},{"name":"value1","nativeSrc":"3935:6:22","nodeType":"YulTypedName","src":"3935:6:22","type":""},{"name":"value0","nativeSrc":"3943:6:22","nodeType":"YulTypedName","src":"3943:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3954:4:22","nodeType":"YulTypedName","src":"3954:4:22","type":""}],"src":"3834:274:22"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$902__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_cc19085001e9818f32dd30d3cc43fa530e646a53f894e501ea6a63ca41ede20a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 59)\n        mstore(add(headStart, 64), \"This function can only be called\")\n        mstore(add(headStart, 96), \" by the oysterToken address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Token transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Amount must be greater than zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_eb82580376e5d7bd4b895a715ffd64472b5471ab14ab5b2b30156085d7bfd252__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Vault does not have enough token\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n}","id":22,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061007d5760003560e01c8063715018a61161005b578063715018a6146100d35780638da5cb5b146100dd578063f2fde38b14610102578063fd994c161461011557600080fd5b80631f4aad2a14610082578063357291301461009d578063412664ae146100c0575b600080fd5b61008a610128565b6040519081526020015b60405180910390f35b6100b06100ab366004610615565b61019a565b6040519015158152602001610094565b6100b06100ce366004610615565b6102e2565b6100db61052a565b005b6000546001600160a01b03165b6040516001600160a01b039091168152602001610094565b6100db61011036600461063f565b61053e565b6001546100ea906001600160a01b031681565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610171573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101959190610661565b905090565b6001546000906001600160a01b031633146101d05760405162461bcd60e51b81526004016101c79061067a565b60405180910390fd5b6001546040516323b872dd60e01b81526001600160a01b0385811660048301523060248301526044820185905260009216906323b872dd906064016020604051808303816000875af115801561022a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061024e91906106d7565b9050806102955760405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b60448201526064016101c7565b836001600160a01b03167f656c83d0d1a4a41c0e34ea8b02d211385e09a2cf0c0922435884dc1a64cd9ce0846040516102d091815260200190565b60405180910390a25060019392505050565b6001546000906001600160a01b0316331461030f5760405162461bcd60e51b81526004016101c79061067a565b6000821161035f5760405162461bcd60e51b815260206004820181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f60448201526064016101c7565b6001546040516370a0823160e01b815230600482015283916001600160a01b0316906370a0823190602401602060405180830381865afa1580156103a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103cb9190610661565b10156104235760405162461bcd60e51b815260206004820152602160248201527f5661756c7420646f6573206e6f74206861766520656e6f75676820746f6b656e6044820152607360f81b60648201526084016101c7565b60015460405163a9059cbb60e01b81526001600160a01b038581166004830152602482018590529091169063a9059cbb906044016020604051808303816000875af1158015610476573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049a91906106d7565b6104de5760405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b60448201526064016101c7565b826001600160a01b03167f16b0da2ffcb90c6723317bd637d9aad7f04711f42bbe0ac0918ebe10f1f9001c8360405161051991815260200190565b60405180910390a250600192915050565b61053261057c565b61053c60006105a9565b565b61054661057c565b6001600160a01b03811661057057604051631e4fbdf760e01b8152600060048201526024016101c7565b610579816105a9565b50565b6000546001600160a01b0316331461053c5760405163118cdaa760e01b81523360048201526024016101c7565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461061057600080fd5b919050565b6000806040838503121561062857600080fd5b610631836105f9565b946020939093013593505050565b60006020828403121561065157600080fd5b61065a826105f9565b9392505050565b60006020828403121561067357600080fd5b5051919050565b6020808252603b908201527f546869732066756e6374696f6e2063616e206f6e6c792062652063616c6c656460408201527f20627920746865206f7973746572546f6b656e20616464726573730000000000606082015260800190565b6000602082840312156106e957600080fd5b8151801515811461065a57600080fdfea2646970667358221220d4d8cac16297d80063160a96e05d1daa5f3605b586ce3ef41fe7f673472f85b464736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0xFD994C16 EQ PUSH2 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1F4AAD2A EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x35729130 EQ PUSH2 0x9D JUMPI DUP1 PUSH4 0x412664AE EQ PUSH2 0xC0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A PUSH2 0x128 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB0 PUSH2 0xAB CALLDATASIZE PUSH1 0x4 PUSH2 0x615 JUMP JUMPDEST PUSH2 0x19A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x94 JUMP JUMPDEST PUSH2 0xB0 PUSH2 0xCE CALLDATASIZE PUSH1 0x4 PUSH2 0x615 JUMP JUMPDEST PUSH2 0x2E2 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x52A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x94 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x110 CALLDATASIZE PUSH1 0x4 PUSH2 0x63F JUMP JUMPDEST PUSH2 0x53E JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xEA SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x171 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x195 SWAP2 SWAP1 PUSH2 0x661 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C7 SWAP1 PUSH2 0x67A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x0 SWAP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x22A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x24E SWAP2 SWAP1 PUSH2 0x6D7 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x295 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x151BDAD95B881D1C985B9CD9995C8819985A5B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1C7 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x656C83D0D1A4A41C0E34EA8B02D211385E09A2CF0C0922435884DC1A64CD9CE0 DUP5 PUSH1 0x40 MLOAD PUSH2 0x2D0 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x30F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C7 SWAP1 PUSH2 0x67A JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x35F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1C7 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP4 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3A7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3CB SWAP2 SWAP1 PUSH2 0x661 JUMP JUMPDEST LT ISZERO PUSH2 0x423 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5661756C7420646F6573206E6F74206861766520656E6F75676820746F6B656E PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1C7 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x476 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x49A SWAP2 SWAP1 PUSH2 0x6D7 JUMP JUMPDEST PUSH2 0x4DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x151BDAD95B881D1C985B9CD9995C8819985A5B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1C7 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x16B0DA2FFCB90C6723317BD637D9AAD7F04711F42BBE0AC0918EBE10F1F9001C DUP4 PUSH1 0x40 MLOAD PUSH2 0x519 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x532 PUSH2 0x57C JUMP JUMPDEST PUSH2 0x53C PUSH1 0x0 PUSH2 0x5A9 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x546 PUSH2 0x57C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x570 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x1C7 JUMP JUMPDEST PUSH2 0x579 DUP2 PUSH2 0x5A9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x53C JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x1C7 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x610 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x628 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x631 DUP4 PUSH2 0x5F9 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x651 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x65A DUP3 PUSH2 0x5F9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x673 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x3B SWAP1 DUP3 ADD MSTORE PUSH32 0x546869732066756E6374696F6E2063616E206F6E6C792062652063616C6C6564 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x20627920746865206F7973746572546F6B656E20616464726573730000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x65A JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 0xD8 0xCA 0xC1 PUSH3 0x97D800 PUSH4 0x160A96E0 TSTORE SAR 0xAA PUSH0 CALLDATASIZE SDIV 0xB5 DUP7 0xCE RETURNDATACOPY DELEGATECALL 0x1F 0xE7 0xF6 PUSH20 0x472F85B464736F6C634300081C00330000000000 ","sourceMap":"3502:1460:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4841:119;;;:::i;:::-;;;160:25:22;;;148:2;133:18;4841:119:21;;;;;;;;4505:330;;;;;;:::i;:::-;;:::i;:::-;;;798:14:22;;791:22;773:41;;761:2;746:18;4505:330:21;633:187:22;3995:504:21;;;;;;:::i;:::-;;:::i;2293:101:0:-;;;:::i;:::-;;1638:85;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;1638:85;;;-1:-1:-1;;;;;989:32:22;;;971:51;;959:2;944:18;1638:85:0;825:203:22;2543:215:0;;;;;;:::i;:::-;;:::i;3540:25:21:-;;;;;-1:-1:-1;;;;;3540:25:21;;;4841:119;4917:11;;:36;;-1:-1:-1;;;4917:36:21;;4947:4;4917:36;;;971:51:22;4891:7:21;;-1:-1:-1;;;;;4917:11:21;;:21;;944:18:22;;4917:36:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4910:43;;4841:119;:::o;4505:330::-;3769:11;;4601:4;;-1:-1:-1;;;;;3769:11:21;3747:10;:34;3739:106;;;;-1:-1:-1;;;3739:106:21;;;;;;;:::i;:::-;;;;;;;;;4639:11:::1;::::0;4632:70:::1;::::0;-1:-1:-1;;;4632:70:21;;-1:-1:-1;;;;;2283:32:22;;;4632:70:21::1;::::0;::::1;2265:51:22::0;4688:4:21::1;2332:18:22::0;;;2325:60;2401:18;;;2394:34;;;4617:12:21::1;::::0;4639:11:::1;::::0;4632:32:::1;::::0;2238:18:22;;4632:70:21::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4617:85;;4721:7;4713:41;;;::::0;-1:-1:-1;;;4713:41:21;;2923:2:22;4713:41:21::1;::::0;::::1;2905:21:22::0;2962:2;2942:18;;;2935:30;-1:-1:-1;;;2981:18:22;;;2974:51;3042:18;;4713:41:21::1;2721:345:22::0;4713:41:21::1;4785:13;-1:-1:-1::0;;;;;4770:37:21::1;;4800:6;4770:37;;;;160:25:22::0;;148:2;133:18;;14:177;4770:37:21::1;;;;;;;;-1:-1:-1::0;4824:4:21::1;::::0;4505:330;-1:-1:-1;;;4505:330:21:o;3995:504::-;3769:11;;4087:4;;-1:-1:-1;;;;;3769:11:21;3747:10;:34;3739:106;;;;-1:-1:-1;;;3739:106:21;;;;;;;:::i;:::-;4120:1:::1;4111:6;:10;4103:55;;;::::0;-1:-1:-1;;;4103:55:21;;3273:2:22;4103:55:21::1;::::0;::::1;3255:21:22::0;;;3292:18;;;3285:30;3351:34;3331:18;;;3324:62;3403:18;;4103:55:21::1;3071:356:22::0;4103:55:21::1;4189:11;::::0;:36:::1;::::0;-1:-1:-1;;;4189:36:21;;4219:4:::1;4189:36;::::0;::::1;971:51:22::0;4229:6:21;;-1:-1:-1;;;;;4189:11:21::1;::::0;:21:::1;::::0;944:18:22;;4189:36:21::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:46;;4168:126;;;::::0;-1:-1:-1;;;4168:126:21;;3634:2:22;4168:126:21::1;::::0;::::1;3616:21:22::0;3673:2;3653:18;;;3646:30;3712:34;3692:18;;;3685:62;-1:-1:-1;;;3763:18:22;;;3756:31;3804:19;;4168:126:21::1;3432:397:22::0;4168:126:21::1;4325:11;::::0;:43:::1;::::0;-1:-1:-1;;;4325:43:21;;-1:-1:-1;;;;;4026:32:22;;;4325:43:21::1;::::0;::::1;4008:51:22::0;4075:18;;;4068:34;;;4325:11:21;;::::1;::::0;:20:::1;::::0;3981:18:22;;4325:43:21::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4304:111;;;::::0;-1:-1:-1;;;4304:111:21;;2923:2:22;4304:111:21::1;::::0;::::1;2905:21:22::0;2962:2;2942:18;;;2935:30;-1:-1:-1;;;2981:18:22;;;2974:51;3042:18;;4304:111:21::1;2721:345:22::0;4304:111:21::1;4449:13;-1:-1:-1::0;;;;;4431:40:21::1;;4464:6;4431:40;;;;160:25:22::0;;148:2;133:18;;14:177;4431:40:21::1;;;;;;;;-1:-1:-1::0;4488:4:21::1;3995:504:::0;;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2543:215::-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;971:51:22::0;944:18;;2672:31:0::1;825:203:22::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;735:10:8;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:8;1901:40:0;;;971:51:22;944:18;;1901:40:0;825:203:22;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;196:173:22:-;264:20;;-1:-1:-1;;;;;313:31:22;;303:42;;293:70;;359:1;356;349:12;293:70;196:173;;;:::o;374:254::-;442:6;450;503:2;491:9;482:7;478:23;474:32;471:52;;;519:1;516;509:12;471:52;542:29;561:9;542:29;:::i;:::-;532:39;618:2;603:18;;;;590:32;;-1:-1:-1;;;374:254:22:o;1033:186::-;1092:6;1145:2;1133:9;1124:7;1120:23;1116:32;1113:52;;;1161:1;1158;1151:12;1113:52;1184:29;1203:9;1184:29;:::i;:::-;1174:39;1033:186;-1:-1:-1;;;1033:186:22:o;1446:184::-;1516:6;1569:2;1557:9;1548:7;1544:23;1540:32;1537:52;;;1585:1;1582;1575:12;1537:52;-1:-1:-1;1608:16:22;;1446:184;-1:-1:-1;1446:184:22:o;1635:423::-;1837:2;1819:21;;;1876:2;1856:18;;;1849:30;1915:34;1910:2;1895:18;;1888:62;1986:29;1981:2;1966:18;;1959:57;2048:3;2033:19;;1635:423::o;2439:277::-;2506:6;2559:2;2547:9;2538:7;2534:23;2530:32;2527:52;;;2575:1;2572;2565:12;2527:52;2607:9;2601:16;2660:5;2653:13;2646:21;2639:5;2636:32;2626:60;;2682:1;2679;2672:12"},"methodIdentifiers":{"owner()":"8da5cb5b","oysterToken()":"fd994c16","receiveTokens(address,uint256)":"35729130","renounceOwnership()":"715018a6","sendToken(address,uint256)":"412664ae","transferOwnership(address)":"f2fde38b","viewTokensVault()":"1f4aad2a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_oysterToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensRecieved\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oysterToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"musicContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"receiveTokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"musicContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sendToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"viewTokensVault\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OysterToken.sol\":\"OysterVault\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xaa7f0646f49ebe2606eeca169f85c56451bbaeeeb06265fa076a03369a25d1d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee931d4e832385765967efe6366dcc6d00d6a2d794f9c66ee38283c03882de9c\",\"dweb:/ipfs/QmR6SkuJGYxpQeLz38rBdghqaWqEPfzUsL9kBoXgEXKtbD\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x27dbc90e5136ffe46c04f7596fc2dbcc3acebd8d504da3d93fdb8496e6de04f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea8b92e4245d75a5579c10f22f118f7b4ba07c57341f181f0b2a85ff8663de3\",\"dweb:/ipfs/Qme3Ss5ByjmkxxkMdLpyu7fQ1PCtjNFH1wEFszt2BZePiG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a\",\"dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x10eb97d047f8d84fe263a02bb4a656ac6674f6679d74532cc37546289e073a9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e41287d40b0c46982f1083d40d32de2761f009c5c51627fe79a7feb0ab1cf5c\",\"dweb:/ipfs/Qme7dbh6HX3ZvUJdbQAcVqXkmyXyfcLiUZRhhon3cU6K8p\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/OysterToken.sol\":{\"keccak256\":\"0x20584105d921d1d35c0820e7d6d888eb1d7c9934c74ca81a4dc3a78ec4570ad9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f1d35eb36921ee7ff351c7dcbb70d412498c4f0fcb85368726bf6c8d4f17c929\",\"dweb:/ipfs/QmZQsmrnfPjsNtTnKg1Ao7wngKNyefyemdsPd4z7q1BqDg\"]}},\"version\":1}"}}}}}